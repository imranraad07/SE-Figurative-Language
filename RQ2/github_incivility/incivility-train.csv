,comment_id,text,label
0,384634593,"Hello all, my first post so go easy. I want to just say that I love Jekyll, I'm now using it on a lot of my web builds. One thing that has bothered me though, is that I've not been able to take advantage of the latest Jekyll features because a lot of the 3rd party CMS solutions I rely on for my clients use (cloudcannon, siteleaf and forestry) simply don't run the latest versions of Jekyll themselves. This forces me to have my folder structures in a really messy state and not take advantage of the latest features when developing locally. So if anyone at Jekyll could bend a few arms to get them to update that would be fab.
",civil
1,383291972,"Yes! Thank goodness for progress, and @randomascii, for his incredibly helpful blog posts on analysing the data. Learned so much from him! Huge props!
",civil
2,716060692,"Alex, sorry, I had gathered that you're recognized as the principle Windows maintainer. I didn't mean to invent a title.
",civil
3,416798591,"Lerna team, thank you for taking a stand 👏🏼👏🏼👏🏼
",civil
4,554512562,"@krzysztofwos IANAL but the typo fix is too trivial to be protected in the court of law. And even if it wasn't it's always possible to simply rephrase the sentence.

Regarding the rest of your comment, I do not think it is reasonable to put a man's livelihood in a perilous position just to make a point. One must learn to pick his fights, so to speak. :)
",civil
5,222833331,"@a-siva what CL? This one? https://codereview.chromium.org/1559053002/ created 4 months, 4 weeks ago that has merge conflicts and by now should be redone from scratch as upstream continued development while the code stalled?

@iposva-google said 3 months ago that one of the stalls was:

> Thirdly, we have learned that there is more commonality between related OS platforms than initially meets the eye at least when working in the Dart VM code base. The split between Linux and Android was mentioned here and we have come to the conclusion that it was a mistake.

Is moving the .*_openbsd files to third_party a solution to this? Seriously?

The other reason for stalling was running a build bot. Apparently it was so important that no one since January replied to my offer of self hosting a build bot for the platform.

> We talked about this and came up with a proposal that might help us get support for OpenBSD landed while addressing some of the raised concerns.

I'm happy that you talked. It's quite sad that not all of the interested parties were invited to the table.

",civil
6,385313083,"I would like to see [reading metadata in separate files](https://github.com/jekyll/jekyll/issues/1082).
",civil
7,386843679,"I'd love to see Docker volume mounts work with Jekyll and Docker for Windows.

Rails, Flask, Phoenix and Node applications that I've worked with all work fine in Docker for Windows. You volume mount in the code, make a change, and in milliseconds your change is reflected and ready to be seen in a browser.

With Jekyll 3.8, this does not happen. The file change is reflected inside of the container, but the `jekyll serve` command doesn't regenerate the file. Using `--force_polling` also doesn't work.

Everything works fine under WSL (without Docker) but Jekyll is the only reason I have Ruby installed on my machine, mainly because every other app from every other language / framework works wonderfully with Docker.

Call me crazy but I don't think 4.0 should ship until this is addressed. Not being able to Dockerize a Jekyll site for development with Docker for Windows is a huge bummer.
",civil
8,784964380,"> So far you have not addressed any of my points, instead you keep spouting some weird mix of anti-tab religious zealotry and corporate PR talk.

If i've missed any points, i apologize.  There's a lot being discussed here, and i likely missed it.  Feel free to point it out once this is unlocked and i'll respond as best as i can.

> because something could break while at the same time you are totally disregarding that it has already been broken for us, hence the bug reports.

i'm not disregarding this.  I'm just providing some insight that sometimes it's better to just stick with a regression versus introducing multiple regressions at multiple points in time.  i definitely commiserate with the initial regression being unpleasant.  However, with a rewrite the size of roslyn *and* the entire formatting engine being rewritten *from the ground up* it was unfortunately the case that this did happen.  However, now that we have the current system, i would be loathe to potentially have this same thing happen *again*.

I totally get that that can be frustrating.  A group of people (that you are not a part of) is having their needs met, while yours are not.  However, this really is a space where potential changes risk very bad outcomes for many groups.  As i mentioned in https://github.com/dotnet/roslyn/issues/24031#issuecomment-784574391, this code is *the* most complex in the entire codebase for me.  Changes to it are both non-trivial and carry a large amount of risk.  Just a few days ago i discovered something new and unexpected about it for me, and i had to completely give up on a refactoring here because there was a part of this whose behavior was too subtle and complex to fully understand and i had to timebox myself out of it.

--

Again, I'm happy to help clarify any of my statements, or address any points i may have missed.  My hope was to try to provide some clarity on the challenges here as this isn't really a case of: ""oh, this is just a bug with a trivial solution"" but rather more like ""this is a potential mine-field that we have to be very careful of"".

Also, as per https://github.com/dotnet/roslyn/issues/24031#issuecomment-784436432, i would be happy to continue this discussion in realtime on discord or gitter.  It might be more conducive than here as we can cover a lot more stuff, and we can make sure any particular questions/concerns you have are responded to.  If you are interested, LMK and i'm happy to meet up with you at practically any time.  thanks!
",civil
9,166933212,"@mulander any update on your effort? I would really love to see DartVM on the BSD's (FreeBSD in particular) ... and I would like to help .. just don't think I have the needed skills.

",civil
10,382903271,"@powercode - Okay, we have some suspicions as to what's happening here (thanks CD for your help with this 😀)

Could we ask:
1. What is the size & resolution of your screen?  15.6"" @ 3200 x 1800?
1. What DPI scaling factor are you using?
1. What is the font face & size of your affected Console(s)?
1. Does this problem disappear if you decrease your Console font size to ~12pt when running at 200% DPI?

BTW - MANY thanks for capturing traces - they've been ENORMOUSLY helpful!
",civil
11,394940176,"@jlukic

The project needs lifesaving measures as it's community is dissatisfied enough to be discussing forks. I want to see this project live, and if forking it is the only way to get maintainers that then I'm behind it... You have good intentions for your project, and want to see it succeed. However, it's being smothered by inactivity and the inability of other members to step in.

The `dead project syndrome` is already rearing it's head when pull requests to fix bugs are being auto-closed due to inactivity... I see new bug reports and KNOW that I can fix it, but why bother if it's for naught and the fix gets ignored. **I love Semantic UI**, and if this project where to come back to life would happily set aside a dedicated amount of time to find and fix issues on a regular basis. I've stopped paying attention to the project over the last year, and even explored other UI libraries because it no longer seems to be moving forward.

It's at a critical point now, other passionate members are literally begging for the ability to maintain a project they love. I'm sure they want to avoid a fork, we need active maintainers that can keep this project running while you are sorting out funding. There are even members trying to maintain their own forks/versions.

",civil
12,524571988,"Its an adware and includes malicious code which runs advertisement,

Report it to npm


",civil
13,7240,"I just installed the current vcpkg and encountered this as well. I've read through [#6551](https://github.com/microsoft/vcpkg/issues/6551) and [#3345.](https://github.com/microsoft/vcpkg/issues/3345) I see these closed but don't see any resolution.

What I do see is that Norton is very, very unhappy on my system with this tool. I've gotten SONAR reports about the metrics upload (and I'll also put in a vote for making metrics opt-in. I'm surprised that it is opt-out, and not terribly well documented opt-out). Norton is now saying that it needs to restart to finish cleaning out the security risks.

This is not the level of security awareness I expect Microsoft to have. Minimally fix this to be opt-in. Beyond that, work with your security teams to get the uploader qualified by at least the major vendors.

",civil
14,450413054,"If I see a tutorial on an external website it soon or later will become obsolete.

If I see a tutorial on main site I think that must be ok, tested, and updated.

Simply. Close this issue

A company that does not understand the need of a full doc do not will offer a serious support in the long time

Bye bye.
",civil
15,509864230,"I don't think this is fixed?

The changes in #1093:

- set the default binding to `ctrl+shift+c`
- and even if we could rebind the default to `ctrl+c`, doesn't implement the copy-if-text-selected-or-send-ctrl+c semantics discussed in https://github.com/microsoft/terminal/pull/1093#issuecomment-498829169

I apologise if I've misread any of the code.

I've been fighting years of muscle memory this last week because ctrl+c doesn't work; I realise it may seem like a triviality, but I think it's important for user experience.
",civil
16,728662905,"And I still don't understand why you try to push us into a chat channel that could have random topic float around together all the times and idea would be scattered while discussing here is on the problem itself and categorized on the topic

And not only I don't like decision you made. The reasoning of the rejected are not understandable. Why you can conclude that it would have minimal usage? What is the scenario you had in mind?
",civil
17,422386196,"@jlukic

> Solving UI for the web through open source and SUI is the core goal of my professional life—a project I expect to continue for many more decades to come.

I do applaud that! 🎉 I like ambitious goals. At the same time I must mention one thing: **you will not succeed on your own**.

In that regard I find it highly confusing - and disrespectful imho - that you chose to ignore all suggestions to delegate power to trusted contributors who would like to help you to maintain SUI 2.x. Which would _reduce_ your already high work load.

### Solving UI for the web

This task is too great to be solved by a single person. The key here is not to solely depend on your brainpower - instead, multiply by giving others authority. I know you know this. You already talked with others about splitting up the workload, but your actions currently tell another story.

If ""Solving UI for the web"" **truly** is your goal, then I'd advise you to rethink your stance on delegation.

You already showed you have what it takes to do this! You built this awesome ship which *could* solve UI for the web. But it's gotten too big for you to micro manage every damn aspect of it. Let others help you with its navigation!

PS: You will still be the captain ;)
",civil
18,524570762,"I encourage everyone to report this package to npm as its breaking their rules and harmful for npm ecosystem and its atacking users computer.

Whats the difference between a virus which opens a website and this package?
Since npm does not have a ad policy
This package has to be removed from npm

Please report
",civil
19,477425296,"Thanks @gaearon! Keep up the great work.
",civil
20,751278315,"It seems here that Microsoft is taking an active approach to kill VB actively (as opposed to passive approach - just let it die by abandoning it). :-(
",civil
21,462479272,"Just updated to `4.3.0`. All of the font sizes are messed up.

I use this custom `mixins` with the Bootstrap 4: https://www.smashingmagazine.com/2015/06/responsive-typography-with-sass-maps/

I am confused because I add this `mixins` to as own which should not effect any updates from Bootstrap. All of updates below 4.3.0 are fine.

When I inspect it, it looks like outputting the SASS.
`font-size: (null: 3rem, 1.2, lg: 2.6rem, md-max: 1.6rem, xs-md: 1.5rem); `
",civil
22,643666482,"I don't feel like this is something people have actually complained about. When we've made these changes in the past (for example in child_worker.suicide) it was guided by someone acting in good faith feeling strongly about the terminology.

If someone from the project's base does feel strongly about it - I suggest we rename it, though `master` is the default git branch name so I would caution we pick our battles.

I vote we:
- Don't change the name from master to something else currently.
- Change it when a contributor/collaborator feels strongly enough about this.

Of course, if you @trivikr personally feel strongly about this then I support you :]
",civil
23,322870326,"My apologies if I sound defensive or aggressive. This is a topic that's come up several times but I'd never had someone willing to actually argue the case before so I was finding this conversation very useful in teaching me what the reasoning behind the request was. Please don't take my argumentative tone as dismissive, I'm very interested in your input here.

Please don't feel you have to reply. I'm commenting here so that there is transparency regarding the issues that we would have to resolve before we're able to make a decision or design one way or the other. This is basically just a Socratic dialogue. Your participation is welcome but certainly you should not feel that it is your responsibility to defend your proposal.

----

I've no doubt that JSX is ""hot"". In React, the non-JSX syntax is a lot worse than the alternative syntax proposed in this issue (the one that looks like our current code but without the ""new"" and ""const"" keywords). What I'm trying to understand is whether the same reasons that JSX is ""hot"" in React apply to Flutter.

Regarding TypeScript doing JSX, In 2012 I was involved in efforts to specify [E4H](http://www.hixie.ch/specs/e4h/strawman), and even before that there was [E4X](https://en.wikipedia.org/wiki/ECMAScript_for_XML). Both efforts died. So it's important to me that we understand what exactly it is people like about JSX vs other syntaxes.

Parsing XML isn't easy, parsing sort-of-XML-but-with-curly-braces-somehow is not easy either. Parsing sort-of-XML-but-with-curly-braces-somehow-that-is-embedded-in-another-language is even less easy. However, how easy that is to implement probably isn't a big deal because it's going to be implemented once or twice and then the library that does it will be reused. (I've been heavily involved in writing the specs for parsing HTML and been involved in similar work for XML, and I've implemented a parser for Dart, so I have a pretty good idea of how difficult parsing markup languages vs programming languages actually is.)

> What I like about putting XML inside another language is that it provides a cognitive separation between the two because XML is very distinct from programming languages. Just scrolling through the source file you can easily see what is code and what is declarative markup. Can't accomplish that with dart code pretending to be markup.

But why is it beneficial to be able to do that?

It's pretty obvious when scrolling through Flutter apps where the build functions are (they're the giant nested expressions). What is it about ""declarative markup"" that is important to separate from ""code""?

> Stop nit-picking things that are not fully specified. All your doubts have answered for it just learn more about how that was handled in JSX. I just don't have the time for this here.

As far as I can tell, JSX doesn't handle the things I was asking about. For example, React doesn't have the concept of child slots. The closest thing I could find is something they do by switching back to JS then back to JSX inside that, so you'd need to be able to parse both the programming language and the markup language.
",civil
24,323091842,"> What I'm trying to understand is whether the same reasons that JSX is ""hot"" in React apply to Flutter.

Yes, the exact same thing applies here. The current way looks good to you because that's the only option you have. Give people a second option and the same will happen.

Whether E4X died or not is irrelevant because nothing lives forever. I have used ActionScript with E4X a lot and thought that Adobe did an excellent job there. In a way Flutter is just a newer version of Adobe Flash with Flex apps.

> (I've been heavily involved in writing the specs for parsing HTML and been involved in similar work for XML, and I've implemented a parser for Dart, so I have a pretty good idea of how difficult parsing markup languages vs programming languages actually is.)

Great so you know that parsing a markup language is trivial compared to parsing an imperative programming language.

> But why is it beneficial to be able to do that?

Code readability and simplicity which in turn drives a whole bunch of other benefits.

> It's pretty obvious when scrolling through Flutter apps where the build functions are (they're the giant nested expressions). What is it about ""declarative markup"" that is important to separate from ""code""?

On your giant nested expressions can you easily see structure? can this structure be easily manipulated by other tools like GUI builders interchangebly ? I mean like Adobe Flex Builder use to do, drag and drop widgets around, wire them on UI and then switch to code view and just edit anything you want and then switch back to gui mode and continue to manipulate the widgets. You can't do that easily when the programmer goes inside your ""giant nested expressions"" and writes any valid dart code that doesn't follow the structure that the GUI editor is expecting. With a fixed XML structure that is not a problem.

> As far as I can tell, JSX doesn't handle the things I was asking about. For example, React doesn't have the concept of child slots

It handles it just fine, you just don't know how to do it. So going forward just put the example in question here and I will provide you with what I think the JSX version should be.

```dart
new ListTile(
title: new Text('CineArts at the Empire',
style: new TextStyle(fontWeight: FontWeight.w500, fontSize: 20.0)),
subtitle: new Text('85 W Portal Ave'),
leading: new Icon(
Icons.theaters,
color: Colors.blue[500],
),
),
```
```dart
<ListTile>
<title>
<Text style={{fontWeight: FontWeight.w500, fontSize: 20.0}}>
CineArts at the Empire
</Text>
</title>
<subtitle>
<Text>85 W Portal Ave</Text>
</subtitle>
<leading>
<Icon data={Icons.theaters} color={Colors.blue[500]}/>
</leading>
</ListTile>,
```

It looks longer than the dart version but I could had placed everything in the same number of lines. Thing is an IDE/Editor can provide '+' & '-' to expand and collapse these XML nodes anyways.

Make Flutter look familiar to React developers and you have a chance of attracting a bunch of new users to Flutter.


",civil
25,529573316,"a few people have been asking me today about pip install 32 bit tensorflow support.
",civil
26,233673845,"Interoperability should be implemented using open standards and lightweight technologies such as RESTfull web, micro services. XML is supported if you'd like.

Stop invest in dead technologies such as WCF and VB.NET, spending tremendous amounts of resources to nowhere, instead of spending for something good.

",civil
27,381637584,"Understood. Agreed. I will step away and unfollow understanding how my mouth often gets me in trouble.

Farewell and good luck to all of you
",civil
28,709537130,"Honestly, this issue made me re-consider of cross-platform frameworks being owned by the same company (Google here) will be supported at best, and ignoring quality metrics delivery on other platforms (iOS).
This issue has no problem on Android, but _it is_ on iOS. I think if it was on Android, it will be solved faster.
Anyways, Flutter is great, but please ensure issues are solved with the same priority on both Android and iOS.
",civil
29,87339,"
Issue Type: <b>Bug</b>

I saw a red clothing item earlier in the bottom left corner of the window. It reminded me of when my parents were still alive, and brought me such indescribeable joy to see it while coding. When I updated my VSCode, it was gone. I have to assume this was a bug. Where did it go? The last thread I made on this topic was locked by accident. I posted it on my tumblr and sent it to several news outlets but it was locked, and so unusable, so I made a new one to hopefully get some resolution to this issue. This time I'll be taking screenshots to ensure that the Github Issue record doesn't become unuseable.

VS Code version: Code 1.41.0 (9579eda04fdb3a9bba2750f15193e5fafe16b959, 2019-12-11T18:37:42.077Z)
OS version: Windows_NT x64 10.0.17134

<details>
<summary>System Info</summary>

|Item|Value|
|---|---|
|CPUs|AMD Ryzen 3 1300X Quad-Core Processor           (4 x 3793)|
|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>metal: disabled_off<br>multiple_raster_threads: enabled_on<br>oop_rasterization: disabled_off<br>protected_video_decode: unavailable_off<br>rasterization: enabled<br>skia_renderer: disabled_off<br>surface_control: disabled_off<br>surface_synchronization: enabled_on<br>video_decode: enabled<br>viz_display_compositor: enabled_on<br>viz_hit_test_surface_layer: disabled_off<br>webgl: enabled<br>webgl2: enabled|
|Load (avg)|undefined|
|Memory (System)|7.94GB (3.46GB free)|
|Process Argv||
|Screen Reader|no|
|VM|0%|
</details><details><summary>Extensions (1)</summary>

Extension|Author (truncated)|Version
---|---|---
csharp|ms-|1.21.9


</details>
<!-- generated by issue reporter -->

",civil
30,557929239,"I am new to Microsoft terminal (v0.6.2951.0) and am starting to warm up to the idea of having access to powershell, cmd, ubuntu/wsl and azure cloud shell baked directly into a native Windows 10 app.

BUT, I was pulling my hair out today trying to copy the contents of a Ubuntu console, and would have assumed this functionality was baked in by default to a modern Win10 app. I acknowledge the ctrl-c issues above, but why not enable the copy functionality through a right mouse click, like that implemented in the more modern cmd versions? If you open cmd using Windows terminal there is no right click options enabled, whereas using the old cmd you get:
![image](https://user-images.githubusercontent.com/3229632/69501798-3f30ec00-0ebd-11ea-97ce-f12331226c54.png)

It'd be great if a future version of Windows Terminal baked this in by default across all shells - it's really useful to have
",civil
31,584966494,"@drieseng

> It would be a great loss for the .NET community if you'd stop contributing. If you consider my comment to be negative, just tell me and I'll happily remove it.

I wholeheartedly agree with that. @mikedn has contributed greatly and we totally appreciate all the skills & expertise for that reason. But we need to be careful that we don't use valuable contributions as a currency to offset disrespectful behavior.

@mikedn

> I have no idea why terrajobst felt the need to comment on it after more than a month.

Purely practical reasons -- I was only made aware of this issue today and I believe what I said needed to be said.

Our goal is to create an inclusive and respectful community and that includes all of us: Microsoft employees, frequent contributors, and newcomers. But these are only hollow words unless we're willing to drive change where necessary. And that includes reminding people to be respectful if their actions aren't and removing people who refuse to do so. From looking at the OSS ecosystem and listening to other communities it's clear to me that ignoring toxic behavior in the spirit of taking the high road does nothing but normalizing said toxic behavior. That's why I said what I said.

> Well, I appreciate they're appreciated but at the same time I don't really care. I did not contribute to get praise, I only contributed for the fun of it.

I can very much relate to that. Thus, I'd ask you to consider that this applies to other people as well. As far as I know, the vast majority of folks working on .NET do that because they love working on this stuff.

But how much fun do you think it is to hear that someone you respect tells you that you don't know what you're are talking about?

Code reviews and PR discussions are often controversial *because* people care. We're all guilty of saying things that come across much harsher than we intended. Being respectful doesn't mean not making mistakes, it means unwillingness to learn from them and/or doubling down on them. And I for one am not willing to tell people to suck it up because that's just the culture we have. We generally don't have that culture internally or with our community. And the places where we do I consider it a defect that needs to be fixed.
",civil
32,386769747,"it would be great to have more interactions with github, like pulling profile information (contributions, avatar, ), releases data - and convert it for proper publication. this would be vital for software website to create team and download pages that would not require multiple code changes. currently working with current available plugins, this solution lacks stability since there's too many plugins that should be constantly updated. would be glad to help if this will go further!
",civil
33,817034639,"Thank you for the clarification it helps a lot, and does make me feel better.

> Generally I believe the answer to your question is that we're reasonable developers, and if there's a reasonable reason to backport a fix, we'll consider it. However, if what you mean is that we should stop our work on Yarn 2+ and resume the v1 trunk as if nothing happened, then it indeed won't happen.

My concern was because I saw PRs to Yarn 1 being closed because the build breaking bugs fixed by them were addressed in Yarn 2. I don't expect you to drop everything and have core members continue patching Yarn 1. However, I would expect you to continue to accept community provided fixes for outstanding problems.

I get the desire not to do this, and as a stand alone project I thought you were totally justified in just saying ""no, we've moved on"". But as something that's going to be bundled with Node and expand the core ecosystem I would expect more I guess.
",civil
34,395749371,"@jlukic  : agree with prudho, donaggio (and many others) : tasks as bug fix, minors improvments, answering question about using, writing documentation are taking lot of times. It seem you've big community who love SUI and agree your mind. People are ready to help u for improving this great framework.
Giving all this things to other and keeping your time for deeping development may be win-win for all :
- for you, cause you can use 100% time for your (great) goal
- for community cause talented people are ready to help
- for users cause they'll find answers and see project is alive and active (what's more frustrating / dissuasive for dev to see dead repo ? almost if they are professional dev or Decision-makers in enterprise).

I agree your mind but really sad about results...  :-|

PS : sorry for my poor english, frenchies are really bad with it :-)
",civil
35,532776533,"more people have asked me private for a fix today
",civil
36,384153347,"First would like to say thank you to the Jekyll team for all the great work you all do. Jekyll is one my favorite frameworks to work with and I really do appreciate what you guys do!
Ok on to the request it would be great if there was a built-in way to paginate a list Jekyll collection items on a page. I know there is [jekyll-paginate-v2 gem](https://github.com/sverrirs/jekyll-paginate-v2) but it would be nice if there was a built in pagniation that worked for both post and collection items.
",civil
37,592961430,"Hey @nikoladev I'm assuming this is just some code you need to insert into the `head` element. If so, this document will tell you how to customize the html output. Follow the steps and put this script tag in the head tag. I'm not sure what else Yandex needs, but this is generally how google adsense works.

https://www.gatsbyjs.org/docs/custom-html/

I'm going to close this issue as I don't believe it's reporting a problem with Gatsby. I'm happy to keep the discussion going, so don't take this as a negative sign. Please report back if you need continued support! 😃
",civil
38,261758848,"@MartinLion @MartinLion
Thank you to brought up this issue.
I am facing your problem now. I want to upload my IRIS like dataset. Which is 500 rows and 16 columns.
and
Thank you @chenhe95 ,
I have seen your tutorial titled ""Can I go to the bathroom"" , that is a real work , real help to users like us.

And Thank you all developers,
You worked free (or almost free) to deliver this library to people. I appreciate that.

@MartinLion has spirit of learning, I praise that.
Actually stubbornness is a virtue in academic.

",civil
39,383163269,"Ahhhh! Yeah, you're getting hit by the known issue! Anyone else seeing this, you'll likely see perf return to normal if you keep scaling <= 200% and your font <24pt., though not guarantees.

I found the dev owner yesterday and he was literally working on fix for this issue that surfaced elsewhere but is the same root cause!

Re. XPerf/WPA - **I KNOW, RIGHT**!! I was talking with aforementioned dev and was recalling how hard it was, back in the dark ages, to diagnose issues like these without the benefit of detailed perf traces!!

Thank goodness for progress ;)
",civil
40,221595323,"Service Bus binding of WCF is absolutely amazing for building push based reactive applications

",civil
41,432548687,"We are really sorry to hear this. We sincerely hope you will continue to use Gatling. As we explained to you earlier, our team spends time on both projects: our open-source solution and our Enterprise solution, Gatling FrontLine.
The way we decided to split our R&D is as follows: Everything related to Gatling itself, like new support protocols, will be open-sourced (eg. HTTP/2, closed workload model and new feeders features in our latest release); On the other hand, everything related to reporting and automation features is in the scope of Gatling FrontLine. Please note that our Enterprise version helps develop both projects and have a team of 7 full-time employees. We hope you understand.
Anyway, we would gladly continue this talk with you, feel free to contact us directly. We will now close this thread.
Best regards
",civil
42,386685852,"I'd very much love to have native support for Coffeescript in much the same manner as Sass. Thus, we could define in `_config.yml`

```
# Support Coffeescript
coffeescript:
coffeescript_dir: _coffee
output: compressed
```

This way one could create partials of `.coffee` in well-structured folders with all of them compiling minified to one `.js` file, even same way as you have `css/style.sass` with all the imports of individual Sass files.
",civil
43,632421578,"Hi veganaize, first, let me say thank you for sending this PR; I should have done so in an earlier comment. Rejecting the PR is in no way a statement about you, nor your qualifications. Although it's true that Google's public style guides are under-curated (a situation we all lament, but no one has stepped up to address) we care very deeply about the contents of our style guides, and therefore are very conservative in what we add to it. My intent here was to bring closure to this issue, since it had unfortunately sat unaddressed for some time.

You are absolutely right that there are situations where a BOM can matter, and it is reasonable to discourage their use. In our experience at Google this has not been a major issue (admittedly, most internal development happens on Linux, so issues related to `.bat` scripting are indeed something we don't typically run into). Looking into historical internal discussions around BOMs affecting Google Java developers I can find very little, and nothing related to BOMs in the `.java` source files themselves. None of which invalidates your concern, but in our opinion it doesn't rise to a level of severity to merit calling out in the Style Guide. Many best practices are intentionally not included in the guide simply because we don't want to make a ruling we don't have to. We trust teams to identify their own best practices where we don't make stipulations.

Of note, this doesn't appear to be a Java-specific issue, and I notice only the HTML/CSS guide makes any mention of it. Perhaps we should consistently discourage BOMs across all our style guides, but I don't believe it's necessary to make the Java guide an outlier in this regard.

> If I ever make a contribution to Google I will be sure to include that BOM.

I would ask that you do so with good-faith, but *please do* include a BOM if you believe it is relevant. We put a lot of faith in our tooling, and count on developers both internally and externally to help catch places where our tooling falls short. If a BOM breaks something we rely on, we will want to fix it. You might even [get paid](https://www.google.com/about/appsecurity/reward-program/) if you are able to find an exploit related to mishandling of BOMs.

> And here I'd thought that Google workers were above mansplaining. Stupid me.

One of the things I have deeply, deeply valued about my time at Google has been the candid and open discussions around issues of identity, gender inequality, and respect. We continue to fall short in many ways, but I am proud of the effort my peers have made to create a culture that is welcoming and inclusive. I don't believe anything I've said could fairly be labeled mansplaining, but I am sorry that I was curt. Again, thank you for raising this issue.
",civil
44,108364977,"_This comment was originally written by beatg...&#064;gmail.com_

---

I got this error on a gclient runhooks:

________ running '/usr/local/bin/python dart/tools/gyp_dart.py runtime' in '/usr/home/otto'
gyp: Undefined variable dart_target_os in dart/runtime/dart-runtime.gyp while trying to load dart/runtime/dart-runtime.gyp
Error: Command /usr/local/bin/python dart/tools/gyp_dart.py runtime returned non-zero exit status 1 in /usr/home/otto

It looks like it's not set up to run on FreeBSD, but I don't know where to make changes (I don't know anything about gyp).

I searched for dart_target_os, and I found tools/gyp/configurations.gypi, which seemed like the place to add something in (configurations.gypi.patch, it's not very interesting). When I did this, I got the following error:

________ running '/usr/local/bin/python dart/tools/gyp_dart.py runtime' in '/usr/home/otto'
Traceback (most recent call last):
&nbsp;&nbsp;File ""dart/third_party/gyp/gyp_main.py"", line 18, in &lt;module>
&nbsp;&nbsp;&nbsp;&nbsp;sys.exit(gyp.script_main())
&nbsp;&nbsp;File ""dart/third_party/gyp/pylib/gyp/**init**.py"", line 547, in script_main
&nbsp;&nbsp;&nbsp;&nbsp;return main(sys.argv[1:])
&nbsp;&nbsp;File ""dart/third_party/gyp/pylib/gyp/**init**.py"", line 540, in main
&nbsp;&nbsp;&nbsp;&nbsp;return gyp_main(args)
&nbsp;&nbsp;File ""dart/third_party/gyp/pylib/gyp/**init**.py"", line 516, in gyp_main
&nbsp;&nbsp;&nbsp;&nbsp;options.circular_check)
&nbsp;&nbsp;File ""dart/third_party/gyp/pylib/gyp/**init**.py"", line 131, in Load
&nbsp;&nbsp;&nbsp;&nbsp;params['parallel'])
&nbsp;&nbsp;File ""dart/third_party/gyp/pylib/gyp/input.py"", line 2714, in Load
&nbsp;&nbsp;&nbsp;&nbsp;SetUpConfigurations(target, target_dict)
&nbsp;&nbsp;File ""dart/third_party/gyp/pylib/gyp/input.py"", line 2175, in SetUpConfigurations
&nbsp;&nbsp;&nbsp;&nbsp;target_dict, configuration, [])
&nbsp;&nbsp;File ""dart/third_party/gyp/pylib/gyp/input.py"", line 2116, in MergeConfigWithInheritance
&nbsp;&nbsp;&nbsp;&nbsp;target_dict, parent, visited + [configuration])
&nbsp;&nbsp;File ""dart/third_party/gyp/pylib/gyp/input.py"", line 2116, in MergeConfigWithInheritance
&nbsp;&nbsp;&nbsp;&nbsp;target_dict, parent, visited + [configuration])
&nbsp;&nbsp;File ""dart/third_party/gyp/pylib/gyp/input.py"", line 2111, in MergeConfigWithInheritance
&nbsp;&nbsp;&nbsp;&nbsp;configuration_dict = target_dict['configurations'][configuration]
KeyError: 'Dart_FreeBSD_Base'
Error: Command /usr/local/bin/python dart/tools/gyp_dart.py runtime returned non-zero exit status 1 in /usr/home/otto

It looks like the string Dart_FreeBSD_Base is dynamically generated from dart_target_os, but I wasn't sure where to define it. I feel like I'm going down a deep rabbit hole that won't lead me to the solution. I'm sure it's easy, I just don't know where to look.

I don't know anything about gclient or gyp, and I didn't see any documentation in the repo to lead me in the right direction (except the README, which tells me I should be looking in tools/).

If I get time, I'll try to wrap my head around gyp and see if I can figure out where to go from here. Issue #6929 would make this *much* easier (something like chromium's source tarballs that Arch Linux uses).

---

**Attachment:**
[configurations.gypi.patch](https://storage.googleapis.com/google-code-attachments/dart/issue-10260/comment-4/configurations.gypi.patch) (673 Bytes)

",civil
45,7432,"Plase, add a step on the Step by Step Tutorial to demonstrate how to theme the just finished demo app.

## Motivation

1. Theming is not an obvious task for a newbie like me. Also, doc speaks about gem based and 'regular' file themes. It's confusin  a bit.
2. At the end of demo app it's more beautiful to leave in the han of the user a well looking demo

## Idea

Please include istructions on
- how to enable default gem base theme
- how to customized if possible a gem theme
- how to switch to a regular file based theme
- idem, how to customize it

... or ...

Create a guide on how to start theming AND then include previous steps into the new tutorial.

Thanks for this excellent piece of software !!!!

",civil
46,362923057,"> I can't just export everything [through] a single file (pkg.main) because that will work as long as you do not have any naming collision.

Your packages are too big if that is the case. Embrace the patterns of the npm ecosystem.

",civil
47,365237656,"Don’t be so agitated. It’s just a lookup for route in local routing table, no network queries are actually performed.
",civil
48,784575918,"> This is with Always keep TABs option selected. If this is a feature, and not a bug, then someone please explain why, when Always keep TABs is selected, these TABs are being replaced by Spaces?

I believe this may be a bug or a feature depending on ones perspective.  I certain see how it can be a bug.  However, that doesn't mean that just because it's a bug that it is simple to fix or that it is without consequences if changes are made here.  Again, as i mentioned above, the existing formatting system is highly complex (including with likely bugs in it that many have taken dependencies on).  So changes need to be very judiciously made.
",civil
49,385148351,"I would like to see Nested Collections. I know there are alternatives to do this. But still if the Jekyll team can make it easier, that would be awesome.!
",civil
50,384634459,"I can delete it manually. Even attempted to do so during the update, though it still failed with a complaint that the file *didn't* exist. Make up your mind, updater... 😁
",civil
51,735767301,"Wondering if Terminal users are mentally prepared to such amount of social activity in their lives.. switching from 0 social life to this directly might be... overwhelming 😄
",civil
52,656541081,"@calidion

Some respected libraries use semver, they always obey the semver rules and it is very useful for consumers.

If you are going to rant, go to twitter.
",civil
53,513463750,"Don’t underestimate how difficult things like this are from a theoretical perspective.  Humans are much better at figuring these things out than computers.

In the *general case*, the compiler can’t safely deduce that `Generic1<number> —> Generic2<number>` unless both are in the union to be narrowed, because the type parameter might be used for different purposes in both types.

In this *specific case*, though, adding an overload:
```ts
isArray<T>(x: Iterable<T>): x is Array<T>
```
would likely suffice.  I suspect this is probably how Flow does it.
",civil
54,532027042,"A lot of my clients asking for this too. would appreciate a fix
",civil
55,377612742,"Well done, @IdanCo ! It worked nicely for me. Thanks!
",civil
56,374154097,"I have real project with Angular, and the only thing i get while developing - is the hurting. Tons of hurt i get.
You need to be a creator of Angular to make a real successful project with Angular,
",civil
57,298019161,"@cathalgarvey there is a lot of politics behind all these huge software/hardware infrastructures... :-(
Even if we can dream of a clean-slate solution based on pure scientific criteria, I think we have to be pragmatic.
Google does not want to change too much of the TensorFlow architecture. This is why the OpenCL-based architecture has to be very similar, requiring single-source C++ like ""CUDA runtime"" instead  of the lower-level non-single-source OpenCL C solution. In the Khronos realm, the single-source C++ version of OpenCL is called SYCL.
Let's discuss this when you drop by Dublin, for example, since you look to be based in Ireland too. :-)
In the meantime, feel free to contribute to https://github.com/triSYCL/triSYCL and the TensorFlow & Eigen branches dealing with SYCL...
",civil
58,432426435,"Thanks, will have to move to a real open source tool like JMeter instead of gatling.  Sad.
",civil
59,380821365,"I feel your points. They burn us, too.

My guess is, the angular team is very occupied with big topics (elements, ivy, bazel, documentation, ng-conf). The ivy renderer in particular targets some of the pain points you mentioned.

We have two projects running in parallel, one angularjs and one angular5. And nobody here likes to touch the angularjs codebase. angular5 and the ecosystem around it is just wonderful (full template typecheck and linting, clean component interface, typescript by default, the template syntax and one way data flow). So we admire the work the team is doing with the framework. Also that there is always an upgrade path (and not a hard cut like angularjs=>angular2).

My hope is that the team gets back to productive boosting features as soon as the dirty plumbing is done. And no need for another major rewrite (Router4? 😱)
",civil
60,339737680,"Also:

> I introduced a CMake build system

Yay, a million times, yay! We'll pull it into Mesos with `ExternalProject_Add`.
",civil
61,438367830,"Whoa let's all calm down please. @vBlackOut is just trying to help (and clearly english isn't his first language, so give him a break), it seems you're a little too caffeinated here :)

Let's start over in a new issue to avoid this exchange.
",civil
62,703140339,"@weedkiller @bladefist (and everyone else)

As @Aaronontheweb says, pricing a product is hard. If you want to give us feedback on the pricing and explain your situation, this is not the right place to do that.

Please contact us directly
https://duendesoftware.com/contact

thanks!
",civil
63,223074767,"@mulander I understand your frustration at the delay in getting this in. I am trying to move this issue forward and get a resolution. It is possible that moving the files to third_party is not ideal but it does provide us a clean separation of the hosts that the Dart team ships periodically as install ready binaries in a SDK vs other hosts. If you have other ideas on how we can maintain this separation I am willing to listen.

I understand the comment earlier from @iposva-google about the possibility of refactoring the OS specific files to share code but as indicated in that comment we request that you start with a bsd version and look at refactoring later.

",civil
64,387878154,"Make internal linking easier. Like generating a JSON of internals links including anchors.
",civil
65,524575696,"> Feedback welcome!

My two cents:

It's your package and I don't really care what you do in post install scripts since afterall it's open source code and I'm not entitled to anything (thanks for creating standardjs). But I will say that it pollutes install logs and I hope that there is a more reasonable way of asking for funding since this practice will encourage many other projects to do the same and it would be unfortunate for our terminal output logs to look like nascar advertisements after everyone starts doing the same thing, which starts looking like the [tragedy of the commons](https://en.wikipedia.org/wiki/Tragedy_of_the_commons).
",civil
66,416813739,"I'm adding it to all my repos to prevent the lerna project from being used in any of those projects, both open source and commercial. Just as a matter of principal. Adding your political beliefs to your licensing is petty. The irony is that this very project is hosted on a resource owned by Microsoft...
",civil
67,386803866,"I would like to see an automated tool like Webpack integrated into Jekyll to handle Sass and Javascript.
Some of the biggest reasons are auto-prefixing for Sass and the ability to use ES6 syntax that can automatically be polyfilled with babel. I think having an automated tool handle the sass and javascript bits may speed up the compile time of Jekyll.
",civil
68,3117,"# Top level statements and functions

There are at least three somewhat conflicting scenarios around allowing statements and/or functions to be declared at the top level of program text.

First I'll consider each in turn, and point out how they conflict with each other. Then I'll propose an approach for C# to take.

## Scenario 1: Simple programs

There's a certain amount of boilerplate surrounding even the simplest of programs, because of the need for an explicit `Main` method. This seems to get in the way of language learning and program clarity.

The simplest feature to address this would be to allow a sequence of *statements* to occur right before the *namespace_member_declaration*s of a *compilation_unit* (i.e. source file).

The semantics are that if such a sequence of *statements* is present, the following type declaration would be emitted:

``` c#
static class Program
{
static async Task Main(string[] args)
{
// statements
}
}
```

This would make it an error for multiple compilation units to have statements, because you'd get two classes with the same name `Program`. If the assembly is run, it would also be an error to have other valid entry points, such as explicit `Main` methods.

## Scenario 2: Top-level functions

C# restricts named functions to being declared as members of types, as well as local functions. The closest you can get to a notion of ""global"" (or ""namespace-global"") functions is to put them as static members in a class `C` and then say `using static C;` in places where you want to use the functions directly without prefixing with a class name. This adds ceremony to both the declaring side and the consuming side dealing with the class `C`.

The simplest feature to address this is to add function declarations to *namespace-member_declaration*s - the kind of thing you can declare globally or in a namespace.

The functions would be limited in the modifiers that apply: They cannot be `abstract`, `virtual`, `override` or `sealed`. Their accessibility, like that of top-level classes would be `internal` or `public`, with `internal` being the default.

There's a design decision as to which kinds of function member declarations would be allowed: methods are key, but properties, indexers, etc. could also be considered. You could even consider stateful members (fields, auto-properties), and you would essentially get global variables. User defined operators and conversions are probably completely off the table, though, as they have relationships with their enclosing type, and there wouldn't be one.

On the consuming side, the top-level members would be direct members of the namespace, just as top level types are. If the namespace is `using`ed, or is the global namespace, the members are directly in scope.

The implementation would be that a partial class is generated to wrap the members as static members. The class name would probably be unspeakable, and would be chosen in such a way that the same name wouldn't be used twice in the same namespace across different assemblies. If any of the top-level members are public, the class would be public, and marked in such a way that a consuming assembly would know to expose the members directly.

## Scenario 3: Scripting

There is currently a ""scripting dialect"" of C#, where top-level statements and functions are not only *allowed*, but are *the* way the program is specified. It's similar to scenario 1, except that the statements are freely scattered among type declarations. (Namespace declarations are currently not allowed in scripting, but that may change in the future.)

The execution of a script is often performed by a ""host"", that is able to put specific things into scope of the script, as well as access the state of its ""local"" variables. This is enabled by the state being represented as instance fields of a generated class, of which the running script is an instance.

Also, scripts can be executed as individual ""submissions"", one after the other, with subsequent ones being within the scope of their predecessors' declarations, modulo shadowing. In this mode submissions need to be captured as objects, and cannot allow stack-only things such as ref variables. Similarly, scripts are implicitly `async` so that `await` can be used freely, and this also limits the use of certain features.

If we want to add top level statements and functions to C#, we don't want them to conflict with how those work in scripting. Rather we want to compile them in the requisite manner when necessary, but unify on the semantics of the features. This doesn't fully eliminate the scripting dialect, as we would still need to deal with the special directives and ""magic commands"" that it requires, but at the minimum we do need to avoid the same syntax to not mean materially different things.

## Problem

The main conflict between these three scenarios is in how top-level functions are construed. Are they ""local-to-the-main-program"" functions (as in 1 and 3), or are they top level library declarations just like types (as in 2)?

If the former, then top-level functions can only occur as part of a top-level program. They can see the local variables of that program, but they (and the local variables themselves) aren't visible to e.g. adjacent type declarations.

If the latter, then top-level functions can occur everywhere top-level type declarations can occur. They wouldn't be able to access the state of a top-level program, unless we also interpret the ""locals"" of such a program as top-level ""global"" variables. The functions - as well as such global variables if we choose to embrace them - would be members of their namespace, visible to any code in the assembly, and, if declared `public`, to any other assemblies referencing it.

# Proposal: Simple programs

You can squint and imagine a merged feature that serves all the scenarios. It would require a lot of design work, and some corners cut. I do not propose that. Instead I suggest that we fully embrace scenario 1, essentially fleshing out and slightly generalizing the feature sketched out for that scenario above.

The primary goal of the feature therefore is to allow C# programs without unnecessary boilerplate around them, for the sake of learners and the clarity of code. A secondary but important goal is to not introduce a fundamental conflict with scenarios 2 (which we may want to revisit in the future) and 3 (not having the meaning of top-level code differ between ""program"" and ""script"" scenarios).

It should be relatively straightforward to ensure that, while more restrictive than scenario 3, for programs that *are* allowed, the semantics will be approximately the same; enough so that the two don't materially conflict.

The approach more fundamentally clashes with scenario 2, and in its straightforward form it would bar us from extending the feature to embrace scenario 2 in the future. I propose that we build in additional restrictions to keep that design space open.

(If we later find that there's a need for libraries of top-level functions, we can also consider an equivalent to VB's *modules*, which still provide a named wrapper for static members (similar to a static class), but put the names of those members in scope implicitly when the enclosing namespace is `using`ed, instead of requiring an explicit `using static`).

## Syntax

The only additional syntax is allowing a sequence of *statement*s in a compilation unit, just before the *namespace_member_declaration*s:

``` antlr
compilation_unit
: extern_alias_directive* using_directive* global_attributes? statement* namespace_member_declaration*
;
```

In all but one *compilation_unit* the *statement*s must all be local function declarations.

Example:

``` c#
// File 1 - any statements
if (args.Length == 0
|| !int.TryParse(args[0], out int n)
|| n < 0) return;
Console.WriteLine(Fib(n).curr);

// File 2 - only local functions
(int curr, int prev) Fib(int i)
{
if (i == 0) return (1, 0);
var (curr, prev) = Fib(i - 1);
return (curr + prev, curr);
}
```

Note the use of `return` as a top-level statement. We may find that this looks/feels wrong since it's not visibly inside a body of a member.

## Semantics

If any top-level statements are present in any compilation unit of the program, the meaning is as if they were combined in the block body of a `Main` method of a `Program` class in the global namespace, as follows:

``` c#
static class Program
{
static async Task Main(string[] args)
{
// File 1 statements
// File 2 local functions
// ...
}
}
```

If any one compilation unit has statements other than local function declarations, those statements occur first. The order of statement contributions (which would all be local functions) from other compilation units is undefined.

Warnings about missing `await` expressions are omitted.

Normally collision between multiple `Main` method entry points is only diagnosed if and when the program is run. However, we should consider forbidding any `Main` methods suitable as entry points to coexist with top-level statements. Or if we do allow them, we should not allow synchronous ones to silently take precedence over the async one generated from the top-level statements. That precedence was only reluctantly allowed over async `Main` methods for back compat reasons which do not apply here.

The example above would yield the following `Main` method declaration:

``` c#
static class Program
{
static async Task Main(string[] args)
{
// Statements from File 1
if (args.Length == 0
|| !int.TryParse(args[0], out int n)
|| n < 0) return;
Console.WriteLine(Fib(n).curr);

// Local functions from File 2
(int curr, int prev) Fib(int i)
{
if (i == 0) return (1, 0);
var (curr, prev) = Fib(i - 1);
return (curr + prev, curr);
}
}
}
```

## Scope of top-level parameters, local variables and local functions

Even though the `args` parameter and top-level local variables and functions are ""wrapped"" into the generated `Main` method, they should still be in scope throughout the program, as if they were declared with internal accessibility in the global namespace.

This could lead to name collisions, ambiguous lookups and shadowing of imported names. If one is picked by name look-up, it should lead to an error instead of being silently bypassed.

In this way we protect our future ability to better address scenario 2, and are able to give useful diagnostics to users who mistakenly believe them to be supported.

LDM notes:
- https://github.com/dotnet/csharplang/blob/master/meetings/2020/LDM-2020-01-22.md

",civil
69,736227422,"It's a fun-take and I wanted to upvote it for the fun part, but then I thought it may send the wrong message so I had to downvote it, just to not confuse newcomers. ;)

Many people want super-simple stories - the terminal story. They want a terminal, that's the story! But if people want pink ribbon hipster dancing marquee tags in the terminal, well, the terminal can always be as customizable as possible. Perhaps make the themes epic as much as possible. But for me personally? Simplicity. (It's ok to have more options). And the simplest story is to keep it so simple that stories are not necessary. USING the terminal is already the best story. ;)

(Admittedly I am actually more likely to use e. g. KDE Konsole + WSL on windows these days than windows Terminal BUT this is not always possible, and in these cases, then, Windows Terminal is so much nicer than oldschool cmd.exe ...)
",civil
70,224983284,"We have a strong need to run .NET/WCF on Linux, so please add this to the road map!  We have invested heavily in WCF over the past decade and would hate to give up all the WCF benefits others have listed so well just because this was passed over by .NET Core.  We use most features and benefit greatly from being able to customize/extend the framework to suit our needs, such as custom message broker support (alternatives to MSMQ).

",civil
71,535910186,"Closing and locking this issue as it is not acceptable language to use on our issue tracker. Please adhere to our code of conduct https://github.com/angular/code-of-conduct.

@Porkechebure - clearly you are feeling frustrated and angry right now. I can understand how that can happen. It is important that we work constructively to solve our problems and not resort to insults.

Please take a while to cool down and then open a more appropriate issue if you would like a problem with the framework to be addressed.


",civil
72,574055235,"Just having automatic updates install upon next launch would be a perfectly fine behavior.
",civil
73,444022870,"@kendrahavens
Nice proposal to add an extra option.
> Design meeting notes:
In the past we've had conflicting requests on the behavior for tabs within a line of code so we need to add an option for this behavior.

Are there really users that like to keep tabs only on specific parts, like indent?
![tabs-settings](https://user-images.githubusercontent.com/18165738/49427897-d7adf800-f7a4-11e8-9842-6077bbb51952.png)
As the current option does reflect what it should do, to ""keep tabs"" and do not replace them with spaces - This is the behavior as I know it from previous versions and as it is within the C++ text editor - I would prefer an new option that says ""keep tabs only for indent"" for this new behavior. One saying ""Enforce tabs within lines"" would still confuse and let me wonder why I have to check that extra option in situations I already selected ""Keep tabs"".
",civil
74,626575842,"Also, @DirtyF: It would be nice to at least give an explanation before just closing an issue, this way nothing will get resolved,
",civil
75,562312443,"Dear friend, may I respectfully ask where is this documented? My sincere apologies if I missed something.
",civil
76,441807521,"> **But** if one is **not using** _bundler_ in a project (and hence both _Gemfile_ and _Pluginfile_), then they could just add plugins via `fastlane_require` action in a project _Fastfile_ or in an imported _Fastfile_.

If you install a plugin, you always configure fastlane to use bundler: https://docs.fastlane.tools/plugins/create-plugin/#add-a-plugin-to-your-project Plugins are (by definition) gems loaded from rubygems. That is the difference to a local custom action.

Besides that I honestly don't follow any more. Maybe create a new issue with just the actual _problem_ you want to solve, and not suggestion for the solution.
",civil
77,60899671,"My own dataset means the dataset that I have collected by my self, not the
standard dataset that all machine learning have in their depositories (e.g.
iris or diabetes).

I have a simple csv file and I on my desktop and I want to load it inside
scikit-learn. That will allow me to use scikit-learn properly and introduce
it to my colleges to serve our community.

I need a very simple and easy way to do so.

I will be highly appreciated any useful advice.

On 29 October 2014 15:25, jnothman notifications@github.com wrote:

> see #2801
>
> On 29 October 2014 18:07, Alexander Fabisch notifications@github.com
> wrote:
>
> > @jnothman https://github.com/jnothman Should we reopen this issue and
> > add a new section in the documentation? For example in this section:
> > http://scikit-learn.org/stable/tutorial/basic/tutorial.html (""Loading
> > your own data"").
> >
> > —
> > Reply to this email directly or view it on GitHub
> > <
> > https://github.com/scikit-learn/scikit-learn/issues/3808#issuecomment-60882069>
> >
> > .
>
> —
> Reply to this email directly or view it on GitHub
> https://github.com/scikit-learn/scikit-learn/issues/3808#issuecomment-60883212
> .

",civil
78,567498186,"add a Satan Hat!
",civil
79,222286053,"Thanks for input. The implementation of back-end systems needs a mature communication stack, such as WCF. As you pointed out in the thread, a .NET Core positioned on the client side is in my mind taking away the potential of what .NET Core can be.

I'm sure we all can wire basic communication (TCP, HTTP, ...) and then get bogged down into details about message parsing, to get some implementation of back-end on .NET Core. I'll stick my neck out and  claim that WCF takes a lot of plumbing away from development (reduces waste and error prone code), letting us focus on business value. That is the reason why I enjoy WCF so much, and really would love to see support for server side WCF in .NET Core, rather sooner than later.

",civil
80,598823908,"@nikbelikov You can do something like this: https://github.com/gatsbyjs/gatsby/blob/master/www/src/components/script-loader.js (and then you'd use a component for those ads that uses that component, and then you'd use that wrapping component in MDX)

Please in the future be a bit more careful in how you approach soliciting help from this community. We're glad to have you here, and value you using Gatsby, but we want to also be kind in how we request help from the core maintainers of Gatsby.
",civil
81,322606129,"> Less boilerplate, you don't need to say it because it is inherited in the structure.

But why only for some of the properties? And how do you handle cases where there's two child slots, like ListItem? XML-ish syntax just doesn't seem to handle this very well.

Also I'm not really sure it's less boilerplate.

Compare:
```xml
<Container style={style}>
<Row>
<IconButton
icon={<Icon name={Icons.menu}/>}
tooltip='Navigation menu'
onPressed={null}
/>
<Expanded> {title} </Expanded>
</Row>
</Container>
```

```dart
Container(style: style,
child: Row(
children: [
IconButton(
icon: Icon(Icons.menu),
tooltip: 'Navigation menu',
onPressed: null,
),
Expanded(child: title),
],
),
)
```

It's not at all clear to me that the XML-ish syntax is cleaner or less boilerplatey. There's lots more punctuation, and some duplication of content (e.g. in the close tags). And you had to add some names, so sure, you lose ""child"", but you gain ""name"" on Icon.

Also with XML how do you make it clear that Row can take zero, one, or more than one child, while Center has to have exactly one child? What would happen if someone did this?:

```xml
<Center> <Test/> <Test/> </Center>
```

> It's related to (2) because it makes life of toolmakers, specially GUI builders, much easier since they don't need to fully parse Dart;

They wouldn't need to fully parse Dart if we had a Dart parsing API either, though, right? I mean, you'd parse what you want to parse and leave the rest. Also I'm not sure it's actually easier to parse, since it's not actually XML; see below.

> but it also makes reading the code easier.

I'm not at all convinced that the XMLy version here is easier to read. Once you've read a few build functions, you quickly get used to the nested constructor syntax.

> The format of XML is very simple so when you see '{}' you know it is calculating an expression in dart.

It's not actually XML, though, right? It's some variant of XML. Are there well-defined parsing rules for it? For example, is this valid?

```xml
<Test name={describe(""}"")}>
```

How does it know that the first ""}"" isn't the end of the attribute expression, without parsing Dart?

> Same for the opposite, when reading dart code and you see '<Capital' (a less-than followed by a word that is capitalized. example \<Row>) you know that an object hierarchy is being created from XML markup.

You know this today when you see the `new` keyword too, right? Or indeed in the new-less markup proposal above when you see any capitalised word. Is this really a benefit of XML, or are you more familiar with XML than Dart?

> Also in the final XML processor I would avoid passing objects to attributes of parents and instead create child tags as below:

I really don't understand what you're proposing here. It's not well-formed XML at all as far as I can tell. Can you elaborate on exactly what the syntax you are proposing is and how it works? For example, the ""Text"" constructor seems to have disappeared; how does the processor know that <Title> creates a Text widget?


Sorry if I sound defensive or aggressive. :-) This is a topic that's come up several times but I've never had someone willing to actually argue the case before so I'm finding this conversation very useful in teaching me what the reasoning behind the request is. Please don't take my argumentative tone as dismissive, I'm very interested in your input here.
",civil
82,160201906,"Hey Martin,

Kindly don't be offended.

He did not criticize :) He, being one of the top contributors to scikit-learn has to make tough decisions as to what will go into our codebase and what will not, as a more verbose documentation or tutorial might not be preferable for a lot of people. Gael has in fact contributed a lot of user guides himself to scikit learn to help users.

The reason why he was opposing that addition to the tutorial was that there are multitude of ways in which users have their data stored and such a user guide on how to get the input data from all of them (a text file/csv file/database/zipped archive), is indeed out of scope for scikit learn, which is a machine learning library.

The most important thing to note here is that **it is very clearly explained by documentations of libraries which handle data, like numpy or pandas.**

It is expected from the user that he or she knows this! Since it seems to not be very clear, he suggests that we add a FAQ, pointing the user to such userguides, which are more elaborate than we could possibly get :)

It may appear that our tutorial could be a bit more elaborate on how the inputs are obtained. But the thing, in general, with userguides is that, it could _always_ be a little bit more elaborate, which makes us set a hard limit on how detailed our userguides can get, to help contain the userguide in a maintainable format :) If you think from that perspective, you yourself would understand our situation.

As this issue is open someone will indeed send a PR soon adding a nice FAQ entry and an example, maybe, which could help clarify your (or any other new user's) doubts on input formats.

Cheers!

",civil
83,703089759,"> Begging Microsoft to make things like this distracts them from improving core functionality. Microsoft doesn't have to own everything dotnet.

Most of full stack framework out there has official package for crucial things like this (say laravel). Coming from other communities like php, node, etc, dev can build and experiment with everything totally free. This makes it harder for newcomers to learn aspnet core without the support from the community or microsoft officially

Edit: and yes its totally up to the creators if that's their decision

",civil
84,642359660,"Agree @pingfengafei .
Don't let word game anesthetize us, If everyone pays attention, discrimination will slowly disappear, but if we pretend that it has disappeared now, it may exist forever, The more one tries to hide, the more one is exposed.
",civil
85,3808,"Hi all,

I am very new in scikit-learn.

My questions is: how to download my own dataset (csv file).

I will be highly appreciated any answers.

Thanks.
Martin


",civil
86,288321383,"Really nice explanations @IdanCo :+1:

I'm also using Bootstrap w/ Webpack but I have a slightly different configuration regarding the ""Jquery & Tether"" part.

Instead of using this :
```javascript
new webpack.ProvidePlugin({ // inject ES5 modules as global vars
$: 'jquery',
jQuery: 'jquery',
'window.jQuery': 'jquery',
Tether: 'tether'
})
```
which does not inject $ as a global variable but 'auto-require' it when encountered in a dependency, I use the ""expose-loader"" (which, actually, expose global variables ;-) ).

You could use it directly in the webpack config but, personnaly, I prefer using it in my entry file like this :
```javascript
require('expose-loader?$!expose-loader?jQuery!jquery');
require(""expose-loader?Tether!tether"");
```
(yeah, the syntax looks like some sort of incantations or something ;-))

But if you prefer the webpack config way, it looks like this :
```javascript
module: {
rules: [
{
test: require.resolve('jquery'),
use: [
{ loader: 'expose-loader', options: 'jQuery' },
{ loader: 'expose-loader', options: '$' }
]
},

{
test: require.resolve('tether'),
use: [
{ loader: 'expose-loader', options: 'Tether' }
]
}
]
}
```

My 2 cents...
",civil
87,516156769,"@ohjames Thank you so much for doing this! I'm not as familiar with the react code base (clearly from my comments) but if there's anything you need help on to get this going let me know 😬So eager to have this functionality in place.
",civil
88,548541288,"@verelpode @ChainReactive I'm not sure what else can be stated at this point.  The team has put forth their position on this issue and how it is currently prioritized (i.e. in the help-wanted bucket).  I'm available to help out if you, or anyone else, is interested in tackling this from the community.

As a FOSS project, Roslyn thrives on shared efforts by dedicated teams at MS, outside of MS and from community efforts.  It's part and parcel of that that not all work is done internally.  There is effectively interest from many thousands of individuals and groups about what is important, and the way Roslyn effectively manages that is to make it so that the core team itself is not the limiting factor for improvements happening.  This is a virtue of the project, and one of the very specific reasons it is open source.

At this point, i don't think I can add any more help here.  My offers of assistance seem to not be welcome, and the discussion seems to not be providing any actual value toward solving the originally reported issue.

If anyone is interested in solving this issue in the future, see the links provided above for a large group of community members (internal and external) and resources that can help out here.

Thanks all!
",civil
89,176925038,"@keryell Try to push the cause in Seattle ;)

",civil
90,532051271,"another one just asked me for a fix -_-
",civil
91,777701255,"> Again, if they already have the tool why are we putting it in Node.js core? Doing so would _force_ them to change their existing workflows - including involuntarily upgrading users who are on an older version - which seems to be antithetical to the stated goals of Yarn.

I don't think you understand this diff, or how Yarn is distributed. All versions of Yarn act both as a package manager and a jumper (similar, if you will, to `gulp-cli`). If it finds a `yarnPath` entry in `.yarnrc.yml`, it will use it instead of the global one. In other words, older projects will use Yarn 1 (because that's the global version used as fallback when nothing is found), or the checked-in package manager if it finds the right configuration to do so. Put simply, everyone gets what they ask for. There is no ""involuntarily upgrading users who are on an older version"". On the other hand, it does require *a* Yarn to be globally available.

> I can understand where you're coming from here, but this sounds like a pitch to me. It feels like justification of decisions without crediting the potential trade-offs or drawbacks of those decisions.

Let's be clear - you're telling *me* that I don't credit trade-offs or drawbacks, on a project I maintain, for a protocol that was designed a year ago, and for which noone has reported any automated breakage of any system, while still being able to migrate at the time of their choice. At this point I don't know what to tell you.

> Is Corepack still progressing? If so, why are we considering this PR since Corepack would theoretically replace it?

[That's answered](https://github.com/nodejs/node/discussions/37193#discussioncomment-332122).

",civil
92,649879988,"The thread you directed me to is locked. This banner is on my docs too. Docs that I wrote, that my organization relies on. Am I powerless here?
",civil
93,784573533,"> So now you are implying that I don't even know what I want?

Yes.  That's always a possibility.  It's happened numerous times in the past with many requests from many customers.  It's always something that needs to be kept in mind.  Furthermore, it may be what you want, but it may be wrong for other users complaining about something similar.  So navigating all the potential requests and constraints here can be tricky and takes a lot of communication and a lot of thought.  Thanks! :)
",civil
94,315969569,"Sooooooooooooooo slowly！！！！:(
",civil
95,516160873,"@ssunday Nothing more we can really do for this until the maintainers have a look. They haven't commented on any of the related issues and they've been open for months. It's possible to get this working in your own extension of this library by hooking into one private method on ReactShallowRenderer, that's what I'm doing for now. Enzyme could possibly do the same.
",civil
96,598380620,"@solidDoWant , chillrex man...  Many people ""pay a monthly"" and wait patiently for a new feature.
This specific feature requires lot of tech resources and time, no need for such an outcry because it does not help anyone.

They decided to implement it which is great news, crass comments like these do not help anyone.

",civil
97,383594627,"Hi everyone,

This issue overall is very complicated in that it is not easily reproducible and is very dependent on location, network health, and the actual download location of the target box. In many cases the box being downloaded is located on a third party system. One feature that was introduced in Vagrant a couple releases ago was the notification of redirect to show when boxes are being downloaded from a third party server.

There have also been claims that the embedded curl is downloading files slower than the system curl. I have not been successful in validating this claim and do not see a difference in download speed between my system curl and the embedded curl. However, as of Vagrant 2.0.4, the [`VAGRANT_PREFER_SYSTEM_BINS`](https://www.vagrantup.com/docs/other/environmental-variables.html#vagrant_prefer_system_bin) environment variable is available for all platforms. When enabled, Vagrant will use local system binaries if available instead of the embedded binaries. If you observe faster download speeds with your local curl binary, this provides a switch to easily enable Vagrant to use the local binary.

My apologies for the frustration this issue has caused. It is something I have investigated multiple times, but the number of variables involved makes this extremely difficult to get a valid reproduction. I have updated Vagrant's functionality to make the underlying cause more easily understandable where available (redirect notifications) or easier to work around. I am continuing to investigate our options for box downloads from Vagrant Cloud in different regions of the world (which have occasionally presented with issues). However, with box downloads from third party locations, there is little I am able to do to control their available bandwidth or any kind of throttling they may impose.

Cheers!
",civil
98,22859,"This is the worst framework i have ever seen.

",civil
99,374154851,"Yes, Angular is very good if you're developing something not complicated more than ""Hello World"" application. But when you deal with real big scale project - the hurt is the only thing you get.
",civil
100,524577635,"@gc @modeco80 I didn't mean to suggest that anyone disagreeing was acting as part of a mob. It was meant to apply specifically to those people treating a github issue like it's a place for trolling, nasty comments, etc. My apologies if it came off that way.
",civil
101,616246953,"Well I'm having trouble making a reproducer for this. Unfortunately I can't easily attempt to reproduce this on the same hardware where I first experienced the problem because my company network heavily restricts Internet access from my development environment. So I've been trying to reproduce on my home computer, but am only getting essentially identical results between 2.9.5 and 2.9.6. One difference between my work and home environments is that the work env has $HOME mounted over NFS, so I wonder if that has something to do with it. Otherwise, I'm not sure.
",civil
102,272505864,"I think it really has to do with time of day, traffic, alignment of the planets, etc. I haven't had slow speeds in a while. It seems very hit or miss. In fact, if it is slow you and start and stop it with the chance of getting a better connection. I'm not sure this is really the fault of the vagrant framework as much as it is the nature of large bottlenecked downloads.
",civil
103,264172138,"Hi @stack72,

I have complied master from version b15b8bd (Terraform v0.8.0-dev (b15b8bd99aae33c5b68cbecf5aef375c0798147c+CHANGES)), which should include beta2 features. (I did this to get 10337  and 10338 fixes)

It seems it would work if you set a resource to depend on a module, but you cannot set a module to depend_on another module......

Thanks for the great tool btw ;)

Chris

",civil
104,167902244,"Running the tests with:

./out/ReleaseX64/dart tools/test.dart --compiler none --runtime vm --progress color --arch x64 --mode release --checked --report --time --tasks 6 -t60 language

I get 8 tests failed

[08:20 | 100% | + 3777 | -    8]

--- Total time: 08:20 ---
0:07:56.502934 - vm - none-vm-checked release_x64/language/async_await_syntax_test/a15c
0:07:56.375965 - vm - none-vm-checked release_x64/language/async_await_syntax_test/a15d
0:06:03.708446 - vm - none-vm-checked release_x64/language/ct_const2_test
0:05:48.473868 - vm - none-vm-checked release_x64/language/disassemble_test
0:03:23.058061 - vm - none-vm-checked release_x64/language/large_class_declaration_test
0:02:21.911094 - vm - none-vm-checked release_x64/language/async_await_syntax_test/b00a
0:01:34.449744 - vm - none-vm-checked release_x64/language/classes_static_method_clash_test
0:01:17.627236 - vm - none-vm-checked release_x64/language/closure_cycles_test
0:00:42.253910 - vm - none-vm-checked release_x64/language/gc_test
0:00:37.057008 - vm - none-vm-checked release_x64/language/vm/optimized_stacktrace_test
0:00:36.798708 - vm - none-vm-checked release_x64/language/hello_dart_test
0:00:26.233428 - vm - none-vm-checked release_x64/language/async_await_test/none
0:00:19.042199 - vm - none-vm-checked release_x64/language/await_for_test
0:00:14.891542 - vm - none-vm-checked release_x64/language/async_await_syntax_test/b00c
0:00:11.004358 - vm - none-vm-checked release_x64/language/vm/debug_break_enabled_vm_test/01
0:00:09.445221 - vm - none-vm-checked release_x64/language/async_await_syntax_test/e1
0:00:07.805136 - vm - none-vm-checked release_x64/language/async_star_test
0:00:06.947421 - vm - none-vm-checked release_x64/language/vm/closure_memory_retention_test
0:00:04.021573 - vm - none-vm-checked release_x64/language/inferrer_constructor5_test/none
0:00:02.996990 - vm - none-vm-checked release_x64/language/allocate_test

Executing a test in isolation I get this information:

Total: 3788 tests
- 3 tests will be skipped (0 skipped by design)
- 0 tests are expected to be flaky but not crash
- 0 tests are expected to flaky crash
- 3746 tests are expected to pass
- 22 tests are expected to fail that we won't fix
- 15 tests are expected to fail that we should fix
- 0 tests are expected to crash that we should fix
- 0 tests are allowed to timeout
- 0 tests are skipped on browsers due to compile-time error
- 2 could not be categorized or are in multiple categories

So ... I'm confused .....

Can someone give me some guidance on what to look for (thread implementation, etc..) if any of the failed tests are unexpected failures?

I forgot to mention ... The build is done with CLANG:

pbeck@dart:~/dart/sdk % clang --version
FreeBSD clang version 3.4.1 (tags/RELEASE_34/dot1-final 208032) 20140512
Target: x86_64-unknown-freebsd10.2
Thread model: posix

Thanks in advance!
Pedro Costa

",civil
105,450780648,"This is really slick. One of my pet peeves is that I always want fonts on my phone to be bigger, not smaller. I like the limits placed here on the sample site, they seem reasonable and I like that there's a variable for setting the minimum. Well done.
",civil
106,457962127,"@Arcesilas  Hmm... I'm not experienced that, but I'll use it for a while to see what happens.

I would like to keep it simple and avoid ""cheat"" Atom that is using the ""real"" `gvfs-trash`. I don't know if usage changes or etc... But ***especially*** I want to avoid in the case that I use a computer without `sudo` power.

So, I hope don't have to. Thanks for your info. I'll keep an eye on it.
",civil
107,486947877,"This feature should not be default, this should remain optional until all supported browsers handle it.
`$enable-variables` options is here to opt-in for this
",civil
108,631646199,"Microsoft and the PMs here are already aware and are already looking into solutions. This ""Issue"" is just inflammatory and violates the code of conduct. There is an existing (open) issue that is much more civil and constructive.

https://github.com/dotnet/maui/issues/41 and https://github.com/dotnet/maui/issues/58#issuecomment-631436935

Above all else, be kind.
",civil
109,723257917,"We've discussed this issue quite a bit. We the Angular team, strongly believe in building an inclusive community where everyone feels welcome, and we see how especially ng-repeat could be problematic in certain scenarios. It was never our intention.

""ng"" simply stands for a*NG*ular - the two characters in the middle of the name. And the name Angular has its roots in angle brackets that are the key part of HTML syntax that Angular uses.

After reviewing the current names of APIs that are prefixed with ng we concluded that ng-repeat was the only one that stood out as potentially problematic. Fortunately, the latest versions of Angular use [ngFor](https://angular.io/api/common/NgForOf) instead of  ng-repeat. ng-repeat is no longer used by Angular and was deprecated along with AngularJS a few years ago, so this api is no longer used in new development.

For these reasons, we will not make any changes in our current APIs, but we will be very mindful of this problem when creating future APIs. Thank you for bringing it to our attention.
",civil
110,480979256,"> most cases where I've seen this reported as a bug, including the original example above, do not have a space on the line of code that the user did not want to see indented.

That's an interesting pattern observation, but I think you'd like to see this issue fixed and terminated forever, but I fear that if the solution relies upon whether or not that particular space character exists, then it will be precarious and this issue will in future again be reported as a bug, instead of being laid to rest permanently.  Did you dislike the idea of solving it via a tickable option in the Options window?

Another case to remember is **mixed** comment types, such as the following example.  The solution for mixed comments appears to be simple and unambiguous and does not require an option in the Options window.  If the second comment is a different type than the first comment, then the second comment should **never** be indented to match the first comment, thus VS should never produce the following:
```
int ExampleField2;  // Some comment here.
/*
int ExampleField3;
int ExampleField4;
int ExampleField5;
*/
```

",civil
111,460396163,"@trishnaguha somehow your suggestion fails the check. I tried twice via github gui (dont have git installed and no rights to) and I probably shouldn't make any more PR as they will fail.
imo, should merge what works and then iterate not the other way around.  it's ok to not merge the original commit, plugins are fine.
",civil
112,728301628,"@CyrusNajmabadi I think to make right decision for this feature is to create a poll and ask people will they use this feature and would not be it annoying that exist two solutions: static methods and free functions ...
",civil
113,490023091,"Have patience, if there is no release, then Terminal hasn't been released yet for preview.
Also, doesn't hurt to be polite.
",civil
114,395625797,"Hey @jlukic thanks for disabling the bot. I think that will make a major difference for everyone involved.

I can only imagine the stress you must be facing between a project with over 41K stars and the funding challenges.

I do continue to feel pretty disappointed that the active project ownership that is so badly is still not coming in the near term. I guess we come to the inevitable second-choice alternative of forking, though some competitive fork ideas such as <https://github.com/morganbarrett/Vanilla-Semantic-UI> may prove really nice for some members of the community.
",civil
115,524576549,"I don't want to have to view advertisements in my CI logs, and I hate what this would mean if other packages started doing this. Some JS packages have dozens, hundreds, or even more dependencies- can you imagine what it would look like if every package did this?
",civil
116,529667593,"Having the same problem here. Would really appreciate a fix
",civil
117,570655420,"Ok, so I figured it out for my purposes -- finally.

My situation was practically identical to what @diablodale describes.

**SOLUTION**

Even though you have your keys setup and you can do example commands like `docker -H ssh://user@ip ps`, you can still run into auth issues because this extension is specifically making using of the ""ssh-agent"" under the hood.

_**IMPORTANT**: Don't get these steps confused with similar things that can be done in WSL. Things done in WSL do not affect the outcome. This extension does not use WSL under the hood even if you have your terminal configured to use WSL. You must have it setup through the means the Windows OS uses._
1. Follow directions [here](https://code.visualstudio.com/docs/remote/troubleshooting#_setting-up-the-ssh-agent) to enable the Windows SSH-Agent.  This addresses the errors with the ` \\.\pipe\openssh-ssh-agent` in the message.
2. Ensure that you have your SSH keys inside of `<windows user folder>/.ssh/`.
3. Run `ssh-add` from powershell. This was the last part that I was missing and why I would get `All configured authentication methods failed`

In the end, would be nice if these errors were caught and the users were notified of the GUI of what actions might be needed.

",civil
118,567493345,"Please dont put the santa hat back. Put a satan hat back.
",civil
119,224975840,"Having WCF on .Net core is not only desirable, it is essential. At it's current state WCF is THE most universal and mature framework to communicate between devices, and within devices using Named Pipes. Over the wire, it adheres to common standards allowing other platforms to communicate as well. But with WCF running in .Net core, the choice will be easy to make.

",civil
120,375061317,"Well, I’m not a Webpack guru myself, and I’m glad you sorted it out, but just gonna mention that my setup is importing the individual bootstrap.js pieces (so that you can select only the necessary ones), and you are importing the whole package. Which might ofc be fine for you…

Just sayin’

Take care,
Petr

On 21. 3. 2018 16:58 +0000, Connel Hooley <notifications@github.com>, wrote:
> Update: I fixed my issue by using:
> import ""bootstrap/dist/js/bootstrap.js
> Apart from that the docs were enough for me to get going personally.
> —
> You are receiving this because you commented.
> Reply to this email directly, view it on GitHub, or mute the thread.

",civil
121,703220162,"> > Sorry, but this is just an arrogant statement by you.
> > I absolutely don't want to pay anything extra (yearly!!) for such a **very basic** thing like identity in my framework.
>
> > I don't expect some - again VERY BASIC - functionality in my tech stack to change the licence 180°.
>
> Is this really so basic? If it's such a simple thing to do, Brock and Dominick wouldn't be able to create such a product - and you wouldn't be so disappointed at the move to a commercial model; you'd simply roll your own, or fork IS4 and continue from there.
>
> Clearly there's complexity in auth in general and within IS, and let's not pretend otherwise.

Having all the building blocks freely available to flexibly secure an API including a token provider is a very basic requirement of a modern ecosystem. Basic doesn't mean non-complex.

I'm disappointed that such a basic functionality now requires lots of unplanned work and time. It was considered a done thing in my (and I'm sure in countless other) services.
Yes in the dark ages I actually created a `/token` endpoint myself. But as we all agree upon, that is something you don't do anymore in 2020. You let the framework take care of those things that you *just really need* if you have API services. Which I guess is not that unusual. Just basic use cases.

Maybe Keycloak can fill the gap but I actually absolutely love having a .net only stack.
",civil
122,225064435,"Our team used WCF to build an entire SOA platform. Each service is hosted in it's own app domain that provides complete isolation for every service. This allowed us to monitor resources, per service, and unload a service and swap it out with the app hot. I know app domains are gone, but what could possibly replace wcf?

Service Bus + Net Messaging Binding
Net Pipe binding
strongly typed headers and contexts
Behaviors and interception
MEX

you have a super reliable, and extendable set of tools. wcf provides the best tools for building enterprise applications. Without it, you simply end up rebuilding it.

Bringing the power of wcf to other platforms would be huge.

Linux + sql + wcf + service bus + .net core looks good to me.

",civil
123,817180957,"> I'll end by saying that making future decisions based on trust is a mistake. The current maintainers of Yarn might not be the future maintainers of Yarn. Like all projects, maintainers come and go. Future maintainers might have different opinions. Node should make a decision today on what it values and I would hope that ecosystem compatibility, compatibility with the `node` cli, and performance of `node` cli are high on that list. Deferring to future maintainers of other projects won't end well.

Node.js collaborators also come and go, it wouldn't be fair for us current collaborators to make a decision for future collaborators. Also, future collaborators will have more information (hopefully) than we have today, I trust them to make the correct call when the time comes. By a lot of regards, Node.js as it is today is based on trust; I agree that doesn't always work, but as it's written in capital letters in our license file: `THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND`.

> because apparently the decision on this issue has already been made and further input is unwanted.

FWIW decision hasn't been made yet, it has been discussed in TSC meetings and TSC members will vote to decide what is the status of Yarn in Node.js. I'm sorry if you felt your concern wasn't taken into consideration, I think it's simply because you believe, as you said, ""making future decisions based on trust is a mistake"", while other people may not (I don't).
",civil
124,567461210,"> @Kegelcizer Did you just say trans-parent? But it's ok, my conservative belifs can and even should be offended.

I'm deeply sorry for my insensitivity. I hope the edit of my original comment will make it more PC.
",civil
125,398257631,"Thanks for this post!
I was super confused trying to solve this as well and I've even been exposed to .map() and higher order functions previously. I thought for sure there would be a way to solve it with only .filter() because they haven't even said what the other functions do when you get to this exercise, or that it's possible to chain them together. I managed to solve it with a really ugly workaround, still using .map() but forgot about .parseInt() and that you can chain the functions...

```
const filteredIntegers = arr.filter(n => n > 0 && n%2 == 1|| n%2 == 0);
const squaredIntegers = filteredIntegers.map(x => Math.pow(x,2));
```

Cheers!
",civil
126,660447254,"Our customers have complained after opening the application for the first time :(
",civil
127,383509164,"I'm always glad to hear when my blog posts are useful.
",civil
128,135974641,"Don't forget about those instagals! :dancer:

",civil
129,17452,"<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/atom/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Prerequisites

* [x] Put an X between the brackets on this line if you have done all of the following:
* Reproduced the problem in Safe Mode: https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode
* Followed all applicable steps in the debugging guide: https://flight-manual.atom.io/hacking-atom/sections/debugging/
* Checked the FAQs on the message board for common solutions: https://discuss.atom.io/c/faq
* Checked that your issue isn't already filed: https://github.com/issues?utf8=✓&q=is%3Aissue+user%3Aatom
* Checked that there is not already an Atom package that provides the described functionality: https://atom.io/packages

### Description

My issue is the same as in #15949 except it is not fixed.

I am unable to delete file (or directory). When trying, the following message appears: `Is gvfs-trash installed?`

### Steps to Reproduce

1. Try to delete any file or directory
2. ???
3. Profit

**Expected behavior:** Deleting file should delete file

**Actual behavior:** The file is not deleted

**Reproduces how often:** Every time

### Versions

```
Atom    : 1.27.1
Electron: 1.7.15
Chrome  : 58.0.3029.110
Node    : 7.9.0
```
```
apm  1.19.0
npm  3.10.10
node 6.9.5 x64
atom 1.27.1
python 2.7.15
git 2.17.1
```
```
OS: Fedora 28
```

### Additional Information
```
$ gvfs-trash
This tool has been deprecated, use 'gio trash' instead.
See 'gio help trash' for more info.
```
The `gio trash` is supposedly implemented since electron 1.7.2 and for some folks out there this problem was fixed with `Atom 1.25` (which included upgrade to `Electron 1.7.11`) but apparently I am on even newer Atom version, with even newer Electron and it still happens.

### EDIT1
#### More insight on the problem provided by @cutephoton:
> @Devligue This is a legit bug. The _tldr answer_ is that `_g_file_trash` may not be supported. In order for `_g_file_trash` to succeed, the following conditions must be met:
>
> * The file being moved to trash is on the same partition as your home folder
>   **OR**
> * A trash folder already exists or can be created at the mount point and,
> * The trash folder is considered 'safe/secure' by verifying UID and restrictive permissions
>
> **How this should probably be fixed...**
>
> Atom does not have a fallback mechanism like offering the ability to permanently remove a file instead. This would address bring atom in line with gnome's graceful behaviour. The attached image show how Gnome Files (aka Nautilus) prompt the user to permanently delete the file (when trash not supported)
>
> ![gnome's solution](https://user-images.githubusercontent.com/19512121/43511743-0dac32c0-952e-11e8-8af8-e0ef6cb916d0.png)
>
> **Impact: Users with multiple disks and partitions**
>
> Fedora/Redhat/etc: _Impacted_ due to default partition scheme that separates `/` and `/home` in to partitions. Files outside of the `/home` partition cannot be moved to trash.
>
> Ubuntu: Less likely due to partition layout (`/home` is part of the `/` partition)
>
> Conditions where users will be impacted:
>
> * File systems with unix permissions:
>
>   * _Impacted with workaround_ due to typical restrictive top-level directory permissions (root)
> * FAT/non-unix file systems:
>
>   * User Session Mount (i.e. `/run/media/$USER/disk-label`): _No Impact_
>   * Fstab: _Impacted_ even with permissive umask. The default uid/gid is root. It will be unable to satisfy the requirements of a trash folder without additional options (uid/gid/umask).
> * Network shared folders: _Unknown/Did not test._
>
> **Notes/Testing the Root Cause**
>
> Note: Though I am confident that my analysis is decent enough, much of the code I was referencing was unfamiliar/new to me.
>
> Initially I encountered this issue when I put files in a certain location like the reporter above. I created a delete-me file test as suggested above in the relevant directory, `/opt/cupenv`. I ran the command `strace gio trash delete-me.txt`. A abridged version of the output is here:
>
> ```
> lstat(""/opt/cupenv/delete-me.txt"", {st_mode=S_IFREG|0664, st_size=6, ...}) = 0
> ...
> lstat(""/.Trash-1000"", 0x7ffde5ffb5b0)   = -1 ENOENT (No such file or directory)
> mkdir(""/.Trash-1000"", 0700)             = -1 EACCES (Permission denied)
> ```
> That's unexpected. The API documentation for [g_file_trash](https://developer.gnome.org/gio/stable/GFile.html#g-file-trash) lacks some level of specificity.
>
> > Sends file to the ""Trashcan"", if possible. This is similar to deleting it, but the user can recover it before emptying the trashcan. Not all file systems support trashing, so this call can return the G_IO_ERROR_NOT_SUPPORTED error.
>
> One might assume (as I did): Given a path, if the user has permission to modify/delete the file, then GIO's g_file_trash API should succeed at removing the file in some manner. Perhaps, if trash functionality is not available, then there might be a fallback mechanism. In the case of `gio trash` I expected there to be a -f force option that would prioritize trash over permanently deleting the file. (`gio trash -f` only ignores files that don't exist)
>
> Glib appears to implement GIO local file access using [glocalfile.c](https://github.com/GNOME/glib/blob/83a4cab12c2d00dbfe6013d071cff2da310109a4/gio/glocalfile.c#L1899). The trash algorithm looks like this:
>
> * Is the path on the same partition as the user's home directory? If so, move the file to the home trash folder if possible and exit.
> * Given the path, locate the mount point top level directory (denoted as `$topdir` in source)
>
>   * In my case, `/opt/cupenv/delete_me.txt` -> `/` (the primary partition)
>   * A more typical case: `/run/media/$USER/disk-label/a/b/c/d` would be `/run/media/$USER/disk-label`
> * If `$topdir` is found, pick one of `$topdir/.Trash/$UID` or `$topdir/.Trash-UID` folder.
>
>   * If `$topdir/.Trash-UID` and `$topdir/.Trash/$UID` exists: Validate proper UID and file permission (or fail)
>   * Try to create folder `$topdir/.Trash-$UID`. Validate proper UID and file permission (or fail)
>
> At the end of the function we find [`G_IO_ERROR_NOT_SUPPORTED` is returned](https://github.com/GNOME/glib/blob/83a4cab12c2d00dbfe6013d071cff2da310109a4/gio/glocalfile.c#L2059) when such a folder is not found and cannot be created.
>
> ```
> if (trashdir == NULL)
> 	{
> 	  g_free (topdir);
>           g_set_io_error (error,
>                           _(""Unable to find or create trash directory for %s""),
>                           file, G_IO_ERROR_NOT_SUPPORTED);
> 	  return FALSE;
> }
> ```
> I confirmed my understanding by creating a top level trash folder and using gio trash command.
>
> ```
> sudo mkdir /.Trash-1000
> sudo chmod 0700 /.Trash-1000
> sudo chown fosterb:fosterb /.Trash-1000
> cd /opt/cupenv && echo hello > delete-me.txt; gio trash delete-me.txt
> ```
> Files located on the same partition as your home directory can always be moved to your user trash folder. On my operating system, the paths `/` and `/home` are separate partitions. I created a file `/home/tmp/x` where `tmp` and `x` are owned by my user. In this case, the files get moved to your `$HOME/.local/share/Trash` folder.
>
> ```
> lstat(""/home/tmp/x"", {st_mode=S_IFREG|0644, st_size=0, ...}) = 0
> stat(""/home/fosterb"", {st_mode=S_IFDIR|0700, st_size=4096, ...}) = 0
> access(""/home"", F_OK)                   = 0
> ....
> stat(""/home/fosterb/.local/share"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
> access(""/home/fosterb/.local/share/Trash"", F_OK) = 0
> stat(""/home/fosterb/.local/share/Trash"", {st_mode=S_IFDIR|0700, st_size=4096, ...}) = 0
> mkdir(""/home/fosterb/.local/share/Trash/info"", 0700) = -1 EEXIST (File exists)
> mkdir(""/home/fosterb/.local/share/Trash/files"", 0700) = -1 EEXIST (File exists)
> openat(AT_FDCWD, ""/home/fosterb/.local/share/Trash/info/x.trashinfo"", O_RDONLY|O_CREAT|O_EXCL, 0666) = 7
> ```
> But when mounting disks (external or internal) using fstab or mount commands (as opposed to session-based mounting) issues can arise. I tested a FAT file system with umask=0000 and uid/gid set to root.
>
> ```
> lstat(""/mnt/giotest"", {st_mode=S_IFDIR|0777, st_size=8192, ...}) = 0
> lstat(""/mnt"", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
> lstat(""/mnt/giotest/.Trash"", 0x7fffec5502c0) = -1 ENOENT (No such file or directory)
> lstat(""/mnt/giotest/.Trash-1000"", 0x7fffec550230) = -1 ENOENT (No such file or directory)
> mkdir(""/mnt/giotest/.Trash-1000"", 0700) = 0
> lstat(""/mnt/giotest/.Trash-1000"", {st_mode=S_IFDIR|0777, st_size=8192, ...}) = 0
> unlink(""/mnt/giotest/.Trash-1000"")      = -1 EISDIR (Is a directory)
> rmdir(""/mnt/giotest/.Trash-1000"")       = 0
> file:///mnt/giotest/x: Unable to find or create trash directory for /mnt/giotest/x
> ```
> You can see gio trash going through the motions. The operations succeeds but the command still reports an error.
>
> ```
> [fosterb@rose giotest]$ ls -lah
> total 12K
> drwxrwxrwx. 2 root root 8.0K Aug  1 00:36 .
> drwxr-xr-x. 4 root root 4.0K Aug  1 00:30 ..
> -rwxrwxrwx. 1 root root    0 Aug  1 01:23 x
> ```
> GLib/Gio will not write to a trash directory with incorrect permissions/ownership. (Security?) Without unix permissions, trash will always fail on these mount points. Modifying fstab to appear similar to options used during session mounts (UID/GID set to user vs root, umask is set appropriately). Conveniently the [source code](https://github.com/GNOME/glib/blob/83a4cab12c2d00dbfe6013d071cff2da310109a4/gio/glocalfile.c#L2046) has a comment that seems to strongly imply this is a known/expected.
>
> ```
> 		  /* Ensure that the created dir has the right uid etc.
> 		     This might fail on e.g. a FAT dir */
> ```
> Most of this was unnecessary, but I figured I'd show my work.

### EDIT2
#### More insight, to not get confused as of the nature of the bug, and how to reproduce it (by @cutephoton as well):
> Yes, as reported, the ELECTRON_TRASH environment variable is needed. This is the issue referenced #15949 bug. The issue reported here is not related to #15949. The error message related to gvfs-trash is a blunt tool (even access denied errors produce the same error message) so I understand why people are responding here.
>
> The reporter clarifies one of the key symptoms here:
> [#17452 (comment)](https://github.com/atom/atom/issues/17452#issuecomment-396407349)
>
> And that led to my deep dive. My deep dive details the specific cases where trash becomes unavailable (i.e. when a trash folder cannot be safely created).
> [#17452 (comment)](https://github.com/atom/atom/issues/17452#issuecomment-409518547)
>
> **I just revalidated my findings and unsurprisingly gio trash still fails.**
>
> Anyhow, I wanted to clarify this so it doesn't get lost when/if atom devs look in to this issue.




",civil
130,108364985,"_This comment was originally written by @mulander_

---

Hi all, short status update on the porting effort.

The build got pretty far, as in most of dart runtime builds without issues with small modifications to use kqueue/pthreads in some places - so far I 'patched' 36 files where most of them is 'use the mac one instead of linux' or 'use the android one instead of linux' with really rare cases when I actually had to edit the code. I obviously took the recommended ""[ 'OS==""openbsd""', { 'dart_target_os': 'Linux', } ],"" from comment #&#173;5.

Unfortunately I'm also having huge issues with building NSPR similarly to what was reported in comment #&#173;7 over an year ago. I'm afraid that without guidance/help I won't be able to move far with the port.

Regardless, it would be nice if the project had a porting guide for new platforms. I did not find any documentation that would tell me how the project build system works & how it should be configured. I don't know why the third party libs are bundled with the distribution & how to untangle them to use the system wide installed & already ported libraries. I assume the project has reasons for that but this leads to duplicate effort in software porting on the platform side.

The current state is of course uploaded to the github account linked in comment #&#173;10.

",civil
131,380870898,"@StephenFluin Thank you, Stephen. I hope in the future Angular will become even better and easier to understand. However, first of all, I am grateful to Angular for making me grow as a developer.
",civil
132,752365666,"> Also, people on GitHub may enjoy their stats being visible in various GitHub pages, like the contributor graph, so that people may click on them and see their profiles, etc.

Yes, people may enjoy it, but for me, I contribute because I want to make Vim better and not to have a nice contribution graph. Also I think it is more important that the main developer of Vim can concentrate on enhancing and improving Vim instead of having to change a workflow, that has been proven to be working well for the past 30 years. Thanks for understanding.
",civil
133,574543122,"Ok, so first of all, I wasn't aware that Netty allowed directly modifying the packets. Thank you for telling me about it, I'll look into that when I get the chance. Secondly, literally none of the hooks related to the chat system cover my mod's use case, where:
* The mod does not have to be installed on the client
* Users can individually choose to opt out of the chat censor using a command
* The censor also censors messages sent by systems that the user can type input to, such as the names of claimed territories in Clans, Towny, Factions, etc, to help ensure there is no way around it

I would not have put in the effort to make a coremod in the first place if any of the hooks were able to do this.
",civil
134,414893935,"I think this is a great idea, I have proposed internally at multiple companies I've worked at changing master/slave and blacklist/whitelist to leader/replica and allowlist/denylist, if only because in an industry with poor representation it feels incredibly overt to be standing in a room full of mostly white people using these terms outloud.

It doesn't matter what the origin or intent of this was, or whether people can find a narrow lens through which to see it as not a problem.  Consider using these terms in a coding or systems interview with someone you have just met.

I understand that some black people may not consider these terms offensive, but I would rather someone not want to work with me because they think I am too politically correct than because they think I am too insensitive and blind.

@minaslater thanks for beating me to the first PR on this. :) 💯
",civil
135,315791378,"I'm very sad about the abandon of GPU support for macOS.

Still looking for OpenCL support for GPU on macOS because Apple will, obviously, not change to Nvidia GPUs any time soon.

Tensorflow is my my engine of choice. Using GPU acceleration locally on my MacBook Pro or future iMac Pro would be awesome.

",civil
136,60929308,"Hi  jnothman,
Thank you so much for your help, I really appreciate your  cooperation.

I tried applying your code. Thus, once I interned (import pandas as pd). Directly I had the following message in red color:

import pandas as pd
No module named 'dateutil'
Traceback (most recent call last):
File ""<pyshell#0>"", line 1, in <module>
import pandas as pd
File ""C:\Python34\lib\site-packages\pandas__init__.py"", line 7, in <module>
from . import hashtable, tslib, lib
File ""pandas\tslib.pyx"", line 37, in init pandas.tslib (pandas\tslib.c:76813)
ImportError: No module named 'dateutil'

What should I do?
Thanks a lot

",civil
137,567444807,"I liked the santa hat, it brought a little joy to my day. Very sad that it has been removed.
",civil
138,834740790,"To be fair, @jeremylt, the 300hrs estimate was quite demotivating for me when I started.
",civil
139,808875885,"@votdev i meantioned systemd because of https://github.com/systemd/systemd/issues/12018

See... i know very little about Linux and nothing about Python, so i was googling everything i could think of :-)

But i am glad to hear from you.  So, how can we scratch this itch, is Salt team is not with us on it...

Can you make some scripts demonstrting the alleged Salt bug that i could run from bash ? Also are there some hidden option in OMV5 to re-enable mounting space-containing partitions?



",civil
140,500270587,"First, please use the issue template properly. Replace the template text and remove irrelevant text as the instruction says.

If you talking about that you can see only one person (Bram) in https://github.com/vim/vim/graphs/contributors, check each commit. Each contributor name is written in each commit log.
There are several hundreds of contributors in Vim.

Anyway, this is not a place to ask a question and this is not an issue of Vim. So closing.
",civil
141,480985225,"If the idea of putting it in the Options window is rejected, then I'm trying to brainstorm an alternative solution, and I thought about _maybe_ making VS look for a tab character in the place marked with ""\t"" following:
```
int x;\t// This comment is preceded by one or more tab characters.
// This comment would never be aligned with the previous comment.

int x; // This comment is preceded by one or more space characters.
// This comment would be aligned with the previous comment.
```

On my computer, I have `Options -> Text Editor -> C# -> Tabs` set to ""Keep tabs"".  I can't stand the ""Insert spaces"" option.  I always use tab in-between "";"" and ""// comment"".  Despite the fact that I have VS set to ""Keep tabs"", when I copy & paste a line or otherwise trigger VS to format the line, VS changes my tabs to spaces.  I wish it wouldn't do that.

I write it with tabs like this:
```
int x;\t\t// Comment.
```
...and VS 2019 changes my tabs to spaces against my wishes:
```
int x;     // Comment.
```

",civil
142,299087682,"Hi @benoitsteiner, regarding:
> There in an OpenCL specific section in the overall TensorFlow documentation. This will be published on the tensorflow.org site soon.

I did a [search on tensorflow.org for OpenCL](https://www.tensorflow.org/s/results/?q=opencl&p=%2F) and didn't seem to be able to find anything significant, it to all seems to point right back here.  By ""soon"", do you mean before ______? ( _insert funny sarcasm here_ ).

I was able to compile your repo (yay!), although I'm guessing that it needs something else to create a working `Tensorflow OpenCL` for Mac; I tried building the `triSYCL`compiler mentioned but sadly failed.

",civil
143,548287920,"> But if your Roslyn skills aren't up to stuff, then don't worry about it.

When it comes to this area, they may not be.  Hence why I was offering to work through it with you.  Two minds being better than one and all that :)

Cheers and good luck!  If you change your mind, just let me know! :)
",civil
144,784436432,"> I am not sure what are you arguing for (or against)

I'm happy to clarify any of my points.  Def ask questions and I'll get back to you asap.  If you'd like another venue to discuss things (perhaps in realtime) I'm also happy to use gitter or discord to continue the discussion :)
",civil
145,428587115,"Please use the 👍  button to let the maintainers know you need this feature. Getting a ton of emails from these +1s.
",civil
146,592993388,"Hi @jKittyj, I'm sorry to hear about your experience and I understand the sensitivity of your concern. Let us take some time to consider your request and respond in a mindful way.

Given our past experience with these kinds of issue discussions getting out of hand due to comments from people outside of our team, I'm going to lock this thread until we have a chance to respond. Thanks for understanding.
",civil
147,297910810,"Can you give indications on where the changes should happen and other
indications?
I am a bit lost in the source code

On Apr 28, 2017 05:46, ""Lee Dohm"" <notifications@github.com> wrote:

> We do plan to work on this issue but we don't have an ETA for when we'll
> be able to get to it. If people would like to help this happen sooner than
> we can get to it, we would be very interested in a well-written pull
> request.
>
> —
> You are receiving this because you commented.
> Reply to this email directly, view it on GitHub
> <https://github.com/atom/atom/issues/10132#issuecomment-297892801>, or mute
> the thread
> <https://github.com/notifications/unsubscribe-auth/AH_TYeucefckiO-Zo6EF4Rabkiuwbbi_ks5r0VL0gaJpZM4G41pi>
> .
>

",civil
148,631044426,"> ridiculous
> cute little side project
> nobody cares
> anybody heard of

I hope this is not Microsoft's general attitude towards open source projects these days...
",civil
149,299714528,"@IdanCo Sorry, nevermind. I made a mess out of it :D. My config was not in order,
",civil
150,143,"When outputting text from PowerShell on a Dell XPS 15, the rendering speed is amazingly slow.

~~I have not come across this on any other machine.~~

Attached a short windows performance recording of this.
conhost.exe (1608) and pwsh.exe (19432) are the relevant processes.

[STAFFANX15.03-30-2018.11-25-22.zip](https://github.com/Microsoft/console/files/1863382/STAFFANX15.03-30-2018.11-25-22.zip)

Hopefully someone more well versed in this domain can help figure out what is going on.

",civil
151,470501903,"> Why are you even here?

Big questions time :roll_eyes:

@wattengard Let's all be respectful.
",civil
152,784578402,"> I believe this may be a bug or a feature depending on ones perspective. I certain see how it can be a bug. However, that doesn't mean that just because it's a bug that it is simple to fix or that it is without consequences if changes are made here. Again, as i mentioned above, the existing formatting system is highly complex (including with likely bugs in it that many have taken dependencies on). So changes need to be very judiciously made.

I don't disagree with that, but there seems to be great resistance to even acknowlege that the behaviour has changed at some point, and that it doesn't seem correct, from a users point of view, that selecting **Always keep TABs** means **Always keep TABs except sometimes they will be changed to spaces**


",civil
153,396634988,"That's a fair point about separating dependencies for the task from the tool, I always think of Java as a dependency for the SonarQube task but it's actually a dependency for the SonarQube tool that is presented to the user as requirement for the build agent to have installed.

The only clean way of handling making use of new functionality in newer versions of a dependency that I can see is to increment the major version number of your task, so it becomes a choice for the users to make use of it and the need to install a new version of the dependency. The other approach requires adding checks for that version in your code before trying to use it, which grants more compatability but takes more time and effort on the part of the task author.

I still think updating for new prereqs is less of a problem for people using containers due to their nature but I know there will be a large number who don't want to change their working container because a task updated a bit. It's also still a bigger problem for people not using containers as that takes more time and effort to roll out new versions of prereqs.

I'll certainly give some thought to writing a typescript wrapper for the pester task I already have and see how that performs. Hopefully some of these more interesting and difficult design questions can be worked out to enable a PS Core handler.

Thanks for taking the time to explain this stuff Bryan, it's given me a much better idea of how it all hangs together and the things you have to think about when working on the agents.
",civil
154,359264188,"@pbgc I've likewise abandoned Dart because I see nothing in the Dart project to give me confidence that it will be ported. I'm willing to give it another look if things change, but I can't use something if it doesn't support the systems I deploy on.

As such, I've moved my focus to other platforms that *do* have support for \*BSD. I understand that the team may have different priorities, and I also understand that the majority of their customer base likely wouldn't benefit directly from \*BSD support.

This may have changed in the past, but getting set up to even work on this was a daunting task since it was (again, not sure if this has changed) part of the monolithic Chromium source tree. As such, I put *some* effort into porting (about a day of work), but it was such a huge barrier to entry that I lost interest and moved on to other projects.
",civil
155,547344958,"You could add these descriptions to the original ""duplicate"" issue and this is fine. I'm very sorry if this will cause you to leave Godot.
",civil
156,751273086,"https://github.com/ipython/ipython/commit/dcd9dc90aee7e4c5c52ce44c18e7518934790612

The code has been already updated, but `7.19.0` did not include this. :(
",civil
157,660289611,"@jtiscione

>Not all of us are React developers and we shouldn't have to change code in unrelated parts of the application.

I empathize with your frustration, but the solution to it is to not run React-related rules on non-React-related parts of your codebase.

>We're having a real problem with this because ESLint ignores the .eslintrc.json file (due to some other bug in ESLint), and it breaks the build.

This seems like something you'd need to find a solution for.

I'm going to lock this thread because this heated atmosphere is not constructive.
",civil
158,571852302,"Mike you are a valued JIT contributor and I just thought that your last comment was a bit too harsh.

I didn't really think about it too much.  I was just trying to keep things peaceful here.
",civil
159,224917160,"I have to throw my support for WCF in .NET Core as well.

My primary client is a fairly large, heterogeneous WAN with intermittent connectivity.

I have dreamed for years of having WCF across their entire network so that I can finally (!) have reliable transactions and durable services spanning their various generations of Linux and Windows.

The thought of bringing all of WCF's many capabilities (as enumerated in this thread) to my client's entire infrastructure would literally be a dream come true. We can spend the vast efforts we've previously put toward plumbing into the services that can streamline everything we do, and take us to the next level.

Please, please make this happen.

-Thomas

",civil
160,472502936,"If the required solution here is that Atom implement the ability to permanently delete files, that isn't something the maintainer team is going to do. We've had the ability to permanently delete files in the past and it created too many support headaches when people accidentally permanently deleted files (even with appropriate warnings) and blamed Atom. If someone wants the ability to permanently delete files, then it can be implemented in a community package.

If I'm misunderstanding what is being requested here, please let me know.
",civil
161,221539255,"Hi,

I too appreciate WCF, and use it a lot.
For me the most important features are:
- Security
- Extensibllity
- Behaviors
- Bindings (Especially TCP.Net)
- Metadata Exchange
- Instance Management
- Reliability

I think this could really be a showstopper for .Net core, if it will not have WCF server side support.

Guy

",civil
162,1200,"Hi,

I'd like to start a thread to have a dialog about server side WCF on .NET Core. For me the WCF stack is quite impressive, and support for server side WCF on .NET Core would be fantastic. Please feel free to add your opinions to the thread.

Here is a list of some of the WCF features (that comes to my mind):
- Throttling
- Reliability
- Ordered Messages
- Bindings
- Instance Management
- Behaviors
- Transactions
- Security
- Discovery
- Metadata Exchange
- Extensibility

These features and more are for me very desirable, but some might be harder to support (e.g. WCF transactions relies on MS DTC (as fas as I know), but transactions enabled communication on a server side is a very important feature).

I hope you're as excited as I am about WCF, and even more so for a server side WCF on .NET Core.


",civil
163,389876958,"@pathawks Wow!! That's an awesome idea!!!
We can easily create a new tag that is a combination of both `raw` and `if` tags...
:heart: :tada:
",civil
164,272108196,"Phillip,

It's possible you misunderstood the comment.  I believe the reason that
Allen made that comment (and I'd love to hear his actual reason) is that
using WCF gives you two specific things in terms of an API.  First, it's
gives the true separation of dependencies and implementation (ala - the
actor model and service orientation).  Second, it supports an interface
based programming model <https://en.wikipedia.org/wiki/Programming_model>.
By only having access to the proxy, those using the API only need to know
the proxy to use it.  [Granted, that can still require a great deal of
knowledge, but not of the implementation.]

Scott



On Thu, Jan 12, 2017 at 12:22 AM, Phillip Haydon <notifications@github.com>
wrote:

> WCF for us means that developers can easily consume a complex api with
> almost no knowledge of it.
>
> This couldn't be any better of a reason to NOT support WCF.
>
> —
> You are receiving this because you commented.
> Reply to this email directly, view it on GitHub
> <https://github.com/dotnet/wcf/issues/1200#issuecomment-272102246>, or mute
> the thread
> <https://github.com/notifications/unsubscribe-auth/ABo_EjJM2goqjrTyHEWC94HgDv1XDMUhks5rReLggaJpZM4Ikmmx>
> .
>



--
Scott Hurlbert
Technical Architect
415-378-9908
scotthurlbert@hotmail.com
AIM: scottahurlbert
Skype: hurlbert
GTalk: scottahurlbert@gmail.com
Blogs:

- https://medium.com/@hurlbert
- http://oknowwhatfolks.blogspot.com/
- http://agilecliches.blogspot.com/

",civil
165,302350219,"OK, fine; HIP-the-API is a subset of CUDA-the-API, but unless NVidia is craven enough to start  channeling Oracle I doubt that will be an issue. I was referring to the runtime/compilers for HIP, of which I think AMDs are ~open.

*edit*: Sorry if the above came out sounding rude; just trying to clarify my position above!
",civil
166,509329187,"It would be nice to have shift+insert or Ctrl+shift+insert to have a linux like feeling or ctrl+shift+c and ctrl+shift+v like powershell does
",civil
167,282091522,"+1 This would really help modularizing our code

",civil
168,365262394,"@emergy Ansible community heavily relies on [Code of Conduct](https://docs.ansible.com/ansible/latest/community.html#community-code-of-conduct) being followed, which lets us address issues more effectively and be respectful to each other. Posting issues with offensive content is definitely not going to encourage productive discussion, but normally results in confrontation.
For best outcome please consider writing your messages mindfully and calmly explaining both your problem and what is the suggested resolution or expectation for it.
TIA.
",civil
169,417476606,"@TheLarkInn:

> This decision was made by @evocateur and his resoning is very clear in #1633.

I disagree that this is very clear:

""the impact of this change was almost 100% negative, with no appreciable progress toward the ostensible goal aside from rancorous sniping and harmful drama.""

The claims made here are not supported by evidence or arguments.

> I did not link Jamie's dismissal. @evocateur explained his reasoning in #1633

This was the plural ""you"" here, as in ""you, the maintainers."" In any case, I still don't understand why Jamie's dismissal was linked as part of the same announcement, clearly implying that his dismissal had to do with his introduction of the modified MIT license.

> I thought Microsoft was being treated unfairly and wanted to set the story straight.

Respectfully, given the conflict of interest between your role as a maintainer and your role as a Microsoft employee, I think you should have sat out of that decision. It certainly appears to many as though your loyalty to your employer influenced the revert back to the old license.
",civil
170,395621257,"I've disabled the bot. It won't be trolling the issues board anymore.

I think the final vision of UI requires a cohesive system for theming, layouts, & ui, with simple, unified integrations for all js frameworks, and a well-defined toolkit to extend & distribute additional components, share themes and track versions between teams.

I think this is something I can produce and distribute open-source in the long-term, but will be a project much larger than SUI 2.x, and will require me pressing on for some time longer.

I hope people keep that vision in mind, when considering the near-term goals like providing prompt feedback directly on GitHub discussions, quick resolution for user-contributed PRs, maintenance releases etc. It hurts me that I'm not able to keep up the same pace as I had when 2.0 was launched. I hope you guys keep that in mind, and be generous in your views
",civil
171,394612719,"@akopchinskiy
![image](https://user-images.githubusercontent.com/12021443/40961913-a4b87ef2-68ac-11e8-9b4f-025e33e69002.png)

![image](https://user-images.githubusercontent.com/12021443/40961934-c28db294-68ac-11e8-96f0-b5f4a87ce103.png)

why do you use a localhost? on the server this will not work
change the example
",civil
172,514151682,"thanks for figuring this out! If you want to copy the logic for componentDidMount and componentDidUpdate, you can see it at #15589
",civil
173,87371,"Bring back the hat.

:santa:

",civil
174,387647384,"I would love to see an offically supported page generator from data files. With the stellar rise of ""headless"" (= API only) SaaS CMS systems [static site generators ](url)have become the tool of choice for types of sites that they have not been considered for in the past.

e.g. [contentful.com](https://contentful.com)  provides an [official jekyll plugin](https://www.contentful.com/ecosystem/jekyll/) that pulls all the CMS content into the Jekyll _data folder as yaml.  You can then use that content inside pages and include you've already created, but you can't actively create new pages from the SaaS CMS.  This is possible with other generators, but I'd like to stick with Jekyll due to your maturity and ecosystem.

e.g. the site I'm maintaining is a mix of content maintained by techies directly in the jekyll git and content written and uploaded by less technical people in contentful. contentful triggers the redeploy on [netlify.com](https://www.netlify.com/)  via  webhook when a new article was published.

Overall a great stack, just that we have to rely on a somewhat unmaintained hacky ""page generator"" jekyll plugin to stitch it together.

",civil
175,619246053,"> The issue here is hard tabs contained within a line of code, i.e. tabs not used for indentation.

I keep hearing people referring to tabs as hard when it's actually the other way around -- tabs are soft (as in you can replace them with any number of spaces on display),, and spaces are hard (as in hard-coded number in the file itself which you can't reformat so easily on display).

That said, I would really prefer if Tab key did what it says on the tin -- inserted a Tab character into the editor. Currently in Visual Studio 16.5.4 that doesn't seem to be the case even though I have configured everything to have Tabs instead of spaces.

I'd like to voice my displeasure towards two trends going on in Visual Studio editor since VS 2015:

1. Editor trying to be ""smart"" and disregarding user input more and more (i.e. I enter Tab and it enters spaces even though it's clearly configured to use Tabs)
2. Premature code analysis and error checking (i.e. telling you your code is broken and offering to ""fix"" it before you ever get a chance to complete it)

Those additions waste enormous amounts of developer time and effort on fighting them when they are wrong (and sadly they can be wrong a lot). The least you could do is offer an option to disable both behaviors globally.

Finally, I'd appreciate if there was some workaround for this spaces instead of tabs issue, it's driving me nuts.

",civil
176,430647906,"@slandelle I am sorry but I don't really understand your reasoning, although I understand your concern around protecting the Enterprise value.

Just to confirm, your strategy is to prefer for us to fork this project so that we can use a logger for a single line of code where you are currently using println, pushing us further away from wanting the Enterprise solution because you are classifying using a logger to output the summary as part of `stats/exports/integrations`, although that information is already being outputted in a different form?

To be honest, this entire thread so far makes me far less inclined to introduce a dependency on the enterprise project.  I believe gatling is great as a project, I believe you should get paid to support and continue working on it full time, I also believe large companies should pay and help support opensource initiatives.   The problem is that I also believe your approach will alienate many people, or at least me and all the people I talk to about this.  It's a very simple code change, that actually makes it more consistent, as the majority of of your code base uses loggers (as any developer would expect).

You are not even arguing about not outputting that data because it's `stats/enterprise` data.  The data is there and available in the logs already!  The only difference is the primitive output mechanism.  The fact that many modern log shipping frameworks expect json/structured logs means that using println automatically makes you a less attractive product for both enterprise and non enterprise adopters.  These println statements just create noise in most modern log shipping frameworks I have worked with as they cannot be interpreted as a single event.  This is genuine feedback.

I would urge you to reconsider the quick decision, because I believe this suggestion exposes no more information than you currently do, moves you towards a more standardized output like the rest of your code base, and would actually show you positively engaging in improving your entire product offering, OSS and Enterprise.

The functionality you are planning as part of Enterprise are still attractive to companies like ours, e.g. aggregation of metrics etc, grafana datasources etc.  I think you've convinced yourself that any improvements to OSS is a risk to Enterprise.  Just doesn't sit well with me.
",civil
177,845532857,"I'm -1 on changing the name again and I appreciate the effort the node-api team put into making the changes. It's a good change.
",civil
178,709528311,"Disappointing that this is not being considered high priority.  Can't submit to App Store with extreme jank.
",civil
179,808871973,"@votdev i made quite many changes in that mounts.py - and now i am thinking about undoing almost all of them... Lack of any documentation...

I am coming to believe that, while never documented, the intention of that Salt module was to always use fstab-like escaped strings for all their IDs. If not, i would like to see specific calls into other Salt modules, which expect different convention for disk names.

I really did quite a number of changes to de-escape \040 and other special chars. And probably that was only breaking things.

Except for one place though, which i believe should be patched.

```
import pathlib

def list_mounts(): # for debug
return _list_mounts()

def _list_mounts():
ret = {}
idx_mpoint = 2
# one cannot trust `mount` with space-containing paths
# at least on Linux - https://github.com/saltstack/salt/issues/54508

if __grains__[""kernel""] == ""Linux"":
idx_mpoint = 1
mounts = pathlib.Path('/proc/mounts').read_text()
elif __grains__[""os""] in [""MacOS"", ""Darwin""]:
mounts = __salt__[""cmd.run_stdout""](""mount"")
else:
mounts = __salt__[""cmd.run_stdout""](""mount -l"")

for line in mounts.split(""\n""):
comps = re.sub(r""\s+"", "" "", line).split()
if len(comps) > idx_mpoint:
##            if __grains__[""kernel""] == ""Linux"":
##               comps[0] = _Linux_fstab_unmangle( comps[0] )
##               comps[idx_mpoint] = _Linux_fstab_unmangle( comps[idx_mpoint] )
ret[comps[idx_mpoint]] = comps[0]
return ret
```

Would you keep implementation non-patched and would you call `salt-call mount.list_mounts` - you would see the mount point broken, cut off on the first space. This was probably THE bug.

----------------

Okay, keeping my stolen Linux archeologist hat on

https://unix.stackexchange.com/questions/56291/what-causes-dev-disk-by-label-to-be-populated

```
mount -l
.....
/dev/sdb1 on /media/U:NTFS Disk type fuseblk (rw,relatime,user_id=0,group_id=0,allow_other,blksize=4096) [U - Arch-2 Hitachi_2Tb_7200]

root@diskoteka:/media# ls /dev/disk/by-label/
'U\x20-\x20Arch-2\x20Hitachi_2Tb_7200'

root@diskoteka:/media# blkid -o udev -p /dev/sdb1
ID_FS_LABEL=U_-_Arch-2_Hitachi_2Tb_7200
ID_FS_LABEL_ENC=U\x20-\x20Arch-2\x20Hitachi_2Tb_7200
ID_FS_UUID=C6705D84705D7BDD
ID_FS_UUID_ENC=C6705D84705D7BDD
ID_FS_TYPE=ntfs
ID_FS_USAGE=filesystem
ID_PART_TABLE_TYPE=atari
ID_PART_ENTRY_SCHEME=dos
ID_PART_ENTRY_UUID=78fdd16a-01
ID_PART_ENTRY_TYPE=0x7
ID_PART_ENTRY_NUMBER=1
ID_PART_ENTRY_OFFSET=2048
ID_PART_ENTRY_SIZE=3907024896
ID_PART_ENTRY_DISK=8:16
```

So, it is UDEV or SYSTEMD which creates those weird hex-mangled names. Okay. Though putting them into /etc/fstab still feels wrong. `man mount` suggests against it and suggests using `UUID=...` and `LABEL=...` flags instead.

Now back to your
```
Example SLS:

mount_fs_with_label:
mount.mounted:
- name: ""/srv/dev-disk-by-label-My Passport Blue""
```

I don't know what it should mean in specific files/commands terms. But i feel this is the error on OMV part. And perhaps lack of documentation/understanding/forecasting on Salt part.

```
def mount(
name, device=False, mkmnt=False, fstype="""", opts=""defaults"", user=None, util=""mount""
):
.....
salt '*' mount.mount /mnt/foo /dev/sdz1 True
.....
if device:
cmd += ""{} {} {} "".format(args, device, name)
else:
cmd += ""{} "".format(name)
```

My inner archeologist says that the `name` AKA mount point AKA target directory is meant to be in bash-mangled format.
IOW OMV should had created ""\ "" containing fileneames:
```
mount.mounted:
- name: ""/srv/dev-disk-by-label-My\ Passport\ Blue""
```
Linux `man mount` also suggests against the second option due to ambiguity, where the single parameter is mount point name or device file name. I don't know if other UNIX-likes but Linux support those precision keys.

```
--source device
If only one argument for the mount command is given  then  the
argument might be interpreted as target (mountpoint) or source
(device).  This option allows to explicitly  define  that  the
argument is the mount source.

--target directory
If  only  one argument for the mount command is given then the
argument might be interpreted as target (mountpoint) or source
(device).   This  option  allows to explicitly define that the
argument is the mount target.
```

So i think that part in `def mount` should better be written as

```
if device:
cmd += ""{} {} {} "".format(args, device, name)
else:
if __grains__[""kernel""] == ""Linux"":
cmd += ""--target ""
cmd += ""{} "".format(name)
```
",civil
180,598733706,"@ketzacoatl please take a deep breath and calm down.

Imo Hashicorp market themselves as a software provider that provides solutions for businesses. If it was some dude working on his own in his basement then of course i wouldn't post such ignorant comments, however the fact that this feature has been open for over three years with no communication is a little disconcerting. I apologise if you felt somehow attacked by my comment.
",civil
181,650294204,"Yes, we're on the same page that all lives matter. I read some thoughtful and reasonable responses in this thread, and I understand how everyone has their point of view. We're all part of a very diverse community, and having different opinions is understandable.

I also don't see bad intentions in the thread, which is all encouraging. We're all aiming for racial equality, and that is how it is supposed to be.

At the same time, I'm hoping for us all to provide solidarity to the black community. Again, all lives matter, but for this to be true, black lives should matter as well.

I'll lock this thread now since the discussion is getting a little too heated.
",civil
182,160153930,"> should we instead add as a section in the tutorial here?

We should reference it. But I don't see this as tutorial material because
it is outside the scope of scikit-learn. We can only give pointers

That's an answer that the users really don't want to hear, because there
point of view is that they have a lump of data and they want it inside
scikit-learn. The answer is: this is not a problem that scikit-learn
solves, go see pandas if you have CSV, scikit-image if you have images,
database connectors (SQLAlchemy?) if you work on databases...

I guess that we should have a sentence like this in the tutorial, where
you reference, with pointers.

As a side note, the kind of errors hit by the users on the thread of this
issue (lack of basic knowledge of Python for instance) tells me that we
cannot solve their problem. They need to go to entry-level tutorials on
Python, and get a bigger picture. Maybe we should make sure that we give
pointers to these in the right spots, eg early on in the tutorial.

",civil
183,398224013,"Hmm @slandelle , do not you think that simply stating that I 'messed up ""writers"" ' without explaining why is rude?

As far as I know I did not mess them, if I do not put writers in square braces and leave as in default config then Gattling would not even start with this exception:

/src/test/resources/gatling.conf: 118: gatling.data.writers has type STRING rather than LIST

java.lang.reflect.InvocationTargetException
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at io.gatling.mojo.MainWithArgsInFile.runMain(MainWithArgsInFile.java:50)
at io.gatling.mojo.MainWithArgsInFile.main(MainWithArgsInFile.java:33)
Caused by: com.typesafe.config.ConfigException$WrongType: gatling.conf @ file:/Users/kgignatyev/dev/reprocases/gatling-stuck/src/test/resources/gatling.conf: 118: gatling.data.writers has type STRING rather than LIST
at com.typesafe.config.impl.SimpleConfig.findKeyOrNull(SimpleConfig.java:159)
at com.typesafe.config.impl.SimpleConfig.findOrNull(SimpleConfig.java:170)
at com.typesafe.config.impl.SimpleConfig.findOrNull(SimpleConfig.java:176)
at com.typesafe.config.impl.SimpleConfig.findOrNull(SimpleConfig.java:176)
at com.typesafe.config.impl.SimpleConfig.find(SimpleConfig.java:184)
at com.typesafe.config.impl.SimpleConfig.find(SimpleConfig.java:189)
at com.typesafe.config.impl.SimpleConfig.getList(SimpleConfig.java:258)
at com.typesafe.config.impl.SimpleConfig.getHomogeneousUnwrappedList(SimpleConfig.java:329)
at com.typesafe.config.impl.SimpleConfig.getStringList(SimpleConfig.java:387)
at io.gatling.core.config.GatlingConfiguration$.mapToGatlingConfig(GatlingConfiguration.scala:215)
at io.gatling.core.config.GatlingConfiguration$.load(GatlingConfiguration.scala:98)
at io.gatling.app.Gatling$.start(Gatling.scala:54)
at io.gatling.app.Gatling$.fromArgs(Gatling.scala:45)
at io.gatling.app.Gatling$.main(Gatling.scala:37)
at io.gatling.app.Gatling.main(Gatling.scala)
... 6 more


",civil
184,784576877,"> This behaviour does not exist in older versions of VS. At some point it has been added by someone, for some reason.
That was the point at which the user experience was broken.

That's quite possible.  My guess is that it happened when we did the entire roslyn rewrite.  We tried to preserve a lot of old behavior, but we very likely did not given the huge complexity in the old system and that the new system takes an entirely different approach on things.  Unfortunately though, we've now had this new system a long time, and we are wary about subjecting people to more potential changes in behavior, esp. as it might fix this issue, only to cause problems for others :-/   It's a tricky situation to be sure!
",civil
185,584806667,"@mikedn Could it be that it's rather a cultural difference? I used to be a Mono contributor, and once had a conflict with a maintainer. His remarks were more harsh than the ones you made, and Miguel was very diplomatic in resolving the ""dispute"". I honestly believe that his harsh remarks were not intentional.

I continued to be a contributer (until my work/life situation decided otherwise) as I believed in the project and I felt my contributions were appreciated.

In your situation, I think the MS maintainers handled the situation correctly (without being harsh, again this is from my point of view). There's no doubt your contributions are greatly appreciated; this by both the MS maintainers and the community.

It would be a great loss for the .NET community if you'd stop contributing. If you consider my comment to be negative, just tell me and I'll happily remove it.
",civil
3886,402754614,"> You have everything you need to study the issue

In other words you want someone else to do the work for you 🙄

Regarding Phong materials and glTF, I agree that this makes glTF a bad choice for converting older models - especially models originally exported as FBX which only supports Phong or Lambert shading.
",uncivil
3887,567458057,"Please remove Python compatibility I'm scared of snakes.
",uncivil
3888,87392,"This Santa Hat situation is unacceptable. This is outrageous and humiliating. We demand apologies from @microsoft and that the Hat be back!

Merry Christmas!!!

",uncivil
3889,728919254,"> More measurable and mechanical the decision making process is,

The decision making process is not done in a measured or mechanical fashion.

This entire meta discussion on how people want the language designed is not useful here. The decision has been made on this issue. The reasoning has been explained.

If you want to start a different discussion on how the language is designed, feel free. However, it will remain off topic on this issue.

",uncivil
3890,2529,"<!-- NOTE: If you ignore this template, we will send it again and ask you to fill it out anyway. -->

**Have you read the [FAQ](https://bit.ly/ShakaFAQ) and checked for duplicate open issues?**
yes

**What version of Shaka Player are you using?**
3.0

**Can you reproduce the issue with our latest release version?**
yes

**Can you reproduce the issue with the latest code from `master`?**
yes

**Are you using the demo app or your own custom app?**
demo app

**If custom app, can you reproduce the issue using our demo app?**


**What browser and OS are you using?**
chrome, nexus 6, android

**For embedded devices (smart TVs, etc.), what model and firmware version are you using?**


**What are the manifest and license server URIs?**
<!-- NOTE:
You can send the URIs to <shaka-player-issues@google.com> instead,
but please use GitHub and the template for the rest.
A copy of the manifest text or an attached manifest will **not** be
enough to reproduce your issue, and we **will** ask you to send a
URI instead.  You can copy the URI of the demo app to send us the
exact asset, licence server, and settings you have selected there.
-->
https://bitmovin-a.akamaihd.net/content/art-of-motion_drm/mpds/11331.mpd

**What did you do?**
<!-- Steps to reproduce the bug -->
why u revoke nexus 6 ?? give keybox to me now .  nvidia shield .
i am from india my name is ramjeet widevin is shit .!!

**What did you expect to happen?**
get amazon prime sunnxt key

**What actually happened?**
<!-- A clear and concise description of what the bug is -->
<!-- If applicable, you may add screenshots to help explain your problem. -->
nexus revoked :(.

",uncivil
3891,483867762,"TBH, you really can't force down the throat of what tastes bland. Some, like me, will complain, others will quietly walk away.

People are more likely to use a product recommended by their friend, than you trying to promote it on your website or social media.

Your users are your best PR, listen to them!
",uncivil
3892,3469,"
I find it extremely frustrating using terminal as a REPL. There is no console. It's not a real IDE. I hope to see something like Matlab or R have done.

The following is extremely inconvenient:
1. you can't highlight in terminal
2. shortcut like shift+left arrow which is used to highlight produces characters ;2D (see picture)
3. breaking from a loop using Ctrl+C sometimes exits Python, you have to invoke all over again.
4. The big fat cursor is ugly.

Essentially,
The Python extension just invokes Python from terminal. I mean, if I wanted the terminal experience, I'd do it with VIM. The whole point of VS Code Python is to step away from that.


I'm running:
- VS Code version: 1.33.1
- Extension version: 2019.3.6558
- OS and version: OS X
- Python version: 3.6.7

![terminal](https://user-images.githubusercontent.com/14314760/56231725-2de15080-604d-11e9-99b9-f9132c60f94c.png)






",uncivil
3893,631043516,"@probonopd @mirkobrombin so you like this cute little side project... but let's be honest here when it comes to being a serious project it's not one. There isn't major support for MauiKit, the likelihood is that most people probably never heard of it before today, and there is no widespread adoption of it. Can you name 10 large companies that have adopted it?

Your attitude is as if Microsoft is being some big evil corporation. The reality is I highly doubt anybody heard of MauiKit, and frankly nobody cares.

> Let's pretend that this is not a mirror but the official repository (not so).. can a project name be stolen because it has less fame?

Ok let's look at kde... there are 10 open issues... are you seriously going to tell me that a serious cross platform framework has 10 open issues... that's not realistic in any shape way or form. So again your complaints are just being ridiculous.
",uncivil
3894,571274865,"This is being closed because the tone is not acceptable in our repos and is not actionable.

Please give us steps to reproduce and otherwise help us to solve problems you identify. Telling us you are frustrated is fine, ranting is not.

The only issue we extracted from this seems to be the same as #103.



",uncivil
3895,469614983,"@james-portman Did you actually read the thread?
",uncivil
3896,483869570,"Actually, please don't fix it. I am not paying you. And you believe you have the best idea, and that my request is too much.

Have a good day!
",uncivil
3897,822104201,"On 2021-04-18, Felipe Contreras wrote:
>     Thanks for understanding.
>
> No, I don't understand.
>
> Any software developer doing things exactly the same as 10 years ago is a bad
> software developer, let alone 30 years ago.

That's just plain not true.  A idea that was good 10 or even 30
years ago may be just as good today.  Ideas are good or bad because
they're good or bad, not because they're new or old.  To think that
a new idea is better than an old one simply because it is new is
foolish.

> It literally takes less than 30 minutes to learn git. That's no excuse.

That's not true, either.  While basic git operations are reasonably
straightforward, anything beyond the basics is horribly obscure and
inconsistent.  To paraphrase Jamie Zawinski's comment about regular
expressions:

Some people, when confronted with a problem, think ""I know,
I'll use git.""  Now they have two problems.

And of course:  https://xkcd.com/1597/

Regards,
Gary


",uncivil
3898,5911,"when we have storage OOM gradle doesn't sygnalize that, instead proper info we have a bullshit :)

`$ gradle clean`

>FAILURE: Build failed with an exception.
>
>* What went wrong:
>Unable to start the daemon process.
>This problem might be caused by incorrect configuration of the daemon.
>For example, an unrecognized jvm option is used.
>Please refer to the user guide chapter on the daemon at >https://docs.gradle.org/4.7/userguide/gradle_daemon.html
>Please read the following process output to find out more:`
>-----------------------
>* Try:
>Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log >output. Run with --scan to get full insights.

Unable to start the daemon process... **when explicity run with false flag in props file**

the next try maybe gradle didn't read the prop file proper .. **so explicity set no deamon arg**

`$ gradle --info --no-daemon clean`

>Initialized native services in: /opt/gradle/ceph3us/native
To honour the JVM settings for this build a new JVM will be forked. Please consider using the daemon: https://docs.gradle.org/4.7/userguide/gradle_daemon.html.
Starting process 'Gradle build daemon'. Working directory: /opt/gradle/ceph3us/daemon/4.7 Command: /opt/jdk1.8/bin/java -XX:+AggressiveOpts -XX:+UseG1GC -Xmn512m -XX:MaxMetaspaceSize=1g -XX:SurvivorRatio=40 -XX:+UseCompressedOops -XX:+UseCompressedClassPointers -XX:-OmitStackTraceInFastThrow -XX:SoftRefLRUPolicyMSPerMB=100 -XX:-HeapDumpOnOutOfMemoryError -Xms512m -Xmx3g -Dfile.encoding=UTF-8 -Duser.country=PL -Duser.language=pl -Duser.variant -cp /opt/gradle/lib/gradle-launcher-4.7.jar org.gradle.launcher.daemon.bootstrap.GradleDaemon 4.7
Successfully started process 'Gradle build daemon'
An attempt to start the daemon took 1.005 secs.

FAILURE: Build failed with an exception.

>* What went wrong:
Unable to start the daemon process.
This problem might be caused by incorrect configuration of the daemon.
For example, an unrecognized jvm option is used.
Please refer to the user guide chapter on the daemon at https://docs.gradle.org/4.7/userguide/gradle_daemon.html
Please read the following process output to find out more:
-----------------------


>* Try:
Run with --stacktrace option to get the stack trace. Run with --debug option to get more log output. Run with --scan to get full insights.

>* Get more help at https://help.gradle.org

still some daemon shit WTF ??? one more try brings same results of bulshit doeasnt reveal the TRUE CAUSE for BUILD FAILED

'$ gradle --debug --no-daemon clean'

>{ unrelated sensitive data cut}
>16:50:14.639 [DEBUG] [org.gradle.process.internal.DefaultExecHandle] Changing state to: STARTING
16:50:14.640 [DEBUG] [org.gradle.process.internal.DefaultExecHandle] Waiting until process started: Gradle build daemon.
16:50:14.655 [DEBUG] [org.gradle.process.internal.DefaultExecHandle] Changing state to: STARTED
16:50:14.656 [INFO] [org.gradle.process.internal.DefaultExecHandle] Successfully started process 'Gradle build daemon'
16:50:14.656 [DEBUG] [org.gradle.launcher.daemon.client.DefaultDaemonStarter] Gradle daemon process is starting. Waiting for the daemon to detach...
16:50:14.657 [DEBUG] [org.gradle.process.internal.ExecHandleRunner] waiting until streams are handled...
16:50:14.659 [DEBUG] [org.gradle.launcher.daemon.bootstrap.DaemonOutputConsumer] Starting consuming the daemon process output.
16:50:15.611 [DEBUG] [org.gradle.process.internal.DefaultExecHandle] Changing state to: DETACHED
16:50:15.611 [DEBUG] [org.gradle.process.internal.DefaultExecHandle] Process 'Gradle build daemon' finished with exit value 0 (state: DETACHED)
16:50:15.611 [DEBUG] [org.gradle.launcher.daemon.client.DefaultDaemonStarter] Gradle daemon process is now detached.
16:50:15.613 [INFO] [org.gradle.launcher.daemon.client.DefaultDaemonStarter] An attempt to start the daemon took 0.982 secs.
16:50:15.620 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]
16:50:15.620 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] FAILURE: Build failed with an exception.
16:50:15.620 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]
16:50:15.620 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] * What went wrong:
16:50:15.620 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] Unable to start the daemon process.
16:50:15.620 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] This problem might be caused by incorrect configuration of the daemon.
16:50:15.620 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] For example, an unrecognized jvm option is used.
16:50:15.620 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] Please refer to the user guide chapter on the daemon at https://docs.gradle.org/4.7/userguide/gradle_daemon.html
16:50:15.620 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] Please read the following process output to find out more:
16:50:15.620 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] -----------------------
16:50:15.620 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]
16:50:15.620 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]
16:50:15.620 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] * Try:
16:50:15.620 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] Run with --stacktrace option to get the stack trace.  Run with --scan to get full insights.
16:50:15.621 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter]
16:50:15.621 [ERROR] [org.gradle.internal.buildevents.BuildExceptionReporter] * Get more help at https://help.gradle.org

**pleaes add OOM storage watcher during task execution that will throw some sort of StorageOOM exception**

**distracts from the fact that there was no memory left at the start of the gradle .. which should be signalized apriori any taskl start / evaluate**

tneet to consider the SPACE
-- WHERE PROJECT IS EXECUTED (build output)
-- WHEN GRADLE WRITES  (cache, etc)

**those places should be checked during start gradle (LOW MEM WARNING) and monitored as mentioned above**


i have wasted 5 min befor i did to know the real cause..

",uncivil
3899,544730684,"@tkissing-work while I agree in principle clearly this was not @evocateur fault but an underlying package.

It's not fair to put the blame on him. And even if you do feel there is responsibility, you should not be so rude.

Relax, I get the frustration, but let's be civil. Let's not make the person who runs a massive open source project almost by himself job harder than it needs to be.
",uncivil
3900,650276160,"> Nice, the only notable contribution you've ever made anywhere on Github is making sure everyone at Google knows you're a racist.

What's racist about it? Also don't shame others based on their skills and development experience. That's against the code of conduct.

> BlackLivesMatter is not meant to be a racist statement, except you see it like this.

""All lives matter"" isn't racist either, yet [apparently saying that makes you a white supremacist](https://github.com/angular/angular/pull/37407#issuecomment-637864531) or something.

> that's problem in USA only

Precisely this. Angular/Google are just using the platform to promote their local political views on the matter. It reminds me of the day when gay marriage was legalized in the US and Stack Overflow celebrated it with a rainbow logo.  [This answer explained it nicely](https://meta.stackoverflow.com/a/298045/2131286):

>The owners and operators of Stack Exchange and Stack Overflow have made it amply clear that while we as users and contributors are not permitted to use the site and our audience here to promote our political and social beliefs, they, as the owners may.

With an unfortunate conclusion:

> If you do not like this you should no longer contribute to Stack Exchange.

Indeed, there's not much you can do about it. People can express their opinions but the mods are just gonna lock it away ""cause y'all can't behave"" and ""the discussion is getting out of hand and is not productive anymore"".

> Anyone have a list of other political movements endorsed by the Angular site?

From the top of my head, previously it's been determined that [blacklist and whitelist is racist](https://github.com/angular/angular/pull/28529). Funny how the first comment is being sarcastic about [the master branch](https://github.com/angular/angular/pull/28529#issuecomment-460658997) and that [is actually non-ironically happening now](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/), because apparently there exist people who hear ""master"" and immediately think about slavery. I guess I'll give up my Master's degree to show solidarity.

[Also a man being smart is sexist towards women because why not.](https://github.com/angular/angular/issues/25643)

Not really political, but I get the same vibe from [stating that simple things are simple offends beginners](https://github.com/angular/angular/issues/33209).
",uncivil
3901,776104527,"Unprofessional for Flutter team to have this issue for more than 1 year.
It is just shows up the whole Google company style - quantity over quality.
Can't wait cross-platform solution from Apple. It will be just different, as always later than Google, but just perfectly usable.

PLEASE PROVIDE SOLUTION to whole community ASAP or just put Flutter here https://killedbygoogle.com.
",uncivil
3902,716063997,"Well, I'm sorry for having been slightly edgy due to the total irrelevance of that statement with which he accompanies the news that he unblocked me.

I care to repeat that Brian should argue his case from a position of hands on, mature knowledge rather than having us collect that for him and demanding his proposal be accepted unmodified and that none of us is in a better position than to test and evaluate the suitability of including the proposal of porting `canonicalize` unmodified into the go standard library for Windows than he himself and the company he works for. Further I can only repeat my previous arguments and fix the oversight of not mentioning the obvious - that `EvalSymlinks` is implemented with `GetFinalPathNameByHandle` and that some of the problems even [mentioned in this issue](https://github.com/golang/go/issues/37113#issuecomment-649678172) will be exactly the same with `canonicalize` for this reason.
",uncivil
3903,567479681,"Winter is one good buff against invaders in Russia. Praise the winter! Let it snow!

Also I think climate calculations are wrong and new ice age is nearby. There will be more snow. Thank you global warming fighters, for helping to make even more snow!
",uncivil
3904,631050062,"> @probonopd @mirkobrombin so you like this cute little side project... but let's be honest here when it comes to being a serious project it's not one. There isn't major support for MauiKit, the likelihood is that most people probably never heard of it before today, and there is no widespread adoption of it. Can you name 10 large companies that have adopted it?
>
> Your attitude is as if Microsoft is being some big evil corporation. The reality is I highly doubt anybody heard of MauiKit, and frankly nobody cares.
>
> > Let's pretend that this is not a mirror but the official repository (not so).. can a project name be stolen because it has less fame?
>
> Ok let's look at kde... there are 10 open issues... are you seriously going to tell me that a serious cross platform framework has 10 open issues... that's not realistic in any shape way or form. So again your complaints are just being ridiculous.

So a project has value based on open issues?

I have nothing against Microsoft, here we talk about a name and who chose it before (in the same context).

I don't know how you can question the seriousness of one of the biggest communities that drive open source principles many years before Microsoft fell in love with open source.


",uncivil
3905,548249893,"@CyrusNajmabadi, @sharwell  Visual Studio is a commercial product with a dedicated team on staff at Microsoft.  I'm not already familiar with Roslyn, nor do I have time to dive down that rabbit hole.  The people who's job it is to improve Visual Studio's user experience would be better equipped to fix this.


",uncivil
3906,462474845,"Honest question: does anybody read what I've been posting about this issue? There is a bug here and posting that this is fixed is misleading. Maybe I should just submit new issue request specific to the limitations of the the ""delete"" functionality.
",uncivil
3907,1616,"## The Lerna Core team has reverted this PR and revert information and response can be found in https://github.com/lerna/lerna/pull/1633

============================================

In this PR, the following text has been added to the existing MIT license:

```
The following license shall not be granted to the following entities or any
subsidiary thereof due to their collaboration with US Immigration and Customs
Enforcement (""ICE""):

- ""Microsoft Corporation""
- ""Palantir Technologies""
- ""Amazon.com, Inc.""
- ""Northeastern University""
- ""Ernst & Young""
- ""Thomson Reuters""
- ""Motorola Solutions""
- ""Deloitte Consulting LLP""
- ""Johns Hopkins University""
- ""Dell Inc""
- ""Xerox Corporation""
- ""Canon Inc""
- ""Vermont State Colleges""
- ""Charter Communications""
- ""LinkedIn Corporation""
- ""United Parcel Service Co""
```

I have already spoken to @kittens and @evocateur about this privately, but I do need @kittens to give us permission to make this change.

# Explanation

Over the last year I've been really disturbed to see what ICE has done to American immigrants, to an extreme with what has happened to children.

The other day I saw this video from the ACLU about a toddler who after being separated from his family for several months could no longer look his mother in the face:

[<img width=""1312"" alt=""screen shot 2018-08-28 at 3 53 53 pm"" src=""https://user-images.githubusercontent.com/952783/44755388-cdf86280-aada-11e8-8749-3ec6fd27fdcc.png"">
](https://twitter.com/ACLU/status/1033084026893070338)

<p align=""center""><a href=""https://twitter.com/ACLU/status/1033084026893070338"">twitter.com/ACLU/status/1033084026893070338</a></p>

Those with a background in early childhood development can tell you that severe cases of neglect at an early age can and will cause severe developmental delays and disabilities. They will grow up feeling detached, they will have deep rooted trust issues, and they will have an inability to feel empathy. The actions of ICE have had a lasting lifelong impact on these children, and many of them won't even remember it happening.

I have trouble expressing how angry this makes me feel.

And the worst part is that I feel helpless to improve the situation. I vote, I campaign, I phone bank, I donate, I protest, I write to officials, I try to inform others... and yet things just keep getting worse and worse.

There is one thing I have control over, and that's open source. Open source has always been a way that I try to make the world a better place. Bringing new contributions to the community helps drives innovation and competition.

Lerna is a perfect example of that. Historically monorepos required a lot of infrastructure and only large teams and companies could afford to set it up and maintain it. They had a very expensive cost to them. Lerna made it available to everyone and the community has flourished around it.

Tool after tool, this is what we accomplish with open source. This is what we contribute back to the world. But today I want to do something more.

As we've learned over the last few years with Facebook, Uber, Google, and others. Tech companies do a lot of shady things behind the scenes.

Recently it's come out that a lot of big tech companies are supporting ICE by providing them with infrastructure and in some cases doing significant development work for them. They all have their excuses, but the fact is that these companies care only about the millions of dollars that ICE is paying them and are willing to ignore all the horrible things that ICE does.

Recently it has come to my attention that many of these companies which are being paid millions of dollars by ICE are also using some of the open source software that I helped build.

Now, it's not news to me that people can use open source for evil. That's part of the whole deal.

But it's really hard for me to sit back and ignore what these companies are doing with my code. It doesn't feel like there are enough steps in between me and the horrible things ICE is doing.

So my plan now is to start licensing my software differently.

I have spoken to Sebastian and Daniel about this and we all want Lerna to do the same.

For the companies that are known supporters of ICE: Lerna will no longer be licensed as MIT for you. You will receive no licensing rights and any use of Lerna will be considered theft. You will not be able to pay for a license, the only way that it is going to change is by you publicly tearing your contracts with ICE.


",uncivil
3908,558880329,"> > Auto-updates, while they are revealing, are different than pure telemetry by most definitions.
>
> It doesn't matter how we define them, _practically_, immediate auto update checks on launch _amount to telemetry_. It's a rose by any other name. It sends out a launch event across the network, regardless of what the person who implemented the feature intended it to accomplish. It must be treated as such, regardless of intent, because that is the _effect_.

I don't disagree with you, just trying to play devil's advocate a bit. There's clearly a reason Atom's team believes auto-updates on by default is of high importance. Imploring maintainers of an open source software is not going to yield the best results, I think. Nor is telling users to fork your app if they don't like it.

I do think that while delivered in a dictatorial manner, @neilpanchal's comment is worth discussing more.
",uncivil
3909,37925,"Nice, the only notable contribution you've ever made anywhere on Github is making sure everyone at Google knows you're a racist.

_Originally posted by @ncrawlins in https://github.com/angular/angular/issues/37771#issuecomment-650169764_

",uncivil
3910,409405998,"@andrewackerman

> Good job

Dude, you get a compliment from @jstansbe which conveys a lot more information than a thumb up and you thumb down on the compliment?

Obviously you didn't take my hint on length to heart but don't come to conclusions about my character because you don't know me at all.

> The fact that you refer to my responses that I put a lot of time and effort into being as well-thought-out and unbiased as I can make them

That I appreciate and I read all your 'long writings', answering everything: no way, but when I answer properly you don't understand my answer and concludes that I am being dismissive.

It is obvious to me that you are not very experienced with JSX, you really don't understand how it works. So instead of doubling down just own it and I'll explain it in more detail. For example JSX & DSX only does the following 2 transforms (mentioned several times before):

```
(1)
<A property=""a"" />
becomes
new A(property: a)

(2)
<A property=""a"">
<B />
<C />
</A>
becomes
new A(property: a, children: <Widget>[new B(), new C()])
```

Everything else is handled by the host language, so for example: how does it handle import of components named the same; answer: host language. I am not being dismissive, it is the way it is designed and the source of it's strength. You see if you separate markup and programming into separate files, you start to duplicate the programming inside the markup with simple constructs for 'if', etc. You end up building a declarative programming language inside the markup that can never be as powerful as the main programming language. So by bringing the markup into the programming language you have the best of both worlds and that's the power of JSX/DSX.

Notice above on (2) that the transform hardcoded `<Widget>` and that's not always the case, so now you can specify that if needed as discussed before. Look at the transforms and now all symbols come from source or can be specified so there won't be some major magic gotchas in the future.

> while you lambast anyone with any form of contrary opinion.

That's not true, you can have contrary opinion but you can't claim something true when I can proof otherwise.

> For someone who is proposing a significant change/addition to Flutter's feature set, I feel like that's not an unreasonable expectation.

But that's the thing, I wanted the Flutter team to implement DSX but then I did it so what they need to implement is generic stuff that doesn't depend on DSX and DSX is not the only beneficiary. The browser js engine supports source maps which enabled an ecosystem of new languages in the browser that transpiled to js; it enabled the creation of Dart !!! and several others (Coffeescript, Typescript, Reason, etc). Dart could do the same now and benefit from the ecosystem that it helps bring up, all boats rise.

> I'm asking you to defend your position.

I've already done it many times and the conclusion is that Plain Dart or DSX comes down to user preference; and the important thing is to provide option instead of forcing people one way.

> first and foremost being why people should ever use it over the alternatives.

I would use DSX because I prefer it, like spaces or tabs, type definition before or after the variable name. There is no point fighting for it, just accept that people have different preferences; there is more than 1 programming editor out there right?

> familiarity is not a good enough reason

Just your opinion, why do we use ""if"" statements in almost every language, 'for' statement, 'class', and now 'asyn/await'.

> This is not the appropriate place to discuss FLUI though. If you want to discuss FLUI at length, the project has its own issue board, so feel free to post there.

Very good, now you gained my respect.

> you are directly responsible for the two separate occasions (approaching three) where this thread had to be temporarily closed due to things getting too heated.

Thing is even if it gets closed again it won't stop people from asking for JSX-like capabilities.

> shelf your ego, stop interpreting criticisms as personal attacks, and answer the important questions.

I have no ego but I do have short temper so there is no mistaking when someone pisses me off (it comes out right away). Not to offend you but your questions were not important.

> Either that, or make peace with DSX never getting off the ground.

You are not the meter used to measure success and you don't know what I am up to.


",uncivil
3911,567402448,"This is really offending for people that are suffering for global warming and desertfication areas.
Also is that a natural snow icon or a fake snow icon?
Please think about how much water Is wasted to create artificial snow just for games:
https://news.bloombergenvironment.com/environment-and-energy/fake-snow-for-china-olympics-needs-49-million-gallons-of-water
",uncivil
3912,513465579,"> Don’t underestimate how difficult things like this are from a theoretical perspective

I don't. I too write code. And...?

A problem is a problem. If you decide to solve it what's the point of saying in the middle ""okay now it's too difficult"". I trust that there are very capable people working on this project who will _find a way_. :-)

",uncivil
3913,419727764,"I cannot control how other people feel about me, and what emotions they attach to my statements. I can be friendly while being malicious, and I can be the exact opposite. Some people consider a neutral tone hostile for whatever reasons, let it be paranoia or the usually beneficial victim mentality. It is outside my control, and I do not intend to control it. I have autism, so it may be more difficult for me than others, but this is how it is, I mean no harm (which is, and was my intention all along which you did not know before - albeit assumed it, I guess -, now you do).

I agree, it has nothing to do with the actual issue, so we should terminate this conversation. Have a good day. :)
",uncivil
3914,650263698,"Just noticed the #BlackLivesMatter banner on the home page for the first time...what a joke.

Anyone have a list of other political movements endorsed by the Angular site?

Nothing more cringey than tech framework sites posting about politics, even if you agree with the sentiment.
Didn't one of the #BlackLivesMatter ""leaders"" call to take down statues of Jesus depicted as Caucasian, as this is a form of ""racist propaganda""?

Can we change the hashtag on the main page to #WhiteJesusIsHoldingYouBack ?

You know what, the white ""A"" in the Angular logo is all of a sudden making me feel uncomfortable...maybe even a little oppressed. Hmm, could the Angular team be racists??? Maybe we should make a separate issue to change the color to black.
",uncivil
3915,650256067,"As I was told, caring about people is racist. Categorizing people by their skin color is the definition of racism, and that's what google is: racist.

Read this
https://www.projectveritas.com/news/facebook-on-project-veritas-video-comments-made-are-not-consistent-with-our/

That's everywhere ;)

Edit:

Anyway this issue will be closed without an answer since Google doesn't care about people but sticking to their narrative. Everyone here will be called a white supremacist antiblack antiasian antilgtbteq1324 and risking to be banned from the repo.

Welcome to 1984.
",uncivil
3916,567421632,"It is really offending me because I am very snow sensitive and get hurt by snowflakes when it is snowing.

If I see that on the VS code I feel physically hurt.

So remove it immediately like you did the other thing.
",uncivil
3917,630252284,"@DHowett-MSFT I see that you've mentioned this issue from other closed issues but you have not actually commented here regarding the problem or the intention to fix it. I was about to open a new report because this issue also doesn't capture the entire story. But instead I'll post some findings here and hope that you can shed some more light on what the plans are.

First, the problem is not just that the console sessions are silently closed when the program automatically updates. I haven't been able to fully trace what set of circumstances causes this, but I've had processes just get orphaned. The only reason I even realize this is that when I go to re-open one of my command line processes, I see that the listening port is still in use and I can't open it. I've then had to go searching through TCPView and Process Explorer to find the orphaned process and kill it.

Second, I tried to circumvent all of this by installing the Terminal app via Chocolatey. However, it still gets updated via the Windows Store!? I'm not sure why that would happen if I did not install via the Store.

At the very least I would _LOVE_ an option to disable automatic updates. Another solution might be to tie _all_ updates to Terminal to the next Windows reboot cycle? But I think from your comments on other threads this is what you aren't able to do when distributing via the Store.

I would also make the recommendation to just not distribute this application on the Windows Store. This is not really an ideal app for that delivery mechanism. This is a power user / developer targeted app, so I would think it would be distributed more like Visual Studio or Visual Studio Code, or even Power Toys.

Thanks for your teams work on this app. Unfortunately I am going to have to abandon it until this issue is fixed because I'm losing a lot of time and work every other week when an update is pushed and my long-running processes are lost.

",uncivil
3918,490028637,"@creotiv you are looking at the source code of the new terminal. There is no official build available yet so you either build it yourself or wait until the first builds come in. It's really not that hard to understand...
",uncivil
3919,87327,"The Snow Flake on vscode insiders and pushing it as a ""cozy""/""wintery"" thing is very offensive to me. I come from Norway and people who glorify snow is equivalent to the people who glorified hitler during WW2. The amount of deaths caused by winter is massive, not to mention the depression the season brings and you want to bring that into my work space as well? This is unacceptable, everytime I leave my house I see snow and I want to escape into Visual Studio Code and get some work done and what do I see? More snow... To me this is equally offensive as a swastika.

This isn't just me either, think about the people who cannot even get snow, think about how you're making them feel, making them see what they cannot get, although personally I don't understand that. Snow is terrifying.

Version: 1.42.0-insider (user setup)
Commit: 26f5dfc
Date: 2019-12-19T05:31:04.916Z
Electron: 6.1.6
Chrome: 76.0.3809.146
Node.js: 12.4.0
V8: 7.6.303.31-electron.0
OS: Windows_NT x64 10.0.18362

Steps to Reproduce:

1. Install latest build of insiders.

Does this issue occur when all extensions are disabled?: Yes

Additional reading on the issue that most certainly needs to be considered.
[https://thoughtcatalog.com/jim-goad/2015/12/death-by-snow-14-ways-that-winter-weather-can-kill-you/](https://thoughtcatalog.com/jim-goad/2015/12/death-by-snow-14-ways-that-winter-weather-can-kill-you/)
[https://www.nrdc.org/stories/global-warming-101](https://www.nrdc.org/stories/global-warming-101)
[https://www.recoveryranch.com/addiction-blog/snow-depression/](https://www.recoveryranch.com/addiction-blog/snow-depression/)



",uncivil
3920,567461845,"I think it is necessary to **remove** this ""Terminal"" word, as it can really offend someone's feelings in some country at some time. Additionally ""Terminal"" has cost millions of Jews their lives over the centuries because the word ""terminal"" could also mean [""Extermination Camp""](https://en.wikipedia.org/wiki/Extermination_camp).

---

Please remove it immediately and make it your top priority.
",uncivil
3921,567486784,"I was attempting to reproduce the issue. Got as far as to feel the joy of my parents being alive, but then a snowflake got in the way and I got offended.
",uncivil
3922,752301544,"Seems more like Bram enjoys taking all the credit.

Vim has been on GitHub for a while now, and there has been plenty of opportunity for the right thing to be done.
",uncivil
3923,395207602,"Why atom team don't like to fix this issue? I think, you have many professional developers and why this F... RTL problem is not important for you? how a developer can develop a Multilanguage learning app without RTL?
",uncivil
3924,643663108,"That is hilarious. From defacing nodejs.org with blm propaganda, to renaming master branch to avoid similarity with master-slave metaphor. What is the next requirement OpenJS will ask for? To remove the **test** directory to avoid similarity with **test**icles? Please keep technical aspects of the software free of politics and globalistic propaganda.
",uncivil
3925,735681740,"You got my support on this @filmgirl. +1
",uncivil
3926,548356900,"@mdtauk : I don't know what exactly you count ""disingenuous"" - don't I look fair in my valuation of Win10?? Shortly, it's THE WORST system MS made (after Millenium). That's why I feel disappointed(angry) that you support Win10 and WITHOUT ANY REASON drop support for Win7.
The fact I cannot call MS to support Win7 DO NOT means 3rd party products (like your) should drop support too. Actually only MS pushes users to Win10 by intentional ""lack of support for 7"", everybody else do. All my programs still work on Win7 and nobody complain ""ah, we need those features from win10!"".
I say that to discover - do you intentionally cut Win7 from plans or you're really depended from something important in Win10 internals. Believe me, if you cut Win7, you'll fail like .NET Core does.
",uncivil
3927,524576048,"@feross I'm sorry that this is the kind of response you're receiving. Please know that you have the silent support of many who aren't willing to engage with this kind of mob. A message in an install log is a minor annoyance at worst, not the big deal many are making it out to be.

It is sad that so many with such strong opinions have no contributions in the last year outside of this issue. If you aren't willing to contribute your code or your ideas to open source and aren't willing to contribute to projects monetarily, you should consider tempering your views.
",uncivil
3928,16029,"@reduz said on facebook something like (i'm paraphrasing here)

""C# won't really affect the core work because it's run by separate people""

Well.. look here:

https://github.com/godotengine/godot/issues?utf8=%E2%9C%93&q=mono

@akien-mga and other contributors.. get your shit together. Stop shilling for $ from software conservancy

",uncivil
3929,567440983,"User Christian-Schiffer that created such awful request offended many users and Microsoft just standing there like nothing happened. Bring back the Santa's hat!
",uncivil
3930,631050931,"> you want to see what a real Open Source application framework looks like I suggest you start taking notes

There appear to be more passive-aggressive comments towards another project in this thread from you alone than there are from all other people towards this .NET repository. That's not because others really love .NET, but because they try to stay constructive here.

> I am an Open Source author and maintainer so don't try lecturing me

I am afraid this is not how most open source maintainers respond in a community.
",uncivil
3931,272471109,"> I have dreamed for years of having WCF across their entire network so that I can finally (!) have reliable transactions and durable services spanning their various generations of Linux and Windows.

This is another good reason to not support WCF. Years of people implementing designs using WCF based on false assumptions or mythical functionality.
",uncivil
3932,661544204,"Hey, I was there for the first or changing default configuration directory, and all the issues it created; And I'm one of the person who has to deal both with public and private requests about the bits of documentation that users have tried on the internet and does not work because its inaccurate, either when it was written or because IPython changed, so yes I'm well aware of the consequences of changing.

And so yes the official documentation is one of the last place users looks for that information, and yes sometime they look at the latest docs for 5 years old IPython version.

Yes `~/.ipython` is not optimal, and no it's not a code smell we removed all the complex logic because it was brittle and was super confusing, and because every time we were teaching software carpentry there was section with all the combinaisons of linux/mac/windows IPython version x.y.z

So yes I was of your opinion 10 years ago, and no to this days I still don't know the 3 path on each of the platform, even on Mac which I'm using everyday and which now hides ~/Library in the finder.

You can change the code location by setting environment variables, and I told you that if it was not working with configuration in xdg dir I would gladly accept patches for that so that you have  the choice.

Now if it's to criticize the code without proper understanding of the technical and social reason of why it is the way it is, and bring XDG zealotry into the mix, I'm even less likely to make an effort.

PR still accepted but discussion closed.


",uncivil
3933,784564400,"> The challenge is that you may be asking for X, and we may provide exactly X, only to find out soon after that you actually wanted X', and that X is not sufficient for all your cases

So now you are implying that I don't even know what I want? What's next, telling me to get used to doing things your way because reasons?

Well I know one thing for certain -- I do not want an AI or any piece of software to ""think"" instead of me and attempt to interpret my consistent keyboard input in different ways at different times as it pleases.

Humans are creatures of habit and muscle memory is how we free our brain's capacity so it can perform more complex tasks, contextual controls or behavior are breaking muscle memory and are thus bad UI and software design.

Again, all I want is that spaces and tabs are left as I entered them when the line is reformatted. Nothing more, nothing less. All existing indentation and spacing formatting was fine for me before this ""smart"" tab to space conversion on reformat was added. I just want an option to turn it off.

How hard can that be?
",uncivil
3934,584777959,"@terrajobst

> Telling other contributors to not comment because ""you have no clue what you're talking about"" is toxic behavior

I don't remember what exactly the deleted comment contained but I'm pretty sure I did not tell anyone not to comment. I complained about his superficial behavior.

> So to be clear: just because your contributions are valuable doesn't mean you get a pass on following our Code of Conduct.

Well, I consider his behavior to show a lack of respect for other's people work and time. As such I don't care about what the code of conduct says because anyway I don't plan to contribute more work to this OSS project. Speaking about toxic behavior...
",uncivil
3935,148,"This project collects usage data and sends it to Microsoft. Please stop collecting MY data and remove telemetry from all your f**g Windows products.

",uncivil
3936,87348,"Please restore the comments in https://github.com/microsoft/vscode/issues/87268 and unlock https://github.com/microsoft/vscode/issues/87291.

I enjoy reading drama, please don't take my only pleasure in life away.

",uncivil
3937,160501760,"> you github employees

This is challenging the person, not the idea, and is generally considered poor form in online discussions.

You still haven't addressed my concern with this Issue, @crquan, namely that there isn't a method of determining if Atom is ""beyond the size of an editor should be"". You only state that 208MB is too much. A bug is nearly worthless if it cannot ever be fixed. And without a clearly defined goal, this bug cannot be fixed.

Is 207MB too big? Is 200MB? Is 10MB? Please give an example of what size is ""small enough"" and what size ""too big"" and, most importantly, why.

",uncivil
3938,728786004,"NOISE!!

This is not the first time an issue has been rejected and the suggestion of
further discussion be moved elsewhere.  The difference is that those people
gracefully did as was suggested as opposed to continually whine.

You seem to have some entitled opinion that just because you would find
something useful, everybody else must, and thus it must be included in the
language, and you're not willing to accept ""no"" as an answer.  You are
acting like a petulant child, so I ask once again, if you're not willing to
follow Cyrus' suggestion to move this discussion, PLEASE STOP!

END. FINIS. DONE.

On Tue, 17 Nov 2020 at 08:30, Thaina Yu <notifications@github.com> wrote:

> Because he's continually said that this proposal had been rejected; he's
> said why it was rejected; and thus all this complaining on a rejected issue
> is just noise.
>
> If you want to talk about it further, do so where you have been asked to
> go. If you don't want to do that, you obviously don't care as much about
> your proposal as you seem to.
>
> These two paragraph is not the logically related at all. The announcement
> about rejected is fine. We have rejected proposal as always. The complain
> is also normal reaction as always. And the explanation and reasoning is
> exist but that doesn't mean it must always be acceptable or even
> reasonable, or even corrected. And that's also normal that people who
> against it would like to have more acceptable reasoning or possibility of
> rethinking (Like generic that was rethink and reintroduce in C# 2.0)
>
> The announcement and argument also exist here in repo and issue board of
> the repo so we come here to voice our argument in here to be on topic. But
> then the argument and debate must go into the gutter like chat channel to
> make it easier to forget, that's all reasoning I could understand about why
> we need to go there, the team just don't want to listen or even have clear
> evidence that people appeared to go against your decision (I might be
> overthinking things but this was one technique a dictator would used to
> suppress opinion of people)
>
> At first I just try to point out that the argument used to reject is not
> sound enough. Sure I have support this feature but if there is valid
> argument, like breaking change, I would consider it understandable. But for
> assumption that this feature will have minimal usage is very unlikely and
> very vague argument
>
> But not only there are no further explanation, you just demand people
> voice's to be drained into gitter and discord instead of the issue topic
> itself. This is what I really would called unreasonable
>
> And in fact I felt very uncomfortable because this is not what we commonly
> do here. As I said there was always rejected proposal and people always
> voice their opinion under issue of that topic. But I have never seen that
> we need to move the discussion to chat channel. At most the issue itself
> would be turned into discussion. But now you just don't want discussion to
> be under the issue and we don't have reason why it changed
>
> ps. I guess this comment would be marked as off topic while above comment
> would not
>
> —
> You are receiving this because you commented.
> Reply to this email directly, view it on GitHub
> <https://github.com/dotnet/csharplang/issues/3117#issuecomment-728771652>,
> or unsubscribe
> <https://github.com/notifications/unsubscribe-auth/ADIEDQKCGEJUKJTA2RROS4DSQIYAXANCNFSM4KJ2KCKQ>
> .
>

",uncivil
3939,631042797,"And this is not even a confusing _similarity_.
We are talking about a multi platform framework called MAUI, and a multi platform framework called MAUI. You could've at least googled the name you were giving to your product before doing so, or choose one that's used from a product with a different scope.

KDE is one of the very biggest community in linux. Maui is part of KDE. So much for Microsoft ❤️ Linux.
",uncivil
3940,415326258,"Why is this issue still assigned to the `2.5 milestone` when `ansible 2.5` is already release a long time ago ? See #44556 for outdated milestones.

Please reassign to a current milestone, this is a really missing feature imo (especially the lack of rekeying functionality).
",uncivil
3941,567477392,"Can you people stick on topic? This is a serious discussion about the terror that is snow flakes and how it terrorises a lot of people everyday, even more now with the new VS Code update.
",uncivil
3942,784574163,"> As you may have noticed, this is actually a fairly complex space with lots of varying concerns...

Then just concentrate on the **original problem in the first post**.  It's a very straightforward problem.
**Tab characters, between code and double-slashed comments, are changed to space characters when auto-indenting is performed.**
Auto indenting works fine - it uses TAB characters when asked, but TAB characters after the code are changed.
Why?

This is with **Always keep TABs** option selected.
If this is a feature, and not a bug, then someone please explain why, when **Always keep TABs** is selected, these TABs are being replaced by Spaces?

This behaviour does not exist in older versions of VS.  At some point it has been added by someone, for some reason.
That was the point at which the user experience was broken.
",uncivil
3943,374160427,"@gubenkovalik ... the reality is just opposite, it is the very suitable framework especially for real big projects. Just to guess, your problem is probably that you see it / try to use it by the same way as from jQuery point of view which is totally wrong way.

> But when you deal with real big scale project - the hurt is the only thing you get.
",uncivil
3944,541413577,"> Have you ever worked with a QA team? You don't see the problem with this philosophy at all?

Lol, I actually did. And changing something like this would definitely be something we would not change for free. And that would also be something where we would be paid to do some hack because the client does not understand a word about its own tools.

> No you cannot. This would mean destroying and completely redoing each and every single Animation. In my case that's a year's worth of work. Once again, this issue is about the Frame property. Not the newly added Coords. If the Frame property is still available in the engine, it still needs fixing.

Yeah, that's a year of work. Next time you will have to think a little bit more about how a feature works before using it. And we won't solve your problem by introducing workarounds in the code, sorry. And once again, there is nothing to fix here, unless you have a real ""solution"" to the problem. Otherwise, stop wasting our time.
",uncivil
3945,401185533,"@bnoordhuis I do have relevant things to say, as a user of the project Ben.  Your heavy-handed and dismissive approach to moderation diminishes the project and the whole community.  Just because you are afraid taking responsibility doesn't mean someone else won't step up to it.

What I'm trying to say Ben is that you are on a larger team, and that team can support you through the hard stuff.
",uncivil
3946,360226663,"Also, the only way someone can convince someone else to work on something on this project is good arguments from one side and the will to do it from the other side.

Not only in this case there simply are no good arguments against implementing mono (in fact, there are only good arguments in favor of it), but also developers willing to do it.

It's unavoidable, this project has life of it's own, I am not in control of it.
",uncivil
3947,596160522,"@lasjorg
after bit thinking...
console is the settings page?
modes is night/light modes?

regardless firefox, ill just repeat my self:
i tried to log in from microsoft edge and torch browser but it failed. should i open one more bug report?

now i have the feeling you didn't read anything at all.
did you try to do this from ANY other browser? or you just assume that if it works for you work for absolutely everyone?
",uncivil
3948,547351504,"Here, renamed, be happy.
",uncivil
3949,472505912,"I guess the solution is to use gio when gvfs-trash is not present, because it's been deprecated for quite some time.
Part of the solution would be to make the error message relevant.
Some workarounds have been provided and they work. So, the solution could consider them.

The problem is nbot the ability to permanently remove files, please the first message of the issue... It's explicit.
",uncivil
3950,490082992,"> Then why inviting people to `try it out`?

You're referencing that picture of a tweet, right?  The tweet posted by Windows **Developer**?  The Twitter account primarily followed by developers?  The one that says ""Microsoft Developer is your resource for development tips, tricks, research, case studies...Everything you need to develop apps that users love.""?   The tweet I'm assuming is targeted towards developers, not standard users?

You're talking about that one, right?

Even then, my only real question to you is this:
https://github.com/warpdesign/js-x86

Where's your binaries?  Just because it's ""early and incomplete"" (just like this code on this repo is) shouldn't be an excuse.
",uncivil
3951,717928534,"@JensErat @aojea Since there is no need for uses to configure http2 health check, I do think we should add http2 health check by some reasonable default values, and if you guys think pingTimeout=2s is two short, we can tune it larger, maybe default 15s is a good option.
Besides I can't find any significance that setting http2 Transport ReadIdleTimeout as the half of http Transport IdleConnTimeout, Is there any relationship between these two configurations?
PR #95898 looks pretty but unnecessary, again, I insist my way to fix this problem, which is no doubt the most simple and efficient approach to this problem.
And I don't care about which PR will be merged finally, but I do care about the most reasonable solution for this problem.
If you guys could give reasons for setting http2 Transport ReadIdleTimeout as the half of http Transport IdleConnTimeout instead of some reasonable defaults, I'll be happy to close this PR ASAP.
",uncivil
3952,596148253,"@RandellDawson
bot or something? your comments look absolutely random with quite zero connection to the reality. either a bot or ... very unintelligent person. which is fine by me as long as you keep a distance from me. so, if you don't know a solution, DO NOT POST ANY COMMENTS.
it says: Member of freeCodeCamp.org but that means you actually know the system. do you?
can you go to https://www.freecodecamp.org/settings without logging in?

**To Reproduce**
Steps to reproduce the behavior:
1. Go to '...' https://www.freecodecamp.org/settings
2. click on night mode ON
4. See error: Something is not quite right. A report has been generated and the freeCodeCamp.org team have been notified.

and again
if you don't know a solution, DO NOT POST ANY COMMENTS.
",uncivil
3953,659320113,"This is the kind of coding quality we get when corporations prioritizes employee diversity over code quality
",uncivil
3954,567461643,"I'm from New Zealand, and in the Southern Hemisphere, it's not cold, but hot during the holiday season. I suggest you geo-locate the user's position and prompt them for the icon of their choice, e.g. snow, ice, fire, sun shine.
",uncivil
3955,471359970,"By this logic ang- is a terrible choice as it could stand for anything from negative words like ang-ry to religious words like ang-el.

Trying to find two or three letters that are universally innocent in every language in a way that you cannot somehow turn them into something negative is probably an impossible task.
",uncivil
3956,6418,"From #4886, #6109, and other discussions I think it is clear that this project has no active owner. I am BEGGING @levithomason, @jlukic, or any other project owner to PLEASE add at least two more trusted owners or managers with the power to add more committers and maintainers so badly needed.

",uncivil
3957,398283349,"> It is OK too, it just not helpful to make false statements like: 'works for me' and 'you messed up writers' because you did not bother to run the repro-case following very simple instructions.

If I state that your sample ""works for me"", it of course means that I did bother running it on my side and didn't get to reproduce the issue you're mentioning.

>  I let Gatling community know that Gatling exhibits strange behavior in the presence of other libraries

That's mostly likely an invalid statement, as:

1) your sample works, at least on my side
2) the library you're mentioning, `io.kubernetes:client-java`, is built on top of Square's okhttp and doesn't share any dependency with Gatling which is built on top of Netty.

> and you @slandelle do not care.

Let's agree that we disagree and that nothing good will come from this discussion.

```
MacBook-Pro-de-slandelle:gatling-stuck slandelle$ mvn clean gatling:execute
[INFO] Scanning for projects...
[WARNING] The project com.inspur.k8s.testing:gatling--testing:jar:1.0-SNAPSHOT uses prerequisites which is only intended for maven-plugin projects but not for non maven-plugin projects. For such purposes you should use the maven-enforcer-plugin. See https://maven.apache.org/enforcer/enforcer-rules/requireMavenVersion.html
[INFO]
[INFO] --------------< com.inspur.k8s.testing:gatling--testing >---------------
[INFO] Building gatling--testing 1.0-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO]
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ gatling--testing ---
[INFO] Deleting /Users/slandelle/Downloads/gatling-stuck/target
[INFO]
[INFO] --- gatling-maven-plugin:2.2.4:execute (default-cli) @ gatling--testing ---
06:20:02.536 [main][WARN ][ZincCompiler.scala:141] i.g.c.ZincCompiler$ - Pruning sources from previous analysis, due to incompatible CompileSetup.
06:20:07,571 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml]
06:20:07,571 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy]
06:20:07,572 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [jar:file:/Users/slandelle/.m2/repository/io/kubernetes/client-java/1.0.0/client-java-1.0.0.jar!/logback.xml]
06:20:07,572 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs multiple times on the classpath.
06:20:07,572 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [jar:file:/Users/slandelle/.m2/repository/io/kubernetes/client-java/1.0.0/client-java-1.0.0.jar!/logback.xml]
06:20:07,572 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [jar:file:/Users/slandelle/.m2/repository/io/gatling/gatling-maven-plugin/2.2.4/gatling-maven-plugin-2.2.4.jar!/logback.xml]
06:20:07,586 |-INFO in ch.qos.logback.core.joran.spi.ConfigurationWatchList@61dc03ce - URL [jar:file:/Users/slandelle/.m2/repository/io/kubernetes/client-java/1.0.0/client-java-1.0.0.jar!/logback.xml] is not of type file
06:20:07,636 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set
06:20:07,637 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
06:20:07,644 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [console]
06:20:07,649 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
06:20:07,700 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to INFO
06:20:07,700 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [console] to Logger[ROOT]
06:20:07,700 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.
06:20:07,701 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@50f8360d - Registering current configuration as safe fallback point

06:20:08.648 [GatlingSystem-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger - Slf4jLogger started
06:20:08.934 [GatlingSystem-akka.actor.default-dispatcher-3] INFO  i.g.c.stats.writer.LogFileDataWriter - Initializing
06:20:08.934 [GatlingSystem-akka.actor.default-dispatcher-2] INFO  i.g.c.stats.writer.ConsoleDataWriter - Initializing
06:20:08.941 [GatlingSystem-akka.actor.default-dispatcher-2] INFO  i.g.c.stats.writer.ConsoleDataWriter - Initialized
06:20:08.953 [GatlingSystem-akka.actor.default-dispatcher-3] INFO  i.g.c.stats.writer.LogFileDataWriter - Initialized
06:20:09.316 [main] INFO  io.gatling.http.ahc.HttpEngine - Start warm up
06:20:09.697 [main] INFO  io.gatling.http.ahc.HttpEngine - Warm up done
Simulation com.inspur.k8s.perf_tests.BasicSimulation started...
06:20:09.906 [GatlingSystem-akka.actor.default-dispatcher-4] INFO  i.gatling.core.controller.Controller - InjectionStopped expectedCount=1
06:20:10.054 [gatling-http-thread-1-2] INFO  io.gatling.core.action.Pause - Pausing for 7000ms (real=6988ms)

================================================================================
2018-06-19 06:20:13                                           5s elapsed
---- Requests",uncivil
3958,491030328,"This horribly annoying behavior in Visual Studio bothered me multiple times today.  It's so unbelievably annoying!  I'll upgrade to VS 2019 just for this improvement once it's available.  I'm anxiously awaiting.
",uncivil
3959,461716277,"@calidion It would be appreciable and civilized if you stopped calling the other's point of view &mdash; or the point of view you think they hold &mdash; ""stupid"". Just be decent and follow the community's rules. Even worse, you don't seem to try to understand the other side point of view, and rush to your own conclusions.

@DynConcepts

> [If] the consumer cannot base their actions reliability upon [semantic versioning], then what is the value of it even being exposed to the consumer?

Very easy. Just imagine a version signature which has majors only, which would be equivalent to a standardless version signature (i.e., not semantic).

You need to upgrade a library from version `234 503` to `244 503` because this last version gives compatibility to a set of target platforms you need to integrate.

But you have no idea of the **intended** breaking changes by just looking at the signature. So you have to read the changelog from `234 503` to `244 503`, have fun!

Quoting from the original specification:

> Without compliance to some sort of formal specification, version numbers are essentially useless for dependency management. By giving a name and clear definition to the above ideas, **it becomes easy to communicate your intentions to the users of your software**.

Semantic versioning is about **communicating**, nothing more.

> Yes, I agree it is about contracts, but this leads to the discussion of what exactly is a contract that provides the value necessary to truly be useful to the consumer.... In my experience there are multiple orders of magnitude between what is typically produced as a contract [by the publisher] and what is needed by the consumer to determine the impact on their usage.

I am certain this is an area of improvements, and this is why semantic versioning is only at [version 2.0.0](https://semver.org/) right now! To do so, we could explore different canonical unintended breaking changes between minors that happened in software history, where the interpretation of the contract was at stake. And from there, extrapolate a taxonomy of contracts and library purity.

What I mean by library purity is close to purity in functional programming: if you only expose functions with no side effects, the library is *pure*. If your library instantiates a singleton in the global namespace, it is *unpure*. If it rely on non-javascript, environment-specific binaries, it is *environment-coupled*. But I am sure we could go way further in describing what could be called the **library footprint**.

From that library footprint exposed to public knowledge, leveraging the impact of a library update would be easier.

",uncivil
3960,567453598,"I find the ""V"" in ""VS Code"" offensive. It represents two fingers being held up in an obscene gesture and could be read as ""F*ck You"".
",uncivil
3961,567454382,"Why was that guy even pandered to in the first place? The story of Santa Claus is not directly tied to any religion in particular. While yes, it's stems from Christianity, nowadays it's completely secular.. If Santa is a religious figure, then so is the Grinch,

It's so sad that people are so sensitive in the world we live in today that this sort of thing is even worth discussion..
",uncivil
3962,471323370,"I disagree with this feature request.

Firstly, I tilted my head in confusion when I read ""ugly racial slur"", because none came to mind. Took me a couple of seconds of staring at `ng-repeat` to understand what you mean. I think that the girl was in a vast minority of people who would interpret `ng-repeat` as [the word I assume you're referring to](https://en.wikipedia.org/wiki/Nigger). In fact, I find it fascinating that someone at an Angular workshop was confused. Did the girl really not notice the pattern of `ng-app`-`ng-init`-`ng-model`-`ng-if` leading to `ng-repeat`? Furthermore, I am amazed by how you, as the teacher, managed to avoiding pronouncing _any_ of the directives as ""en-gee"" during the whole workshop.

Furthermore, a question on StackOverflow asking for the etymology of the `ng-` prefix is by no means ""evidence that it is a confusing name"". Being curious about an official origin doesn't mean you're confused.

Replacing the directive would not make the project more ""inclusive"". There are several definitions for this word, but I will assume that you meant this one: ""not excluding any section of society or any party involved in something"" (please correct me if my assumption was incorrect). The project is already as inclusive as it gets: _everyone_ is welcome to use it and participate in its evolution by contributing, pointing out bugs, asking questions and helping others. Changing `ng-` to `ang-` would not affect this fact, positively or negatively.

Also, it would certainly not be ""easier to remember"" because that would mean changing every existing material online. It would be a huge breaking change and I'm sure that a huge portion of developers would be outraged. Angular already had one issue with renaming few years ago, which brings me to the following point: `ng-repeat` is not an Angular directive. It comes from a different framework called AngularJS, so this issue is opened in a wrong place. Angular uses `ngFor`.
",uncivil
3963,702292278,"We need a new free option, this is a core component and cannot be outsourced to 3rd party companies.

**THIS IS TOO CRITICAL**
",uncivil
3964,728306688,"> @CyrusNajmabadi I think to make right decision for this feature is to create a poll

The language direction is not decided by polls.  It has a design group that has total control over the design process here.

> C++/Swift has both top-level functions and static methods and it is not annoying anyone

What C++ and/or Swift do isn't part of our decision making process for C#.

>  and ask people will they use this feature and would not be it annoying that exist two solutions: static methods and free functions

'annoying' was not part of the decision making process.  We genuinely do not believe this is a good feature to add to C# at this point in the lifecycle of the language.
",uncivil
3965,34281,"##### ISSUE TYPE
- Feature Idea

##### COMPONENT NAME
import_playbook

##### ANSIBLE VERSION
<!--- Paste verbatim output from ""ansible --version"" between quotes below -->
```
2.4.0.0
```

##### CONFIGURATION
<!---
If using Ansible 2.4 or above, paste the results of ""ansible-config dump --only-changed""
Otherwise, mention any settings you have changed/added/removed in ansible.cfg
(or using the ANSIBLE_* environment variables).
-->

n/a

##### OS / ENVIRONMENT

CentOS 6

##### SUMMARY

I need to conditionally import a playbook, which isn't possible.  The keyword I'm missing is ""include_playbook"" which would allow a ""when"" to apply to it.  Why?

I have a playbook that performs some maintenance, OS, Kernel, package, and firmware upgrades.  For Major upgrades, we track progress in a ticketing system.  So, during those runs, I'd like to conditionally import a playbook that updates the ticket information.  In order for that to work, I need to pass the user's password to the ticketing system, so there's a `vars_prompt` in the ticket update playbook.  If the user specifies which ticket they're working to the maintenance playbook, I'd like the ticket update playbook to be called after the maintenance is performed.

If there's another way for this to work, I'm open to alternate ideas, but I think conditionally playbook imports would be generically useful.  I'm not understanding why tasks could be included dynamically, but a playbook wouldn't be.

##### STEPS TO REPRODUCE
<!---
For bugs, show exactly how to reproduce the problem, using a minimal test-case.
For new features, show how the feature would be used.
-->

<!--- Paste example playbooks or commands between quotes below -->
```yaml
# Maintenance Play Runs first, then conditionally import a second playbook
- import_playbook: update-ticket.yaml
when: ticket_id is defined
```

<!--- You can also paste gist.github.com links for larger files -->

##### EXPECTED RESULTS
<!--- What did you expect to happen when running the steps above? -->

I expect `update-ticket.yaml` to only import if the `ticket_id` is defined.

##### ACTUAL RESULTS
<!--- What actually happened? If possible run with extra verbosity (-vvvv) -->

no parse error, and playbook `update-ticket.yaml` is imported 100% of the time.


",uncivil
3966,574551507,"ServerChatEvent controls the message being sent to all players, not allowing me to exclude the players who have opted out of the censor. ClientChatEvent modifies the message before it gets sent from the client to the server, which is not what I want.
I understand that it won't be accepted, I'm not contesting that. Again, I wasn't aware that Netty allowed messing with low level packets like this, and I intend to look into that as an alternative to using a coremod.
Lastly, I wouldn't have edited that link back in if you had simply put _link removed_ or something along those lines in the first place. I don't appreciate you basically calling me an idiot in all caps when you didn't bother to even consider that maybe I had a good reason for doing it the way I did.
",uncivil
3967,600439129,"So now I'm going to reply exactly the way Microsoft replies to me.

@MichalStrehovsky correctly stated that ""since ~.NET Framework 1.0"", the .Net Native compiler has had certain documented behaviors in the way it generates its code.   The implication being that an understanding of .Net Native characteristics requires different design choices.

It's a very convenient way of saying that the bug I had in my code was a bug with my design rather than the .Net Native compiler even though my code did/should work in any given .Net runtime context, but .Net Native is special, thus requiring special design considerations.

@AArnott, before you close this issue you will have to adjust where you point the finger.  The problem isn't with MessagePack, according to @MichalStrehovsky the problem is your design choice since you, being on the inside of Microsoft, have an even better understanding of the way the .Net Native compiler works.

Or, the problem is the .Net Native compiler documentation because even Microsoft staff are not aware of the design considerations they have to employ to build products that support Microsoft tech.

Or, the problem is the way Microsoft operates internally because you folks are prepared to ignore each other and go off to build tooling that your customers are unable to use.

Or, the problem is Microsoft knows what the future holds, and dumps technology support for its existing tech knowing that that tech is about to be invalidated by what comes next.

There are several other logical or cases.  You get the point.

This issue is not related to MessagePack.  I don't want it swept under the rug because either Microsoft is here to support the developers using its tech, or Microsoft does as it pleases regardless of how it affects the developers it has convinced to use its tech.

@AArnott, I suggest you run this by your bosses.  Either you made a mistake, or the entire organization has.

",uncivil
3968,567434571,"I don't know if it makes any difference, but I'm a black Jew living in Uganda.
",uncivil
3969,567451529,"@daniel1302 Please stop offended me! You're not my dad, I can use everything I like / dislike!
",uncivil
3970,717920672,"> @duyanghao Calm down. I do not mind whose PR get merged. We are talking things technically, don't make it personal.
> If you insist. I'd like to tell you that [we have already talked about this issue months ago](https://github.com/kubernetes/kubernetes/issues/87615#issuecomment-647915537).
>
> I prefer forward-looking solution instead of solving questions at hand. That's why I have opposition to your PR.
>
> I have every concern with cause and conclusion posted in you PR, that's technical.
> You have disagreement but no reason. That's personal.
>
> If you feel disrespect on ""nasty"", I apologize. I have neat freak on coding : )
> And you should learn how to use Git with clear&clean commit history.

@povsister You are so unbelievably arrogant that I don't want to waste my time arguing with you. And I am able to do git sqaush, besides this is my reason against your proposal
>>I do think users should not care much about the http2 health check, and it's not something Kubernetes even want users to notice, therefore I still suggest to set it by some reasonable default values. Besides, in your ‘proud’ PR, the http2 Transport ReadIdleTimeout is configured as the half of http Transport IdleConnTimeout, Is this reasonable?
",uncivil
3971,716059373,"> the Windows maintainer has objected to this proposa

@networkimprov I assume you refer to me as `the Windows maintainer`. That is not my title. Please stop inventing things. You give false impression to others.

Thank you.

Alex
",uncivil
3972,135973662,"Aww.. Here, have a beer on me: :beer:

",uncivil
3973,439952944,"I know it always seems like a fine and dandy idea to say ""hey we're going to break back-compat for thousands of existing apps so we can add some new features for people"" but we like to hold ourselves to a higher standard than that. We've found a path where we can do good for all of the existing users of the console codebase, and slowly introduce new features and modernize, without leaving customers behind.

Sure, we could have deprecated the old console and parked the console subsystem and implemented a new PTY subsystem. That's a path we could have taken, but that would have left everyone with an existing console application asking ""why did Microsoft deprecate their entire console API with no plan to modernize those existing apps? Are they *fools*?""

We're just now in a place where the console subsystem *can* support conpty, where it can support other rendering heads, and where the backing buffer could possibly support emoji and other unicode codepoints. It might not be the path that makes *you* the most happy, but it's the path that makes the most developers the most happy.

We're working on a new rendering head. No commitments as to when it'll be finished, but we're working on it. When it's done, then that will likely resolve the performance issues described in this thread. I haven't personally debugged into this issue, but my gut agrees with Rich's analysis that the issue is coming from GDI. I certainly wouldn't call this a major perf regression, and I doubt it's due to any of our code in particular. It's likely just due to a really old CPU-bound graphics API that's not optimized for running on new hardware.

As @warrenrumak mentioned, if you're unhappy with how the console is performing, go ahead and switch back to legacy mode.

",uncivil
3974,784046710,">
>
> I've never seen git do that.

No matter, you've never seen any other existing or previous code editor, since text editors first existed, behave the way VS does.
When auto-indenting, it ALWAYS changes TABs between code and line comments to SPACES no matter what settings are selected - like the 'always keep TABs' setting.
Nobody asked for this behaviour.  It's a bug.
Obviously it's more convient to blindly deny it here rather than simply fix it.
",uncivil
3975,450477235,"@gunchleoc I appreciate the sentiment, but you're getting a little extreme. Let's look over your proposed disclaimer:
>Translating to another language is difficult, and computers haven't quite mastered it yet. Only use this extension when trying to understand a project that was created in another language

Right off the bat, this is already very extreme. Why shouldn't you use the translate extension for a purpose other than this? Computers haven't quite mastered it, sure - but they're already very good, and 99% of the time translation errors are caused by GIGO rather than actual mistranslation.
>you can remix it and add the translate block to your remix. We recommend that you do not publish such remixes.

Why not?? What's wrong with sharing your attempt at understanding another language?
>Do not use the translate block inside of join blocks, because it will result in the wrong word order for some languages and you'll sound like Yoda.

Good recommendation, but the ""you'll sound like Yoda"" is too informal for a disclaimer. And in many languages word order isn't as significant (e.g. Latin) and grammar is mostly determined by word endings, rather than order. Nothing wrong with using join blocks with languages like that. I think this should read something more like ""Pay attention to what language you're translating when putting the translate block inside join blocks. Sentences in some languages may have completely different meanings based on word order.""
> Please be aware that machine translation can produce offensive content by accident and that it will often contain grammar errors.

Can produce offensive content by accident: yes. Often contain grammar errors: no. At least for Google Translate (which is, I believe, the API that the translate blocks run on), the grammar errors are few and far between. Most issues with machine translation are with prosidy and not syntax. Better to say that ""machine translation can contain grammar errors or offensive content by accident"".

As for your real-life examples: Scratch isn't going to be used in airport displays (if they are, I'd be quite shocked) and the ""an""/""am"" problem looks to be a transcription error rather than an error of the machine itself (like somebody said to the person typing, ""am Flugsteig"" but the ""m"" sounded like an ""n"").

Don't get me wrong - I do agree that some languages should not be in here as there is too little to base machine translations on, and Scottish Gaelic fits that description - I just think your disclaimer is a little too strong, a little too scary, and a little inaccurate.
",uncivil
3976,567447254,"> This censorship is literally a new holocaust!

You deserve an award for skyrocketting the level of drama of this topic 👏 🍾 🎖 !
",uncivil
3977,394882214,"This issue doesn't provide the steps to reproduce, or the exact expectation you're looking for with the example provided. It would be much easier to understand if you simplified the example somewhat (remove the extra calls inside your auth service) and explained what you're actually looking for.

Also, I'm closing and locking this issue based on the [Code of Conduct](https://github.com/angular/angular/blob/master/CODE_OF_CONDUCT.md) and the lack of respectful communication within this issue.

If the issue persists, please create a new issue with minimal reproduction, and explain exactly what to do to reproduce the issue you're having and the expected result.
",uncivil
3978,567468681,"Every Christian should be renamed immediately to eliminate possible offence. The name should be strictly prohibited for future use.
",uncivil
3979,518135153,"@ljharb It can be done by overriding `_createDispatcher` so if that method would be acceptable to enzyme I can hook it in. Is there someone I should be @-ing from the react team to get some 👀 on this? Seems to be quite a lot of interest, but not a single issue on this topic has received a comment from a maintainer in 5 months. Maybe they would have dropped in to tell us it won't be accepted and not to waste any effort on it?
",uncivil
3980,784598731,">
>
> Here's an example of an issue, based on previous discussions with other customers on this topic. What i've heard from _other_ customers (again, not you), is that it's not necessarily that they want `tab` to be preserved, but that they want comment alignment to be maintained. in a system where we kept the tabs, we could potentially end up with something like this happening:
>
> ```cs
>     x();    // this is here
>     y + z + w + x();    // but now this is here
>     x();    // but this is back down here.
> ```
>
> And so on and so forth, instead of keeping comments aligned as they wanted.

But this situation is _worse_ when spaces have been inserted.  This is my biggest frustration with this change in behaviour, and there is no way to avoid it.  It's far easier, and far less typing, to manually realign with tabs than with spaces.  To make matters worse, some lines are left alone & some are changed to spaces, so you don't know until you start typing.  It's VERY unpredictable and frustrating.
",uncivil
3981,655451369,"@CodeLiam  I guess my `Masters Degree` now has to renamed to `Main Degree` as well..

What people don't grasp is that in this context, the Master is like the Master in an audio recording. It's THE version. That's the context and the only context. I can't believe the insanity that's going on.
",uncivil
3982,381530724,"Our team learned **ng** as well, the problem is two things for now:
1) router lazy loading doesn't work with relative path (problem leaves since angular 2 - wtf?);
https://github.com/angular/angular/issues/17957
2) unstable **angular/cli** (every time something doesn't work since 1.6.x);

P.S. documentation covers not a lot i'd say, if you want to learn angular, read material's code, it's more convenient than angular's documentation

i just feel that **angular team doesn't care about users feedback at all**
",uncivil
3983,567446711,"This censorship is literally a new holocaust!
",uncivil
3984,351081596,"@birkir I see lots of excitement about JSX here but nobody seems to bother to explain what exactly Flutter would gain from having such a DSL, except perhaps some better readability which is mostly subjective.

More features usually only hog down a framework instead of improving it.
Implementing them also consumes lots of resources that are missing from other areas where missing features actually prevent people from implementing certain applications.

So if you are excited about Flutter getting something like JSX, you should invest you time and energy in writing up convincing arguments.
Just adding something because others have it too, is probably the weakest argument there is.

There are also plans to improve Dart to make writing Flutter UI code less verbose which weakens the case for JSX even more.

So what are your convincing arguments?
",uncivil
3985,778724889,"Now: it seems like the discussion here _has_ reached its terminus, so there isn’t value in leaving it unlocked for angry people to get their digs in. It’s on our radar–just as much as it has been since our first update–and we only have as much sway with the store folks as we can get.
",uncivil
3986,406788336,"> I'm the one who was doing this. As collaborators we have to moderate issues and ensure correct language and behavior.

Grow up first!
",uncivil
3987,417830616,"@hedgepigdaniel Sure, I'm sure you could argue Adolf was a pretty cool guy if you ignore all the other stuff he did and just focus on his gun control policy. 🔥

If you just excuse it as ""unfortunate"" then you're just trying to justify your own opinions.

@termhn The difference between having a strict license vs claiming it's open. As I said numerous times, if the goal is to have lerna be proprietary that's a different discussion. At the current time, and as far as I know, lerna plans to stay as an *open* source project.

> If many OSS projects do the same thing, then there could be real, large-scale change over time.

Then none of them are open source anymore. You have collectively made a proprietary license. We're not arguing that so it's a moot point to even mention.

> None of those show a trollish intent behind the action at all, and in the actual PR that was made, the changes were discussed in a very professional manner, all (at the time available) protocols were followed, and a calm and deliberate reasoning was given.

He made multiple issues in the same project that all state the same thing, linking to the same resources which are there to incite hatred from a group of people towards a company. See this definition:

> trolling: make a deliberately offensive or **provocative** online post with the aim of upsetting someone or eliciting an angry response from them.

My god, it's exactly what he did.


",uncivil
3988,622378081,"Hey, so we spent a good deal of time trying to come up with a solution to a hard set of problems. We want to cover cases like ""what happens when a dynamic profile generator doesn't always create the same list of profiles"" and ""what if a user wants to use the same settings file on two PCs with _different_ WSL distros installed""? We wanted to make it robust, so that it would fail in the fewest possible cases. Software though is about compromises - there's not an effective way for us to dynamically generate a profile then _have the user delete that profile entirely_, and know to not delete it again. There's not a practical different between the profile not existing _because we haven't generated it_ and not existing _because the user deleted it_.

You're right that our userbase is a technical audience, which is why we expected them to be able to <!--rub two brain cells together, and-->take the four seconds it takes to read the synthesized JSON, see the `""hidden"": false` that we stick in there, and think ""hmm, maybe that hides the profile 🤔"".

If you'd like to read more about how we came to the conclusions on this design that we did, I'd encourage reading #1258, where we originally designed the settings model, and especially #1321, which is a changelist specifically relating to dynamic profile generation.

We're looking towards the future here, towards a scenario where users largely _aren't_ having to modify their settings files by hand, and can just use the UI for that. In that future world, all the intricacies of how dynamic profiles are implemented won't actually be exposed to the user - they'll just delete the profile in the UI, and we'll mark it as `hidden` for them.
",uncivil
3989,650187983,"Obviously nobody denies that all lives matter but this is not the point. Structural racism is a problem almost everywhere and people of color are affected whereas white people are not (or less).

Just imagine a house burning and the fire department coming and trying to extinguish the fire. Would you try to convince the fire department to put water on the other houses? No, because the other houses don't seem to have a problem. But that's what the AllLivesMatter slogan is saying and that's what makes this slogan problematic.

BlackLivesMatter is not meant to be a racist statement, except you see it like this. Supporting BlackLivesMatter is about drawing attention to social injustices. Think about that.
",uncivil
3990,296791437,"I started the FreeBSD port 1 year ago ... and was able (like I commented here above) to build and pass most of the tests.
I had plans to make a proper port (with separate files and not patches on the linux ones) but after seeing how the Dart team treated the BSD ports efforts and specially Mulander's work ... I really got disappointed and lost all interest in Dart!
I've abandoned (a long time ago) the port effort and don't even use Dart anymore and will stop watching this rep.
",uncivil
3991,417479641,"Explain how me, the person who made the decision, not employed by Microsoft, was secretly paid by Microsoft to ruin open source. Should be an amusing story.
",uncivil
3992,378628389,"I just dont get why is allways so complicated to even do anything with the Hololens. Do you think they will thrive give all this errors and problems? Im just sickk of having to go through thousnads of tutorials, forums, chats, emails and so on every time Unity updates, or the HoloToolkit or the MRDL or visual studio... It is just SUPER UNSTABLE and a serious pain in the *** to do anything. I think Hololens will fail miserably due to all the constant difficulties.
BTW I was compiling no problem this afternoon, until sudenly it started throwing errors ive never seen before. Hope Holelns V.2 never come out. Seriously.
",uncivil
3993,600675958,"The .Net Native compiler is a bit of an engineering marvel.  I'd like to see it persist.  It's sad that I have to use such a long winded approach to try and defend its future and get certain parts of Microsoft to cooperate with other parts.  If there is something fundamentally false in anything I'm expressing, please do highlight my error(s).

If any of your work is not intended to support UWP, @AArnott, then just add an exclusionary note, or say so in your opening remarks to such queries and I'll be happy to disappear.  I also don't want to waste my time.  I have merely pointed out that your design choices, not your competence, or your intellect, are at issue here.  And I had to go through a long winded process to make the point clear.

You can censor me if you like.  Just because you have the power to do so doesn't make that choice right either.

When you stated ""I'm surprised if it doesn't work."" You gave yourself away.  If I'm wrong in thinking that you knew it didn't work, then I apologize, because you closed the very issue that you had identified as the point of failure.  You see, I'm assuming you are quite bright @AArnott based on the high quality of your work.  The quality of your personal choices, in that realm, we obviously have a difference of opinion.
",uncivil
3994,531864482,"Kk then I am going to stop supporting Tensoeflow. It does not make sense to use a framework which Python does not support by default. I even had people write to me to fix this today, that you guys are not seeing this is a huge issue like it is, shows where your priorities are.

I know that @husligc also see people having this issues daily and even he has it, it's funny you guys dont think that is a huge problem..
",uncivil
3995,22196,"I've been spending WAY too much time on adding bootstrap 4 with npm to a webpack project. In hope to save others the time, I thought i'll share the final recipe -

start by installing bootstrap in your project -
```
npm install bootstrap@4.0.0-alpha.6 --save
```
(notice bootstrap has two dependencies - jquery and tether. If you would rather have explicit versions of those two, you should install them as well)

import bootstrap's javascript through index.js -
```javascript
import 'bootstrap';
```
(i'm assuming you're using es6, in case of es5, use `require('bootstrap')`)

The previous line will only import the js part of bootstrap. for the styling part you have two options -

### 1. Precompiled SASS
Inside one of your sass files (index.scss for example) add this line -
```SASS
@import ""~bootstrap/scss/bootstrap.scss"";
```
(notice the ~ (tilde) which points to the node modules folder)
This mehtod is beneficial if you plan on using your own version of the wonderful __variables_ file bootstrap comes with. just make sure you import __variables_ before _bootstrap_. Also, now you can use all the cool mixins bootstrap has.

### 2. Compiled CSS only
If you're not planning on using the variables or the mixins, and prefer the precooked css file, simply add this line to index.js or any other js file -
```javascript
import 'bootstrap/dist/css/bootstrap.css';
```
(btw - you can also import this way the sass file, but it's nicer to import it via another sass file as shown in pervious mehtod)

now comes the webpack part. for _jquery_ and _tether_ to be available as a global variable throughout the project, you'll have to add this to your webpack plugins sections -
```javascript
new webpack.ProvidePlugin({ // inject ES5 modules as global vars
$: 'jquery',
jQuery: 'jquery',
'window.jQuery': 'jquery',
Tether: 'tether'
})
```
The different jquery definition are meant to answer requirements of different libraries (for example angular looks for 'window.jQuery'). I'm assuming your webpack.config already has rules for scss and/or css.

And that's it! now you have bootstrap in your webpack project.
Let me know if any further explanation is needed, and if anyone knows of a better way, please share.

",uncivil
3996,524576620,"> By the way, just stating that ""if you don't like it, come up with a better solution"" is a cop-out. There _is_ value in feedback, _especially_ when you don't agree.

Not when that feedback is 100% predicable because it's nothing but our inner two year old being triggered to whine when everything doesn't go 100% his or her way.

We humans are opportunists.  Any time a cost to us is >0 we will not like that cost and we'll complain about it.  In discussing a problem whose solution is necessarily going to impart a cost it doesn't need to be stated that those who need to shoulder said cost are going to find it less preferable than having it at no cost.  This inner alt-right perspective is expected.


Anyway, the solution to monetizing an artist's reproducible work has already been solved.  It's called copyright.  We the People have expressly removed our liberty to freely copy an artist's work and granted that right solely to the creator in order to give the artist the ability to financially support his artistic output.   To place a copyleft licence on the work and then complain that you can't monetize it because people are copying it for free is an... interesting complaint.
",uncivil
3997,442069883,"> Well, now I am wishing you good luck in your search for a solution. I am not interested in spending more time on this.

Great attitude @janpio, especially as a _fastlane_ collaborator. Why not say it in here publicly?
So instead of having a discussion and providing a counter example or presenting **any** reasoning why something would not be implemented, you are just discouraging people from helping _fastlane_...
Is that what you guys do in here?
@joshdholtz, @mfurtak, @hjanuschka, @AliSoftware @milch @revolter
",uncivil
3998,379213168,"So many different solutions, so many different workable options, yet none of them helped me in the past 3 hours getting bootstrap up and running... The webpack documentation page looks so simple but it is not that simple, apparently. Please include some more documentation on how to test if it is working and if there are any differences when using typescript. I just installed, included, imported and my app just runs fine, no errors, but yet no col-md or container styling working.. meh, i'll just return to CDN's...
",uncivil
3999,372105535,"That's really sad.
In my mind a serious ""community centered"" effort should kind of use and depend on different independent blocks. to make the idea more clear, `AngularDart` for sure needs some stuff handling DOM and it seems sane to me to use something like `dart:html` as a basis.
so, every work from google would be contributed back to the basis and others building on top of this basis would automatically benefit - somehow like the whole OpenSource-Idea, no? ;)

currently ` Dart` is more like: ""You want to do web? Sure, use AngularDart."" (Hint: AngularDart != ""the web"")

that said, I'm not the guy who can actually judge what you're doing and why - just saying this from a rather distant and abstract point of view and trying to support `Dartlang` itself against common attacks. (you know those.... ""meh, google is going to throw it away anyways..."" etc.)

Maybe I should add, that webComponents are the reason why our app is only running on Chrome...
",uncivil
4000,656785068,"I thought this was implicit, but now I have to say it explicitly: Comparisons to Hitler are neither necessary nor welcome here, and anyone unable to debate the merits of *versioning schemes* without relying on that as a rhetorical device should rethink whether their participation here is going to lead to a constructive conversation.
",uncivil
4001,819784707,"""Everyone who disagrees with me doesn't know what they are talking about""
",uncivil
4002,166937573,"@pbgc I was able to last work on this port on September 19th. Unfortunately since then work has been busy which left no time for further dart work. I did not abandon the porting effort - it's just on hold for now.

Initial porting effort: https://github.com/mulander/openbsd-dart
Normal branch to work on upstreaming proper support: https://github.com/mulander/sdk/commits/OpenBSD-support

@krytarowski started a similar effort to port Dart to NetBSD based on my current status, his repository is here: https://github.com/krytarowski/sdk (also on hold from what I know)

@pbgc though it should be noted I am porting this for OpenBSD not FreeBSD though as you might be aware the work should be really similar (same with NetBSD as we found out). You can start by forking the dart repository and adding *_freebsd.cc/h files based on the ones I added in my repository. That should get you pretty far building the code on FreeBSD.

> > and I would like to help .. just don't think I have the needed skills.

It just needs time. I'm also not the best person to do this but look at the age of this ticket. If people like me and you don't attempt it then we can wait another 3 years without anyone else picking the issue up. I will gladly help you get to the same spot on FreeBSD that I am with OpenBSD. Feel free to ask me question or just grab query with me on IRC @ freenode nick mulander.

",uncivil
4003,664900745,"> I have a theory where adding tons of app folders to the PATH would slow down the system

A bit of research can help you get the info you need in order to be able to perform the necessary tests to confirm/deny your theory so you can start acting on knowledge. Don't act on theories!

- [Bash PATH length restrictions](https://stackoverflow.com/a/4599911)
- [Duplicate entries in $PATH a problem?
](https://unix.stackexchange.com/a/14898)
",uncivil
4004,524576472,"@vweevers @with-heart You guys seriously don't see what this guy is doing? He's trying to push his ESLint config as a ""standard"" and monetize it. This is not a ""FOSS project"", it's a publicity/advertisment stunt. How do you reconcile your views with the fact that this guy plans to get paid pretty much for someone else's work (ESLint)?

",uncivil
4005,514000307,"Alright, I am going to lock this issue. We can't tolerate abrasive language or tone on this issue tracker, and it has clearly become a problem here, so I'm closing the thread. Insults, disrespectful tone, and consistently abrasive language are violations of our [code of conduct](https://opensource.microsoft.com/codeofconduct/).

Keep in mind that violations of the code of conduct can result in being banned. I always try to remind participants that we are *all* striving to make TypeScript better - but if you want to participate, the only way to do so is with respect. If you cannot do that, we cannot allow you to engage on the issue tracker.
",uncivil
4006,160186970,"> > should we instead add as a section in the tutorial here?
>
> We should reference it. But I don't see this as tutorial material because
> it is outside the scope of scikit-learn. We can only give pointers
>
> That's an answer that the users really don't want to hear, because there
> point of view is that they have a lump of data and they want it inside
> scikit-learn. The answer is: this is not a problem that scikit-learn
> solves, go see pandas if you have CSV, scikit-image if you have images,
> database connectors (SQLAlchemy?) if you work on databases...
>
> I guess that we should have a sentence like this in the tutorial, where
> you reference, with pointers.
>
> As a side note, the kind of errors hit by the users on the thread of this
> issue (lack of basic knowledge of Python for instance) tells me that we
> cannot solve their problem. They need to go to entry-level tutorials on
> Python, and get a bigger picture. Maybe we should make sure that we give
> pointers to these in the right spots, eg early on in the tutorial.

Well, take it easy!!!

I don't know whether you are one of scikit-learn staff or not, but I need
to say that your way of talking is harming both scikit-learn staff and
users (us), due to the two reasons:

First reason, criticizing people (like what you did) and assuming that they
are novice in Python so they don't know how to work with scikit-learn,
means you or the staff are trying to blind their eyes to the truth that
scikit-learn staff are not able to create a clear tutorial to allow loading
the real data, at least. In addition, pretending that the tutorial of
scikit-learn is perfect in spite all the questions regarding loading the
real data (not the toy data as it is too easy to be imported comparing to
the real data) is something needs to be reconsidered, and this means that
scikit-learn staff don't care about the name of scikit-learn at all.

Second, we can understand from your unsuitable way of talking that you
already forgot that  scikit-learn is a product, and we as users are
customers, so either you or the staff of scikit-learn should respect all of
us and thank us for any comment or bug fixing. This is the professional way
of behavior. So I recommend you to think of your words before saying them. If
you are knowing the way of loading the real data and you'd like to help,
don't only say go see pandas, better you answer people's question nicely
rather than hurting them with your words, but if you're simply not able to
do that, so keep quite.

On the other hand, regarding the question ""should we instead add as a
section in the tutorial here?"", I would like to say ""_YES_"", you or
scikit-learn staff should add a section in the official tutorial about how
to load your own data either CSV, or ARFF or text or whatever, as users are
interested to load their own data, this is very critical issue should be
considered in the tutorial (not to be ignored). *If you rely on the user,
then what is your work? *

Nevertheless, for those who are still struggling with scikit-learn, I would
like to say, this is not the end of the world, and as I mentioned
previously, find another to tool make your life much easier. For this
reason, and in order to save your time, I would like to recommend some
tools to assist you in data mining procedures. For instance,  Waikato
Environment for Knowledge Analysis (WEKA),
http://www.cs.waikato.ac.nz/ml/weka/, last version is  WEKA 3-7-13, is a
collection of machine learning algorithms for data mining tasks. WEKA
allows you to use its schemes either from GUI or writing Java code, so its
very easy for non-programmers. Additional to WEKA, R is also an excellent
tool for data mining stuff, you can also perform tasks of R from WEKA or
vice versa. However, if you have a patience to design a prediction process
manually (drag/drop), RapidMiner is a great tool for this propose where you
can design a very nice flow to achieve your target.

Thanks David van Leeuwen for your support.

Good luck in your analysis.

Cheers,
Martin

> —
> Reply to this email directly or view it on GitHub
> https://github.com/scikit-learn/scikit-learn/issues/3808#issuecomment-160153930
> .

",uncivil
4007,401186508,"You asked a question and you got an answer.  Moderation doesn't factor into it, you just didn't like the answer.

Now stop trying to read the motivations of someone you don't know.  You suck at it.
",uncivil
4008,567509702,"Assuming he wasn't just trolling: if one gets butthurt and triggered over an emoji or icon, then the internet is not really the place where one should hang around.
Assuming he was trolling: troll successful, gg


Pandering to icon haters seems to be high on Microsoft's list instead of handling actual bug fixes or feature requests.
",uncivil
4009,661510731,"@Carreau

You're being a bit facetious. There's no need to update ""all the code and documentation all over the internet"", nobody has every done that and never will. Neither would the updating even be necessary, the official documentation should contain the location of the configuration file, that's it. The third silly thing is that you're acting like IPython doesn't have any changes that break some pieces of code or tutorials out there. All in all it makes your comment seem more like irrational stubbornness than actual concerns.

Not to mention, if it's _that_ hard to change the folder, then that hardcoding seems like a massive code smell anyways and should be fixed anyways, and the choice to set the location of the folder should be up to the user.
",uncivil
4010,784621053,"@CyrusNajmabadi

99% of what you wrote translates into excuses to not even attempt to change anything because something could break while at the same time you are totally disregarding that it has already been broken for us, hence the bug reports.

The remaining 1% is barely contained smugness and superiority of someone in a position of some power, and it is clear that you enjoy imposing your way on others given your ""ban on tabs"" which you mentioned above.

So far you have not addressed any of my points, instead you keep spouting some weird mix of anti-tab religious zealotry and corporate PR talk.

At the risk of getting banned from commenting on this and every other Microsoft repo I am going to call you out on your bullshit -- you, Sir, are full of it and presenting rational arguments to you is a colossal waste of time.

i am out of here, and I will be advocating in my company to drop Visual Studio licensing. Maybe you will learn to honor user's preferences when they hit you in the wallet.
",uncivil
4011,373858397,"Documentation on everything is always a issue, this will never go away. However its a simple concept, you're trying to add one quad to your item when rendered in the inventory.
We have MANY things related to extending the item model, So I would tell you to start looking at the IModel interface, as well as the renderItemAndEffectIntoGUI/renderItemOverlayIntoGUI which gathers the model and passes through a hadleState function which you can easily build the extra bar onto.
We also expose a model based font renderer so there's help with that.
Combined with the MANY MANY posts and arguments that we've had on this issue tracker and the forums about the point of the model system is to REMOVE direct GL access from the mods/items. Your solution is to add a new hook that encourages modders to break GL.
All you wont is your model to have one extra textured quad. Why does this need to be/encourage direct GL access?
I don't care if you consider my response dickish, your initial post was. And im getting tired of people posting under the same veiled threats every damn time. ""Do this now or i'll hack it with a coremod!"" You may not intend for your post to come across that way but it does.
So some takeaways: Don't open your Prs with 'Im gunna ASM this if you dont add it' Which is what your post comes under. Don't go against the entire point of moving to a model system buy adding YetAnother place of calling direct GL code. If you find something that you THINK you can't do in Forge open a issue, or use the forums. Explore your options. State what options you have explored. And again DO NOT open your argument with do this or i'll asm it!
",uncivil
4012,703127645,"> Sure you can say, yes $1500 is not much in the business environment. But this is not true for all of them. For us it is a lot of money and also a lot of time that we have already invested. We now have to migrate to something different.
> In a healthy ecosystem, it should not happen that a pillar on which so many have built, changes the license so negatively.

Having sustainable OSS projects _is_ part of a healthy ecosystem. If not $1500, what amount would you pay?

If the answer is ""none"" then _you're the problem_.
",uncivil
4013,524578948,">
>
> > > We humans are opportunists. Any time a cost to us is >0 we will not like that cost and we'll complain about it.
> >
> >
> > No, not all humans have this reaction. The reaction you are projecting on all humans infers that all humans are greedy, inconsiderate thieves.
>
> Not letting your inner two year old rule you does not mean he is not present. His complaints are predictable, and those who are voicing complaints from him are not needed.

Please take your pseudo-intellectual garbage elsewhere
",uncivil
4014,518679691,"I couldn't agree more with @CobusKruger.
Some things are just so common and expected, that not to use them just seems like you're actively hiding features from users.
No one expects CTRL+SHIFT+C/V, They expect CTRL+C/V; If it were otherwise, there wouldn't be so many users here clamoring for it.
CTRL+C/V is what should be in the json by default.
This is very much a case of ""Old Microsoft"" rearing it's head, rather then new forward looking Microsoft.
So yes, this should not be closed until this problem has actually been fixed...
",uncivil
4015,567502171,"Dark theme is basically a blackface of white editors.
",uncivil
4016,417404448,"Jamie's removal was a necessity and shouldn't be open for debate. Blocking people from contributing because they disagreed, which eventually lead to him blocking everyone but contributors, attacking companies/individuals, claiming community tools (like Babel) are ""his"" is overwhelming evidence that he violated the CoC.

@benwiley4000 Calls for civility are perfectly apt after an issue like this. Suggesting that asking people to ""be nice"" is an attempt at ending discussion is one of the strangest stretches I've ever heard. As someone that called maintainers cowards for reverting the changes and removing Jamie, I can get a strong sense of why you'd argue that point, however.

As for this issue, @TheLarkInn made it pretty clear that they'd like to wait for the dust to settle prior to a formal RFC. That makes sense. Right now Lerna is a target for people only interested in politics, and once the dust settles they will likely have something new to chase, and the people actually interested in the project can contribute to the suggested RFC.
",uncivil
4017,567490187,"""Terminal"" might also remind someone about a terminal illness they are facing
",uncivil
4018,470497921,"> Why are you even here?

Because everybody today is speaking on the Net about a Windows Calculator with telemetry inside. I didn't believe even that was possible and... yes.
",uncivil
4019,466584253,"> Guys, thanks a lot for your enthusiasm, but I am the one doing the rendering work in Godot, not you. I've been working on 3D rendering for 25 years so, if I am telling you that things as they are now are optimal and BGFX will just stand in the way to being productive I hope you believe me.

What a classic example of elitism and douchebaggery. I will stay miles away from Godot and any projects you maintain, thanks.
",uncivil
4020,548332662,"@mdtauk : I do NOT need to upgrade, you miss the point. Avoiding Win10 is intentional, because I don't want my PC to have buggy, ugly, spying rubbish.

Tech Q: What ""exciting and unique"" you have in Win10 that your GUI lib(!!!) cannot work on Win7? Obviously if your lib so ""independed"" from platform, there is no any problem to support it on Win7. Moreover: Win10 is FAR from be the dominating OS, at least 50% users have Win7. So your library intentionally abuse millions of Win7 users in favor of... what? Pathetic Win10?
",uncivil
4021,784050738,"> I've never seen git do that.

How about not commenting before understanding what you read? I never said Git does anything with spaces and TABs -- I explicitly mentioned line endings.
",uncivil
4022,417875273,"@reduz Please refrain from talking negatively about bgfx when you justifying your strategic decision about Godot, since there is really no animosity between two projects. Both are open source, have their own place, and not even competitors...

Whatever your strategic decision for Godot is, it's totally legit. I'm here only to defend bgfx from false statements.

> There are two main platforms that need to be supported. Modern Desktop PC (OpenGL ES 3, and later Vulkan) and mobile including medium and low end (OpenGL ES 2). These APIs are not programmed the same way, so a ""wrapper"" to simplify the work is impossible. GLES3/Vulkan uses UBOs, VAOs, TBOs. shaders with integers and plenty of features. GLES2 is very basic and supports none of that, so different approaches need to be used to write a back end.

Example of this actually exist in bgfx code base. Since bgfx is declarative API not imperative, you can actually write code that works optimally on two completely different APIs.

> Modern hardware also uses certain rendering techniques (HDR/clustered/single pass shading),  while low end uses other techniques (LDR/multipass). As such, being a fact that pretty much no code is shared between backends, BGFX does not save the work of having to write two backends for different hardware.

You're talking here about two different rendering pipelines, not two different renderers. Yes with bgfx too you have to implement two different pipelines to support your low-end hardware and high-end hardware. The difference is, when you use bgfx that both pipelines are avilable on all renderers. Which means that you can enable your low-end pipeline for desktop users who have old HW/OS/etc. and you can enable your high-end pipeline for mobile users who have beefy phone/table.

>  If you want to use tools for debugging Vulkan or OpenGL, they will be confusing with BGFX as a backend too. As net worth, BGFX as a middle layer is a negative point here, not a positive one.

This is actually nonsensical statement. When you debug rendering issues in bgfx with for example RenderDoc, PIX, or GPA, you see underlying API and they are not getting confused with bgfx.

> Khronos has the Vulkan Portability Initiative, where they aim to run it over Metal, DirectX, etc. This is pretty much the same as BGFX, thus decreasing even further the value of BGFX.

Not really, since bgfx is not low-level renderer.

> Using Vulkan allows us to take advantage of extensions and new features on bleeding edge hardware much faster than using BGFX.

If you just want to use single renderer in bgfx, and you don't care about cross-platform and feature parity between renders it's as fast to add features to single renderer with bgfx too.

",uncivil
4023,598364042,"> Wow, over three years and still nothing?!

@max-l-weaver with this comment, you are showing how unappreciative and ignorant you can be.

You can fault the devs for not getting this right with modules from the start, but aside from that, you should have more awareness of reality and what these changes have required before sharing those types of crass comments.

In fact, you should probably not use any open source software, as the type of comment you left above are one of the major reasons why application developers give up on open source.

Please be more kind and appreciative in your comments, or leave them to yourself.
",uncivil
4024,567422596,"The removing of the Santa hat and catering to vocal minority of sjw idiots is very offensive to me. Please stop.
",uncivil
4025,783777499,"@sharwell
> There is no one consensus on the definition of correct behavior.

How about you take the same approach as Git does for line endings?

1. Replace TABs with spaces on reformat
2. Replace spaces with TABs on reformat
3. Leave both as entered on reformat

Shouldn't the above satisfy everyone involved?

Come on people, this is not rocket science, it's a text editor for $(Deity)'s sake!
",uncivil
4026,378635638,"@SinSeitan I def understand how frustrated you are, but every new platform has its shares of issues and stability.  Yeah, there's been issues from the manufacturer, all the way through to the middle ware game engine, and even here in the community trying to solve the problems. (odd thing is that's what keeps me around 😅 ).

Please keep in mind this is a Gen1 device, that was never really intended to go beyond developers who wanted to play with it, and companies wanting to do a feasibility test.

> The only way to grow and learn is to make mistakes, the important thing is that you learn from them.

This quote couldn't be any more true, especially when it comes to software. The nice thing is that it's a continuous process to grow and learn, and they only way you really know that it's happening is when you make mistakes.  I'm glad to see the software getting better (and it has!).  Microsoft, Unity, and even the Toolkit have come a long way in the last two years.

> I'm just sick of having to go through thousands of tutorials, forums, chats, emails and so on.

I agree it is a pain, but I think the difference here is that you haven't talked to me, or other engineers trying to make your life easier by fixing some of the problems. This is the first time I've heard from you, so **let's open a new issue and try to figure out what's going on**.  Remember to follow the [Code of Conduct](https://opensource.microsoft.com/codeofconduct/faq/).  I understand you're frustrated, but having a positive attitude, even when you're stressed out or frustrated speaks volumes to others who are genuinely trying to help.
",uncivil
4027,579462386,"@AlgorithmsAreCool With all due respect your comment makes zero sense here.
",uncivil
4028,409419413,"> Dude, you get a compliment from @jstansbe which conveys a lot more information than a thumb up and you thumb down on the compliment?

You apparently didn't pick up on the sarcasm inherent in his comment. (He literally did everything I said not to do.) While a fun bit of trolling that I can appreciate, it's not appropriate here. And if, by chance, he was being sincere, then I apologize for my snideness, but my point still stands - that kind of comment is _still_ not appropriate here.

> It is obvious to me that you are not very experienced with JSX...

Did my disclaimer in my very first comment on this thread perhaps tip you off?

> ...you really don't understand how it works.

You equate me not having much experience with JSX and me not knowing how it works at all? While I've never worked on any serious React project, I've done my fair share of tinkering. I understand perfectly well how it _works_.

> Everything else is handled by the host language, so for example: how does it handle import of components named the same; answer: host language.

And that makes sense in the case where the markup language and the host language are distinct. With JSX, the markup language is designed as an _extension_ of the host language. As such, JSX was designed as an extension of JS, and that's why it works as well as it does. DSX is an implementation of JSX for Dart.

You don't see the problem there? A markup language designed as an extension of one language being jerry-rigged into a foundationally different language. It is _inevitable_ for there to be a load of issues, edge cases, and considerations.

> You see if you separate markup and programming into separate files, you start to duplicate the programming inside the markup with simple constructs for 'if', etc. You end up building a declarative programming language inside the markup that can never be as powerful as the main programming language.

First, the whole idea behind separating markup and programming is that, if you are doing it correctly, there is a clear separation between the two which results in _no_ duplication.

Secondly, if you are doing anything much more complex than `if`s and `for`s in your UI code (which are constructs that can easily be handled in many markup solutions), then I would argue that it's a sign there is something wrong in your design anyway. As per MVC/MVVM design principles, if you are incorporating complex logic in your UI constructs, that's a potential sign of smelly code and you should seriously consider a redesign anyway.

(That's not to say that you _can't_ write declarative UI in the MVVM fashion using JSX, but it's just something that invites trouble for little objective gain. Why use something in which you _can_ write code that is standards-compliant when you can use something that makes it difficult to write code that _isn't_?)

> That's not true, you can have contrary opinion but you can't claim something true when I can proof otherwise.

You haven't ""proved"" anything. You've given a bunch of subjective claims that have yet to be backed up with any substantiating logic. (Though to your credit, this latest post is a big improvement.)

> But that's the thing, I wanted the Flutter team to implement DSX but then I did it so what they need to implement is generic stuff that doesn't depend on DSX and DSX is not the only beneficiary.

You are still asking for them to do non-trivial stuff, so the onus is on you to convince them and the rest of us why they should and why it's so important that they should push down other things on their to-do list.

> The browser js engine supports source maps which enabled an ecosystem of new languages in the browser that transpiled to js; it enabled the creation of Dart !!!

It is in the nature of JS itself that such a thing is easily doable (relatively speaking), so much so that Dart is far from the only language that has a transpiler to JS. As I have pointed out many times, Dart is not JS. It is static and strongly typed, meaning a lot of things that would be easy to do in JS are hugely complex in Dart.

> I would use DSX because I prefer it, like spaces or tabs, type definition before or after the variable name. There is no point fighting for it, just accept that people have different preferences; there is more than 1 programming editor out there right?

By that logic, I should make a UI solution in which you define constructs using hex-encoded braille. I mean, if all that really matters is personal preference, all I need to say to defend its existence is that ""some people prefer it"", right?

You are developing a tool that you intend for other people to use, so you need reasoning beyond ""some people might like it"" to make yourself convincing. If you can't put it into words _why_ they should use it over something else, then what makes you believe that they will? And what's there to incentivize you to _ensure_ that they will when designing DSX's feature set?

> Just your opinion, why do we use ""if"" statements in almost every language, 'for' statement, 'class', and now 'async/await'.

First, those keywords (aside from `async/await`) became common programming lexicon because of the immense popularity of languages like C and BASIC over the course of several decades. As I've mentioned before, JSX is far from proven in its longevity - it's been around for 5 years and is yet to see any significant use outside of React despite the option being available.

Second, there's a big difference between familiarity and convention. `if`, `while`, `for`, `struct`, `class`, `enum`, `try/catch/finally`, `async/await`... those are all great ways to verbally represent a concept. There are reasons to defend using those keywords beyond them just being what people are familiar with - they make conceptual sense. (Of course, that doesn't mean that they are constants. Some languages do `if ... then`. Some do `if ... elif` while others do `if ... else if` and still others do `if...endif`. Some do `foreach`, others do `from`. And so on, and so forth.)

Meanwhile, the argument to use JSX because it is ""familiar"" doesn't fit the same category. JSX is one way to represent declarative UI, but it is neither the only one nor the most popular one. Furthermore, it was designed to be used in one type of environment, so using it in another environment can turn familiarity into a bad thing - familiarity leads them to expect it to work more or less exactly the same way it works elsewhere, so if it doesn't then that leads to a mental disconnect which is something that you want to _avoid_.

> Thing is even if it gets closed again it won't stop people from asking for JSX-like capabilities.

They ask for it anyway, and the issue gets redirected here all the same. I don't see how the thread being closed would change that.

> You are not the meter used to measure success and you don't know what I am up to.

Read any book about product design. Chapter one is always about creating a statement, a manifesto, a slogan, anything tangible and expressible in plain English that describes what the product is and why people should care about it. There's a reason that the most common form of advice given to amateur entrepreneurs is to make an ""elevator pitch"", something that clearly and concisely communicates the product and the draw in 30 seconds or less. If you can't put it succinctly why people should use your product, it's a sign that it's suffering from an identity crisis. If the person designing the product can't adequately respond to criticism, then that gives the impression of a lack of faith in their own product. Both of those things are big red flags to investors.

In this situation, the product is DSX, and the investors are developers considering using it. The only people you have backing you are people who apparently would unconditionally cheer on anything with ""JSX"" in the description. Every other person in this thread I have seen question what you are doing has walked away seemingly unconvinced following your answer.

You are currently sitting at or near a 0% conversion rate, and _that's_ where I'm coming from when I say that you have yet to adequately respond to criticism. Maybe you don't care, but if you seriously intend for DSX to be a UI declaration markup plugin usable and used in real-world projects, you might want to start.

But then again, maybe you are an exception.
",uncivil
4029,417479261,"@benwiley4000 If you're looking for ""rancorous sniping and harmful drama"" you might try using a mirror.
",uncivil
4030,546359563,"Oh, you gotta be joking. There's in-app subscription events happening, which is related directly to client app, but can only be reliably detected on server side. Such as users being charged on monthly basis, trial periods, introductional periods, etc. So there is no way (apart from using a billion other tools) to directly send these events to Firebase? All analytics tools support this...
",uncivil
4031,598851401,"Then you would do something slightly different. It's hard to predict what you want, because it's not clear what you want.

Here's an example Codesandbox that gets _closer_ to what you want, but it's still not working. This being said, I also wasn't even able to get the snippet you pasted above working, so I'm skeptical of the general approach.

[React Codesandbox](https://codesandbox.io/s/angry-sun-4dfmf) | [Vanilla Codesandbox](https://codesandbox.io/s/festive-surf-4t6k4)

> Failed to load resource: the server responded with a status of 404 ()

I'm going to lock this, as I don't find this discussion productive nor valuable for us to be having. This is very much not a Gatsby problem, and is a general issue with loading Yandex scripts.

",uncivil
4032,32876,"Spoiler: no template i have no time to waste

Problem: Reactive forms
div with [ngClass] directive:

``div
class=""custom-control custom-checkbox""
style=""padding-left:80px; padding-top:30px;""
[ngClass]=""{
'd-none': f.somereactiveformcontrol.value !== '1'
}""
>``
f is a getter in .ts file that returns all controls (and work everywhere else)
d-none is bootstrap display:none class
f.somereactiveformcontrol.value is a select/option dropdown which if !==1 shows div else hides it as you can guess

When dropdown activated manually it works
when the dropdown changes because changed from code (using your (change) method binding)
it doesn't change

I'm fed up the whole framework is filled with this crap. Why you even do double way binding if works half the needed cases? Don't even make a framework at this point

I've read about observable something, but why would I use the whole framework if I had to use another framework and do my own implementation? It has no fucking sense.

If the customer didn't specifically asked for angular I would have thrown this piece of trash in the toilet long time ago

How to solve

EDIT: Thumbs down my ass, it's reality  that smacks your face 👍
Instead of thumbing down like twitter and facebook kids, show me I'm wrong 🥇

",uncivil
4033,398273426,"> Hmm @slandelle , do not you think that simply stating that I 'messed up ""writers"" ' without explaining why is rude?

No, I don't think spending some personal time investigating a problem you have with a software you got from me for free is ""rude"".

I've pointed out your mistake and you are perfectly capable of spotting the difference between the original configuration that was working and you've commented out and the one you've changed and that don't.

From the `gatling.conf` in the sample you've provided (L217):

```
#writers = [""graphite"", ""console"", ""file""]
writers = [""console, file""]
```
",uncivil
4034,551839851,"I believe that Godspeed You! Black Emperor is far more important than this PR and you should go listen to them and stop relying on those soulless motherfuckers at Facebook to give a damn about you. Yours Sincerely, James Pike. https://m.youtube.com/watch?v=2c9TyeKnGGk
",uncivil
4035,548212118,"@jinujoseph Why is it moved to the backlog?  This keeps coming up and it is SO ANNOYING.  How about just adding an option to turn this nonsense off?
",uncivil
4036,435049950,"@jimon , @Alan-FGR, @neikeq : Guys, thanks a lot for your enthusiasm, but I am the one doing the rendering work in Godot, not you. I've been working on 3D rendering for 25 years so, if I am telling you that things as they are now are optimal and BGFX will just stand in the way to being productive I hope you believe me.

As always with Godot, you are free to make your own renderer with BGFX, show me that it's flawless, has better better performance, works better than mine (of course while supporting the full Godot feature set) and uses less resources and code to prove me wrong.. as well as commiting full time over the next years to maintain it.

If you want a revolution, begin with it yourself. If you want to prove your ideas, invest in them because words are free.

If not, keep pestering all you want and it will be ignored.
",uncivil
4037,631028431,"I feel like there's much less confusion between a city in Hawaii and a multi platform app framework both called Maui than a multi platform app framework and a multi platform app framework both called Maui.
",uncivil
4038,463,"Sorry to say, that I am totally pissed off from this worst programmed piece of software/plugin I have ever seen. With every new version something else is not working anymore. I shouldn't complain about software I had nothing to pay for, but have you ever heard something about quality management? You are releasing a version 1.0.0 that is simply not working. How couldn't this be seen? Then a few days later a ""fixed"" version 1.0.1 still not working. And the same with the versions in the past. Fatal errors over errors again. If you have no linux pc please install yourself a virtual machine and have at least a try before releasing such an sh... It's an effort from < 1 hour.

PLEASE improve your testing in future. Thanks.

Debian Stretch 9.4
cmake version 3.11.3

[fatal] [rollbar] Unhandled exception: Unhandled Promise rejection: build Error: spawn /usr/local/bin/ctest ENOENT {}
t.log @ /usr/share/code/resources/app/out/vs/workbench/workbench.main.js:268
/usr/share/code/resources/app/out/vs/workbench/workbench.main.js:268 [Extension Host] Error: spawn /usr/local/bin/ctest ENOENT
at exports._errnoException (util.js:1050:11)
at Process.ChildProcess._handle.onexit (internal/child_process.js:193:32)
at onErrorNT (internal/child_process.js:367:16)
at _combinedTickCallback (internal/process/next_tick.js:80:11)
at process._tickCallback (internal/process/next_tick.js:104:9)
t.log @ /usr/share/code/resources/app/out/vs/workbench/workbench.main.js:268

",uncivil
4039,631032369,"You find the comparison between a city in Hawaii and MauiKit ridiculous just like I find your comparison between an the Maui abbreviation and MauiKit ridiculous
",uncivil
4040,622234473,"> can't be bothered to fix or work around.

I’m legitimately curious which ones you’re referring to. We have worked around a bunch of platform bugs that we haven’t raised a fanfare about. We sit in the same buildings, and generally on the same floors, as these “Core” people because _we are on the core operating system team ourselves._ When they say something can’t be fixed or worked around, that’s the brakes and the best we can do is communicate that to our community.

> Microsoft once again doesn't fail to disappoint.

I appreciate you expressing your discontent here. It’s the only way we can really learn how our community feels. I _don’t_ appreciate you expressing it by heaping it on top of everybody I work with.

The decisions made on this project stop with me and my PM. Hi! I’m a real person, happy to have a dialogue about that.

EDIT- when I say “stop with ...” I really mean that _we’re the ones responsible, at the end of the day._ Sorry about that, it sounded bad on a re-read.
",uncivil
4041,4015,"I just wasted several hours trying to figure out why my site wasn't working. First, I got a 500.32 ""ANCM Failed to Load dll"" server error code. This wasted several hours of my time trying to work through the suggested troubleshooting tips (https://docs.microsoft.com/en-us/aspnet/core/test/troubleshoot-azure-iis?view=aspnetcore-3.1).  The doc said it was most likely due to binary incompatibility so I tried to use the **dotnet** command to find out what's installed. When I typed  **dotnet --list-sdks** or  **dotnet --version** I got the following error message:

> The specified SDK version [3.1.100] from global.json [D:\****] not found; install specified SDK version
> Did you mean to run dotnet SDK commands? Please install dotnet SDK from:
>   http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409

I reinstalled the SDK and received the same error.  Why is **dotnet** giving me this error for no apparent reason?  This was getting me no closer to the solving the problem until I realized that I should restart the web server and perhaps my app will work again.  Lo and behold it was a simple restart!  This is the second or third time I've been screwed over by Microsoft's shitty installation practices. You guys suck at everything!

WTF Microsoft!  Can't you guys get anything done without turning it into a nightmare?  You force the user to restart the computer when they uninstall a server bundle, but you don't require them to restart IIS when they install a server bundle?  I would be tempted to blame legalization for this kind of mishap, but you guys have always sucked at software!  Everything you guys put your hands on sucks!  Windows sucks and now you even made .NET, your crown jewels, suck!  Microsoft should grow turnips instead of writing software!

",uncivil
4042,405948813,"@oehme  you are funny :) you can learn a bit about semantics, grammar and the meanings of words - essentialy about language and usage :)
can you tell me who was here offended ?

**maybe better was to use here a euphemisms so that the dumb people didn't think they were being offended when in fact nobody was...**  if you fell so then it is your right to feel as you want to :)

understanding is key to everything.. so **try to understand it does not hurt!**


cipa, kutas, jebnij, pierdolenie

best
ceph3us
",uncivil
4043,490048787,"@10jasper10
I agree that @creotiv should not act like an ass
",uncivil
4044,567447099,"I'm extremely offended by the fact that because of religious beliefs @Mikotochan 's only life pleasure has been taken away.
",uncivil
4045,461725515,"@jsamr

You move from **assumptions**,  **contracts** to **communicating**.
But you still don't realize the fact.

Science and technologies draw principals from facts not from thinking, from what it is instead of what it should be.

I think computer should based on decimal but it is binary.

I think programs should be bug free but it will never be.

If the fact is ignored,  what is the value of finding communicating methods?

Semver bears a good will, but it will never be a realistic one.

A false good will always lead to a bad result.

Npm's auto update has shown the downside and now lock fill has be introduced for remedy.

I don't know why you still insist on use semver, what benefits do you gain on applying semver?

Get sky high version number?
Make versions meaningless?
Upgrade major version on every small change that breaks?
Auto updates that makes software unstable?

I think there must be a list of gains if semver should be adopted.

> I apologize for using `stupid` if it is offensive.

Software quality will not be improve by merely defining very strict rules.





",uncivil
4046,417898797,"@bkaradzic It definitely _is_ complexity. You seem to be assuming that just because of adding BGFX support, everything will be fine and no one will ever have to learn how the underlying APIs work.

This is, unfortunately not the case and how things work in real life. This may work for APIs or libraries where you truly no longer need to care how internal implementations of things work as long as they do what they have to. Bullet is a good example of this.

However, in my experience, if we were to use BGFX, contributors would still need to also know the underlying APIs as well (OpenGL or Vulkan). How else are they supposed to fine tune performance, or understand why something fails when it does?

If this was a simple game, or a tool or something like that I am sure BGFX would be fine, but thinking BGFX will fit like a glove for us and just work is very naive. We have a lot more responsibility than you do at providing something that works for our users. We need to extract the best out of the resources and performance from the underlying hardware, since we are already a middle layer ourselves.

So, as I already made it pretty clear that there is no advantage to it, due to us needing two rendering pipelines, and that contributors will still need to understand the underlying rendering APIs. I hope you understand that to me it's just extra unnecessary complexity that is best kept away of Godot.
",uncivil
4047,600487688,"Thank you for chiming in @MichalStrehovsky.  Both the comment you make and the way @AArnott initiated the closure of this issue was disingenuous.  You folks are well aware of the .Net Native problems and design considerations.  The developer of MessagePack and @AArnott's contributions to that code base are not at fault here.  @AArnott is a very smart fellow as are you @MichalStrehovsky.

It may be a PITA to have .Net Native issues surfaced this way.  However, that's the real problem and characterizing it any other way is also a problem.  Sadly, I'm not expecting Microsoft to do anything other than replace the .Net Native compiler with whatever the new .Net Core AOT strategy will be.  Until that happens, you folks need to own up to where things are really headed.

It's obvious the reboot is well on the way.  Just say so and stop pretending that any of the .Net Native compiler problems will actually be addressed.  A year went by on the gRPC issue.  A year with no resolution!  I'd even be ok with a form of admission and a statement along the lines that we need to resolve these issues ourselves.   At least that way, time wouldn't be wasted on false expectations.

This library is a nice piece of work.  I'd like to be able to use it.
",uncivil
4048,632348444,"So as long as everyone reads through at least the first 39 pages of the Unicode standard then there shouldn't be any problem.  Why would anyone even consider using `.BAT` files to automate Java code compilation or execution?  I'm such an idiot.  I'm so sorry for wasting your precious time with a totally realistic scenario; and providing examples to support it.

Meanwhile, you've provided zero evidence to support your claim, which is based solely on your personal experience.  The Wikipedia snippet, a somewhat pathetic and non-authoritative source, in all honesty, actually supports my argument.

If I ever make a contribution to Google I will be sure to include that BOM.

It's no wonder that even Google's own engineers could care less about the company's style guides.

And here I'd thought that Google workers were above mansplaining.  Stupid me.
",uncivil
4049,728319870,"> It should not be about believing or feeling

It is entirely about that.  The language design group chooses which features are added to the language based on their personal beliefs and feelings.

> It is not technical terms

The features we decide on the for the language are not chosen based solely on their technical terms.

> what this feature will provide and allow to achieve

Yes, that feeds into our decision making.  We are aware of what would be enabled by this, and we made a determination if this would be an overall positive for the language.  We decided it would not be, so we rejected the feature.
",uncivil
4050,650291490,"> > ""All lives matter"" isn't racist either, yet [apparently saying that makes you a white supremacist](https://github.com/angular/angular/pull/37407#issuecomment-637864531) or something.
>
> I agree with this, ""All lives matter"" isn't inherently racist and is a very true statement. In this context, it's undermining the BLM movement where special attention is warranted for the systemic discrimination over many many years.

The discussion is not about whether you should support a movement or not; it's about why is it on the front-page of a TypeScript platform for building web, mobile and desktop applications. Yes, black lives matter, white lives matter, Asian lives matter, Latino lives matter, gay lives matter, lesbian lives matter, vegan lives matter, stutterer lives matter, little people lives matter, disabled lives matter, left-handed people lives matter, colorblind lives matter.

The question is, why is it on the front-page of Angular and **what is the criteria** which determines what gets on the front page. **Who decides what's important enough?**

The very fact that these discussions ""produce heat"" is an indication that people are divided on it. If everyone really agreed that the banner makes sense on the Angular's front page, there wouldn't be an issue about it and [the original PR](https://github.com/angular/angular/pull/37407) wouldn't have been locked immediately. If you're so sure that it's such a good idea, why do you have to act so quick about locking it so as not to give people a chance to give their opinion on the matter?

Again, Angular team is not required to provide an answer. They can just lock this thread again with a generic ""we care about everyone and we hear y'all, we'll talk it internally, we promise 🔒"", and there's nothing anyone can do about it -- legally or otherwise. It's their framework and their repo; as long as they abide the GitHub rules, they're fine. Even if they don't, it's up to GitHub to punish them if they break it.

But it just feels less and less a framework and more and more a political board. ""Something happened in America that aligns with who Imma vote for soon? LETS POST IT NOW, QUICK"" ""[Highly voted issues from 2016?](https://github.com/angular/angular/issues?q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc) crickets [crickets](https://github.com/angular/angular/issues/15280#issuecomment-584121619) crickets""
",uncivil
4051,417381205,"If you want to restrict who can use lerna, then lerna can no longer be called free; it will be proprietary. Please let everyone know with advance notice so they can make preparations to move away from it if it's going to become proprietary software.
",uncivil
4052,708,"
https://github.com/google/re2.git
/compare/0c95bcce2f1f..848dfb7e1d7b

git log 0c95bcce2f1f0f071a786ca2c42384b211b8caba..848dfb7e1d7ba641d598cb66f81590f3999a555a --date=short --no-merges --format=%ad %ae %s
2019-06-13 junyer@google.com Don&#39;t let DFA execution bail when slow for RE2::Set.
2019-06-13 junyer@google.com Expose FilteredRE2::GetRE2() as public.

The AutoRoll server is located here: https://autoroll.skia.org/r/re2-shaderc-autoroll

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+/master/autoroll/README.md

If the roll is causing failures, please contact the current sheriff (radial-bots&#43;shaderc-roll@google.com), and stop
the roller if necessary.



",uncivil
4053,417828353,"> @robbyoconnor you and @SRGOM agree, they were being sarcastic......

Oh Jesus nevermind -- I'm an idiot I guess :joy: -- apologies @SRGOM :)
",uncivil
4054,653762791,"Why are you using this platform for displaying your political agenda. You have other platforms to do that. No one wants this here. Stop whining about that and remove the BLM from the site.
",uncivil
4055,541413860,"> Yeah, that's a year of work. Next time you will have to think a little bit more about how a feature works before using it. And we won't solve your problem by introducing workarounds in the code, sorry. And once again, there is nothing to fix here, unless you have a real ""solution"" to the problem. Otherwise, stop wasting our time.

What the hell?
",uncivil
4056,545127101,"I was quite polite until I was asked to be thankful for my builds breaking without warning. Unintended breaking changes happen, but blaming it on the consumers is not an appropriate response.
",uncivil
4057,744032932,"This is still a problem.  The older versions of editors never used to behave like this.  Other editors don't behave like this.  Even Notepad doesn't behave like this.

I'll explain simply:
With the option to KEEP TABS selected in the Editor settings, TABs typed within code (so end of line comments line up, for example.) are later changed into spaces by Visual Studio.  When copying & pasting a line, for example.
I NEVER want this to happen.  That's why I select the option to KEEP TABS.
If I type a TAB in my code, I NEVER want it changed it to spaces.  It's really that simple.

Why is this not fixed after 2+ years?
This is not an enhancement request, but simply a request that the editor behave as editors have always behaved since the dawn of computing.  At some point, someone in Microsoft decided to 'muck' around with users typed code and change it, when not one user asked for that to happen.

> > Are there really users that like to keep tabs only on specific parts, like indent?
> Yes, it's actually a primary request for users who indent with tabs.
That's simply not true.  Show us ONE request from ANYONE who asked for their TABs to be changed to spaces within their code when using the option KEEP TABS.

Also worth noting that this still happens when the 'Use Adaptive Formatting' option is turned off.  So it is impossible to prevent this from happening.
",uncivil
4058,419714937,"Is there any particular reason for why it's not called `strings.Buffer`, next to `bytes.Buffer` (which exists)?

It was a neutral-tone, you might have never actually attached or imagined negative connotations to it if it weren't for me saying ""excuse me for my tone"", which I have only said because I know how often people imagine hostility where there is none. :relaxed:
",uncivil
4059,397844048,"> I shouldn't complain about software I had nothing to pay for

Then don't?

I develop almost always using a Linux environment. It's *Windows* and *macOS* that receive the most bugs.

I take pride in my work, even if I only do this in my free time for no payment.

The 1.0.0 release was mostly a two-person effort and focused on code health. The 1.0.1 saw only fixes that were pending 1.0.1 since 1.0.0 was hugely behind schedule. I experienced hardware failures that prevented me from working for nearly two weeks. Almost no bugs that were introduced by 1.0.0 were addressed, and I was pleasantly surprised by the lack of an influx of bug reports following 1.0.0 and 1.0.1.

I feel personally responsible for almost every bug that anyone opens in this issue tracker, and I strive to keep the issue count low and under control.

I do not feel so keen on this ticket.

Issue #428 is similar, but I closed it because I believed I had fixed it. That issue was opened by a collaborator, not a general user.

I have received no automated error reports with a traceback resembling yours. I address issues based on how frequently they appear in my Rollbar account, or how frequently people react using GitHub issue tracker. No one other than a collaborator has ever reported seeing this problem.

I'm going to close this and lock the conversation.

If you would like to re-open another GitHub issue calmly describing your problem with less vitriol and toxicity, I will gladly add it to my next release milestone, I'll add a test case for the situation, and I'll forget that this exchange happened.
",uncivil
4060,792220411,"I honestly cannot believe how casual and dismissive you guys at MS are.
Lose more games than the Jets and act like you are a team full of Tom
Bradys. The hubris. I understand it must really difficult to do your job as
a $1.75T company but can you try?

Make some sort of effort. Please? Anything?

On Sun, Mar 7, 2021, 12:14 AM Drew <zerocarbthirty@gmail.com> wrote:

> Quote the blog post to me one more time.
>
> On Sat, Mar 6, 2021, 11:51 PM Bill Long <notifications@github.com> wrote:
>
>> Closed #109 <https://github.com/microsoft/CSS-Exchange/issues/109>.
>>
>> —
>> You are receiving this because you authored the thread.
>> Reply to this email directly, view it on GitHub
>> <https://github.com/microsoft/CSS-Exchange/issues/109#event-4417645174>,
>> or unsubscribe
>> <https://github.com/notifications/unsubscribe-auth/AD7FNQTM4RXUTTGGOOOQO5TTCMA4LANCNFSM4YXOOVPQ>
>> .
>>
>

",uncivil
4061,702310271,"@weedkiller Funny how while it's been free, depending on 3rd parties has never been a problem...
",uncivil
4062,558863873,"I've already done so, naturally.

What about the thousands of other users who haven't spent time and money on things like Little Snitch, who nevertheless don't want to be tracked and explicitly opt out of telemetry that still get telemetry sent (and logged by their government forever) against their wishes?  How is that good UX?  How is that showing respect for your userbase?

Forks don't benefit anyone.  Look at the VSCodium mess that was created; let's not repeat that.
",uncivil
4063,11609,"It would be great if aside from the current way of building widgets you could add JSX like capabilities. I mean add tiny syntactic sugar to enable XML like constructs inside dart code. It just makes code so much easier to read/develop/debug/maintain and also easier for powerful GUI builders to integrate with editable code.

Looking for something like DSX:
https://spark-heroku-dsx.herokuapp.com/index.html

Carlos.

---

The current issue with DSX is about proper integration with Flutter tools as to provide a great developer experience with debugger, auto-complete, etc. working on .dsx files.

Telling users that they can use DSX but can't use debugger or enjoy auto-complete is a non starter for me. If anybody wants to help, what I need is to figure out a way to add full preprocessing support (with source map) to Dart Tools and VS Code Dart plug in. Once the tools support that DSX or any other transpiling language (any language that is a superset of Dart but compiles everything down to Dart) would just work.

If you can and would like to help, let me know.


",uncivil
4064,356422289,"OK we're done here, and that makes me sad.

People want WCF because they're connecting to systems outside of their control, or for back compat, or for the things REST simply doesn't do. Berating them to move to REST when it's impossible for them is neither clever nor helpful.

I will remind you that we have a [code of conduct](https://github.com/dotnet/home/blob/master/guidance/be-nice.md) which includes prohibitions on

- Personal attacks
- Trolling or insulting/derogatory comments

Please read it and understand why we have this in place.

",uncivil
4065,513930709,"@lll000111 your attitude here makes my day measurably worse. Lots of people here manage to be constructive and positive and I'd appreciate your effort in not starting fights with us or other contributors. I've asked you to do this once already and am not going to ask a third time - if you continue to be combative to people just trying to help, we'll be asking you to discontinue your engagement on the issue tracker.

Turning to the issue at hand, I think we need to figure out what the right solution is relative to #17002. In that issue (`Array.isArray` and `ReadOnlyArray<T>`), it seemed like the preference from people was that narrowing e.g. `string | ReadonlyArray<number>` with `isArray` should yield `ReadonlyArray<number>`. not `Array<number>`.

It'd be confusing if `string | Iterable<number>` narrowed to `Iterable<number>` but narrowing `Iterable<number>` produced `Array<number>` - the `isArray` type guard should uniformly either produce a subtype or filter a union, not do one or the other depending on whether the argument type has some unrelated (e.g. known-`false`-returning) union constituents.

Also an open question: surely it's not *just* `Iterable` and `ReadonlyArray` that want special treatment? Are there other types? How does this impact #28916
",uncivil
4066,417450440,"> The purpose isn't objectivity, it's transparency.

Let's test if that's the actual goal

> Examples of unacceptable behavior by participants include the use of sexual language or imagery, derogatory comments or *personal attacks*, *trolling*, public or private harassment, *insults*, or other unprofessional conduct.

(Emphasis added by me)

> personal attacks... insults

Per https://github.com/palantir/blueprint/issues/2877

>> Palantir employees are racist

I could probably stop here. That's enough for removal. Full stop.

> trolling

* Blocking people on the lerna repository that politely called him out.
* Blocking all non-contributors on the repo from posting issues/comments/PR's

Per https://github.com/lerna/lerna/issues/1628

* Suggesting he may not do a major version bump

This is in addition to his horrible conduct in every issue posted regarding adding his company restrictions to the MIT license. That's pretty transparent. That's pretty objectively trolling, personal attacks and insults. Now the question is, do you really want transparency, or are you looking for a fight?
",uncivil
4067,596159897,"how about you do it?
it's literally your job.
or you are here just to spam random stuff till people get pissed off and leave?
",uncivil
4068,567413656,"That's way too rational, a guy was extremely offended, please have some consideration!

We must remove the hat, all mentions of the hat, all mentions of removing the mentions of the hat and so on, just to be sure. Oh no, I just mentioned way too many forbidden things, so this is getting removed too. Along with this thread. And me. And you.
",uncivil
4069,567459470,"@Kegelcizer Did you just say trans-parent? But it's ok, my conservative belifs can and even should be offended.
",uncivil
4070,643663090,"This is getting silly already. No way it makes any sense.

UPD: How is this offtopic? Please stop bringing politics into development world. That's just mindblowingly silly.
",uncivil
4071,135974559,"There is also room now to put Google Ads in the exception messages.

",uncivil
4072,428200304,"@zoechi LOL - you simply closed my issue - where is your interest? Because you do not know the answer about the raw response in gitter?

Go home
",uncivil
4073,542977645,"You guys aren't big fans of the KISS principle, I see.

I added that disabledprofilesources tag and that worked to remove the Azure Cloud option. Thanks for that.

However, (insert ominous music here)

Something else is actually broken.  I was experimenting and just to see what would happen, I removed the PowerShell profile from the profiles.json file to see if it would come back too. And it is not there anymore and it did not come back, but the PowerShell option is still in the menu when I open the terminal program and when I click it, a tab opens with Powershell.   I have closed and reopened both the profiles.json file and Windows Terminal several times and it's not in the profiles.json file and it IS in the menu in Windows Terminal.

I then added ""Windows.Terminal.PowershellCore"" to the disabledprofilesources  mentioned previously and the PowerShell option is still in the menu.

Then I renamed the profiles.json file to profiles.json.bak and reran Windows Terminal to see if it would regenerate the entire config file and it did so, creating a much sparser file than existed before with no keybinding information or color schemes.

I then added the profiles I had created before to the profiles.json and set the default and added the disabledprofilesources option for Azure Cloud and now everything is as it should be.

We now return to your regularly scheduled program.

additional.  Curiouser and curiouser. I did the alt-click-settings to view the default settings file and it shows me a file that DOES include the keybindings and color schemes.  The file it generated after I deleted the profiles.json did NOT include keybindings and color schemes.

Windows Terminal (Preview)
Version: 0.5.2762.0


",uncivil
4074,548337754,"@WrongBit Review the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).

> Be respectful: We are a world-wide community of professionals, and we conduct ourselves professionally. Disagreement is no excuse for poor behavior and poor manners.

This isn't some Reddit thread for you to vent.
",uncivil
4075,441838381,"> > **But** if one is **not using** _bundler_ in a project (and hence both _Gemfile_ and _Pluginfile_), then they could just add plugins via `fastlane_require` action in a project _Fastfile_ or in an imported _Fastfile_.
>
> If you install a plugin, you always configure fastlane to use bundler: https://docs.fastlane.tools/plugins/create-plugin/#add-a-plugin-to-your-project Plugins are (by definition) gems loaded from rubygems. That is the difference to a local custom action.
>
Come on, I know they are gems and normally you use _bundler_ for plugins.
**One thing** is that I am providing a **workaround** for `import_from_git` to work with plugins but without _bundler_. As _Pluginfile_ requires _bundler_ and such a usage cannot be supported in `import_from_git` action.

Put this in a remote _Fastfile_:
`fastlane_require ""fastlane-plugin-clubmate""`
and you can just use this action in a lane like that:
```
lane :custom_lane do
clubmate
end
```
when you **import** this _Fastfile_ in another one it will also **work**, providing that you do not use _bundler_.

**The second** thing is that in my previous comment I have suggested adding some **improvements** (prevention steps) either in a form of a new action `fastlane_require_plugin` or additional safety-checks in `import_from_git` action to help mitigate issues when using plugins in a _remote_ _Fastfile_ (in a normal way with _bundler_).

As this issue is a _Feature_ _Request_ I was hoping to discuss all that and at the same time be proactive and bring up some ideas.
By looking at _fastlane_ issues I can see that using a _shared_ _Fastfile_ where one would like to use some plugins, is a problem raised many times and it probably needs some support.

So when using _bundler_ and importing a _remote_ _Fastfile_ it **cannot** be **guaranteed** that all the plugins used in this _remote_ _Fastfile_ are installed **locally**.
What is more, it can be even unknown what plugins are required (without looking at the source of the _remote_ _Fastfile_) as there is no need to create (although it would be reasonable) a _Pluginfile_ for this _remote_ _Fastfile_.
And as you can have multiple projects using a _shared_ _Fastfile_ and/or multiple _shared_ _Fastfiles_ it is easy to lose track of which plugins are required where - hence I wanted to improve that by giving some hints when importing a _shared/remote Fastfile_.
<br/>

> Besides that I honestly don't follow any more. Maybe create a new issue with just the actual _problem_ you want to solve, and not suggestion for the solution.

Sorry to hear that, but what is causing here an issue for you? It supposed to be a discussion so you can ask questions too. 😄 Otherwise, I cannot help you understand. If you do not follow - can you ask other collaborators for help?

By the way, I do not think spawning yet another issue on the same subject is going to help solve anything. Even more, I do not think that ""the actual problem"" I want to solve and ""a suggestion for the solution"" of this problem should be in separate threads?! 😱 What are you saying?

",uncivil
4076,414691501,"Can we please go back to focus on the issue at hand now, instead of having a meta discussion about how long people have had to test this. It is what it is right now, so let's look forward.
",uncivil
4077,631056651,"Beautiful! You steal name and say that it's OK! Good position!
",uncivil
4078,460767290,"@trishnaguha I'm sorry I don't have much time for other things beside work and family. I didn't realize a 4 line PR would pull me into a discussion on how to improve it by implementing a new code base and consequently figure why shippable would fail. I understand your request but I'm not sure it is the most efficient. Release fast and refactor after by actors that have an interest (they'll make time) in it (dissecting to_list() brings not value to my use case). Look, 24h later, a valid tiny patch is still not merged and we'd need to ""discuss"" why shippable failed on its improvement, not even on the patch itself. It's clearly less effective than merge and refactor later added to the fact I feel my time creating that PR was wasted, so not rewarding, hence I'll think twice before making another PR. There is much more to gain by going fast on smalls steps/iteration and securing what you have asap, that's my way of working anyway so very subjective I'll give you that. Feel free do whatever you see fit, I'm off to other things, good luck & sorry for the noise.
",uncivil
4079,243940292,"@thedaniel, **I do not think** it is a good idea to close this, even have a plan to reduce the size of atom, why not keep this open as a place where can remind us we have a really important thing to do. not just a idea.
@paulcbetts, I want to speak directly, the words ""very cheap to buy a USB"" seems really ridiculous. if that is right, why not make atom more bigger, to 2G. or what else...... what is the meaning of one software which exist? especially loved by people. that is ..... everyone knows it. maybe you will tell me, Atom is a open source, you just work for it as volunteer. That make no sense, why you make efforts to a open source, because you love it. when you love it, why not keep it the best.
@lee-dohm, Then about the purpose, 200M, 100M? @crquan already gives us a good example ###sublime###. your words looks so ridiculous too, I have to say. no offence. Thanks.

anyway, Thanks all the efforts to ATOM. Thanks all you here. Thanks.

",uncivil
4080,784615888,"You'd see things very differently if on some lines of your code, your spaces were constantly being replaced by tabs.

",uncivil
4081,417057188,"@jamiebuilds i would personally appreciate some certainty around this, because if you're likely to release this under a patch version I now need to go through all my clients' repos to make sure they're using lock files, fixed versions or a fork. Not because my clients are Microsoft et al but because they have contractually approved lists of licenses that we can use and this license will not qualify.

> To screw with companies that support ICE, was that not clear?

The intent is pretty clear, but the unfortunate side effect is that it also screws with many developers who use this tool. I know this wasn't your intention but it sucks if I have to spend my evening checking a bunch of old repos because you'll _maybe_ release this as a patch.
",uncivil
4082,718240989,"This isn't how we have technical disagreements. No amount of technical correctness can make up for treating other people poorly; please don't repeat that behavior. I will close both of these PRs. I'm available via slack or email if more explanation is needed.

Instead, I've asked @caesarxuchao to send a fix for the issue in question.
",uncivil
4083,518748484,"> This is very much a case of ""Old Microsoft"" rearing it's head, rather then new forward looking Microsoft.

@Panzerbjrn, please let me refresh you on the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). We can disagree here and have debates, but please halt yourself before assuming the motivations of others and attacking individuals personally or their work.

We are happy to continue to discuss the way that this prerelease product should evolve before it meets v1.0 (and even after 1.0!) Please exercise patience and understanding when working with us and members of the community as the software develops.

",uncivil
4084,839673286,"@jonahwilliams don't be stupid, it's a bug
",uncivil
4085,834728813,"""Because we can undo it"" is not a good reason to present bad statistics. Data should not only be technically accurate, but meaningful and not lead readers to incorrect assumptions. fCC should strive to follow sound statistical principals and not teach bad habits by example.

I think we understand each other's opinions on the matter. Let's let others chime in.
",uncivil
4086,373851878,"Going off on someone because you assume they haven't searched for other solutions makes you look like a dick. I asked around on several modding discords, looked at the source of several mods which implement such thing that I'm trying to and came to the conclusion that ASM is the only good way. I'm not threatening to coremod anything. The solutions I found were to coremod and I wanted to avoid that. **Which is why I made this PR.**
",uncivil
4087,631048514,"> there are 10 open issues

This is a tiny amount, big projects have bigger issue count, and this is OK
Why you even pointing on this? It is unethical, you are don't have any arguments?
_P.S. replying in epic thread_
",uncivil
4088,524570525,"> as I said before if you need money dont do OSS,
> You can convert standardjs 1$ per download and then you can see how much its really worth.
> Since as you know nobody will ever pay 1$ for an eslint config which thinks semi column isn’t necessary in JS.
>
> This library is no where near webpack or babel, you are making yourself a name but a bad one.

If people started paying for packages then they would be a lot more careful about the crap they select.
",uncivil
4089,567492253,"it seems like kernel trauma, it has befriended santa and now microsoft crushed its dreams
",uncivil
4090,457624503,"> Godot was not designed to change the displayed keyframe once it has been assigned unless the user resigns it.

You are wrong here, it was designed to work that way. The indices are, by design, naturally set from left to right then from top to bottom. So yeah, if you extend the texture horizontally, the indices get offset.

It is said nowhere the indices should be kept when you change the texture size, and event if we did, people might even complain because their indices could go unordered when changing from one texture to another. It might even be compatibility breaking. So for now, by design, Godot does not support changing the size of your texture while keeping the indices. That's all.

To be honest, it is more like ""we did not think about this problem when we designed it"", but that's the  definition of an enhancement : it works as expected, we know it has limitations, but everything happening here is completely expected.

But also, I don't want to be mean but I would prefer not to have this kind of discussions. We are the ones working on fixing those issues, so please, respect the way we organize the work to be done. Unless if other contributors agree the issue should be moved to bugs, the tags are not going to change.
",uncivil
4091,442080707,"Well I didn't feel of this as being a heated discussion. So excuse me if this is how you felt.
Anyway, it is nice to know now that you have realized it was a bad move and deleted the comment. However, I quoted the whole part not a selected one as you suggest.

And I do not think that looking for help in other contributors was inappropriate in that case as you clearly didn't want to take care of this issue.

And now you make another comment in a similar style 😞 :
> Do you really wonder why I don't want to spend any more time helping you?

Seriously, have I done something to you?
",uncivil
4092,419731501,"Yet you’re continuing to double down, in the face of multiple people telling you your behavior is not being appropriate. What I don’t understand is you’re clearly capable of writing and behaving constructively, for example on https://github.com/golang/go/issues/27558.

Despite what you say your words and actions do have a large impact on how people feel about what you write and how people interact with you.
",uncivil
4093,567458866,"To avoid being offended, please use the ~~transparent~~ ~~perspicuous~~ pellucid theme.
",uncivil
4094,755289574,"> Are primitives a special type of Type?
Yes = Then different styling and capitalisation could make sense
No = Then they should be styled and capitalised the same way as other types

For the last time: YES, they are a ""special type of type"".

I'm tired of this bikeshedding. I tried to advocate for keeping this issue focused on the actual bug that can be fixed (syntax highlighting), but you keep bringing it back to advocating for breaking compatibility in the language design as if this was the same level of implication.
",uncivil
4095,470495052,"The subject isn't the Open Source. I don't respect people who want to collect my PRIVATE data with software. If you don't like my demand, delete it. If you want better software, delete all these malwares.
",uncivil
4096,11235,"Seeing you are happy to close issues and never respond to replies in closed issues, I am forced to open new issue. I'm going to be brief this time.

In https://github.com/hashicorp/vagrant/commit/1b0148bc783298c7aa16a519e133bb26bcc1cc9f you removed function argument, which broke` vagrant-gatling-rsync` plugin. This is not a fault of plugin, but you breaking API compatibility. Please respect semver and do such changes in major version. Until then, please revert the BC break.

refs: #11229 #10974

",uncivil
4097,567439869,"I am with you guys- the one **TROLL** that offended many, many people got his wish fulfilled. Only ONE person wanted this ridiculous change and you are just ignoring so many requests to bring back what was deleted. Shame on you, shame.
",uncivil
4098,622231930,"This really isn't cool, and the story about dynamic generators is really thin. You are shipping with a default config, and if a user removes a part of that config, re-adding it and not leaving any hints in the settings file how to disable your fancy ""dynamic generator"" is just a super user-hostile action.

Since you ship with a default config, you can be sure that it is _found_ - because you shipped it that way. Getting rid of it was literally my first course of action on installing this software.

My next action was googling for ""wtfbshax why is this Azure rubbish coming back"" and, after reading this thread, my next action will be to get rid of this software immediately. Microsoft once again doesn't fail to disappoint.
",uncivil
4099,631714332,"> It's also trademark infringement:
>
> https://euipo.europa.eu/eSearch/#details/trademarks/013410601

Are you a lawyer? Maybe you should check with one before you potentially commit business libel.
",uncivil
4100,373873824,"If you would like to readdress this as a series of prebuilt utilities to render extra bars or numbers over items in the inventory. Then we can readdress it as that.
But moving things back 5 years by encouraging people to do even more direct GL access is not going to fly.
Feel free to create a new issue or PR to discuss that avenue of things.

As for the whole topic of ASM. Let me state this directly and for the record.
It is, by definition, possible to do ANYTHING in a coremod.
Stating that you can/are using a coremod in a PR serves literally NO purpose.
It is NOTHING but a threat that gets tranted to ""Do this or i'll hack shit with a coremod""
I do not bed to threats.

So, new guideline (I've instructed Mezz to make it official). Any mention of ASM or hints at using a coremod to do shit in your issue will result in the thread being locked, and potentially you being banned from the Forge repo.
End of story, i'm sick of being threatened by people and coremods.
",uncivil
4101,524577890,"> We humans are opportunists. Any time a cost to us is >0 we will not like that cost and we'll complain about it.

No, not all humans have this reaction.  The reaction you are projecting on all humans infers that all humans are greedy, inconsiderate thieves.
",uncivil
4102,703181973,"> Sorry, but this is just an arrogant statement by you.
> I absolutely don't want to pay anything extra (yearly!!) for such a **very basic** thing like identity in my framework.

> I don't expect some - again VERY BASIC - functionality in my tech stack to change the licence 180°.

Is this really so basic? If it's such a simple thing to do, Brock and Dominick wouldn't be able to create such a product - and you wouldn't be so disappointed at the move to a commercial model; you'd simply roll your own, or fork IS4 and continue from there.

Clearly there's complexity in auth in general and within IS, and let's not pretend otherwise.


",uncivil
4103,742975256,"This is stupid! Administrative permissions can be verified through other means, not by open a secure leak on the machine!
",uncivil
4104,703168330,"> > Sure you can say, yes $1500 is not much in the business environment. But this is not true for all of them. For us it is a lot of money and also a lot of time that we have already invested. We now have to migrate to something different.
> > In a healthy ecosystem, it should not happen that a pillar on which so many have built, changes the license so negatively.
>
> Having sustainable OSS projects _is_ part of a healthy ecosystem. If not $1500, what amount would you pay?
>
> If the answer is ""none"" then _you're the problem_.

Sorry, but this is just an arrogant statement by you.
I absolutely don't want to pay anything extra (yearly!!) for such a **very basic** thing like identity in my framework.
Again, I completely get that the IS devs neeed more money and want to be paid. But I (and a lot of other not so high profile devs like you) invested a lot of time into using this product since MS declared it the defacto standard.
I don't expect some - again VERY BASIC - functionality in my tech stack to change the licence 180°. This is an absolutely not planned change that cost a lot of time and money. If this was a framework that helps solving some black magic math issues, I wouldn't have such problems. But we absolutely need fully FOSS solutions for the very basic things in every day life. And I don't agree that MS should't fill this gap here. It was their mistake to promote IS in the first place without making sure that it keeps the same license **forever**.
",uncivil
4105,558875193,"> > Atom is designed to run in an internet connected environment
>
> Is this documented somewhere? And why is this a design constraint? Speaking generally, I would propose the opposite, that a text editor be designed to be fully capable in all respects when offline.

It's an expected scenario to check for updates, it's not a _constraint_ though. As I have stated multiple times you can definitely work with Atom while offline (or with network requests blocked). You can even turn off checking for updates in the settings if you want, although that wouldn't prevent the first run connection this issue is about.
",uncivil
4106,470556735,"Take your foul mouthed trolling to Twitter. That's what it's there for. There are countless calculator apps. Find one that you are satisfied with and use it. This one is obviously for people with different concerns than you. They get to have their applications too. You are not Calculator King of the Internet. Grow up and move along.
",uncivil
4107,776146107,"@escamoteur, I am really sorry if I break any rules. I'm struggling about passive reaction of Flutter team.

Yes, you are right it's for free, except developers fee, right? We are paying commission in the Play Store, paying account fees and Google provides tools for making applications which will gain more money for Google. It's simple consumption chain.

For sure, me and many others developers feel deceived about this situation, because Flutter team PROMISED 60 fps animation! We all invest years of our lives in usage this technology, we spent our tech-reputation to push ours companies to take a risk and invest resources to achieve this technology. And what we have got from Flutter team?

Indifference for the whole year! They decide to expand to the web and desktop, instead of contributing theirs main features and take care of community. That's why I tell, that ""quantity over quality""

And you are really think that is the Apple's problem? If you decide to create cross-platform system you had better to being ready for changes from each contributed platforms, a specially from a such moody company as Apple.

",uncivil
4108,442072356,"I posted a reply in the heat of a discussion. Then I quickly deleted it, as I recognized that it was not a helpful reaction and wouldn't help advance the conversation. Now you post a selected part of that deleted comment again. This is highly inappropriate.

Do you really wonder why I don't want to spend any more time helping you?

Mentioning other contributors that have not participated in the discussion is inappropriate as well, by the way.
",uncivil
4109,631668078,"This is why Linux products are the way they are, and why no one had ever heard of KDE MAUI until now -- you lot just argue about inane stuff instead of getting work done.
",uncivil
4110,396740627,"Maybe to add one thing: If you, or somebody else, think Node.js *should* address one of the particular concerns, and are willing to help in making that happen, I’m sure we can arrange that. :slightly_smiling_face:
",uncivil
4111,779549626,"So there's nothing concrete that's being done yet? Since you said:

> issues are how we track work on this project

Guys, I think we should start reaching out to the press about this issue. Ultimately the priorities of the flutter dev team are set by business stakeholders, I think. If there's enough negative press about this issue, perhaps that will tilt their priorities enough that they'll assign more resources to this issue rather than to desktop / other platforms.
",uncivil
4112,720062867,"It looks like no one from Flutter team cares about the issue.
I did some more investigation and it looks like there is just a bug in Skia working on Metal.

Why I think there is Skia bug:
1. Jank is not depend on device performance, in my case it is clearly visible on one specific **1 second long** animation  - on Metal on ALL devices I tested, there is only 2 frames displayed on first run, first frame and last. In case of OpenGL number of frames depend on how powerful device is.
2. For the same animation I took slowest possible Android device I could find, and it showed 4 frames. :) How is that possible that 5 years old low level Android device works faster than iPhone11, both running Flutter?

Flutter team, PLEASE INVESTIGATE THIS ISSUE PROPERLY!

IMHO there is no need to postpone resolution until SkSL warmup for Metal is ready. Even more - SkSL warmup for Metal wont fix this issue, just hide it for some use cases. Reason to get 1* still will be present.
",uncivil
4113,631027900,"Perhaps the Linux project should change its name as they've conflicted with a city in Hawaii which existed long before. Look again, the name isn't Maui, the name is Multi-platform App UI which abbreviates to M.A.U.I.
",uncivil
4114,65772,"Fuck you flutter, if macos adds PATH, it just won’t join, go to hell, you’re so ugly, Google is so big, will the script be configured to die?

",uncivil
4115,548462695,"> And if they fix this and this do not fix another because they focused here, are they then neglecting the users affected by those other issues?

I'm sure they're working on new and great things, but some house keeping of low hanging but high value fruit like this issue would be nice.  I'm sure there are other such issues that they quickly could pick off right in a row, and I wish they would.

> Framing the decision to prioritize bug fixing in a way you don't like as 'neglect' is not helpful. Any project will have bugs and every team will fix using a system that will not align with the desires of all members of their user base.

You seem to be seeking some sort of recognition and I must concede it to you.  You have a knack for justifying inaction.

> And, as mentioned above, if that order doesn't fit your desires, you actually have something you can do about it.

As I mentioned above, I don't have time.  Nor really for this pointless discussion, although I hope you got something out of it at least.
",uncivil
4116,175131660,"As someone who has worked in the open source ecosystem for the better part of 15 years, I am frankly fed up with this posture in open source projects. As you have chosen to open up your project for collaboration, you need to provide a street that goes both directions. As people contribute to you, they are establishing themselves as your user base. Whether or not you set out to support a certain platform or not, as your project grows that idea of ""support"" may have to change. Looking at how you advertise dart, I do not see a way you can accomplish your goals without supporting the BSD projects. While they may not carry the same numbers as linux, it is rather self deprecating to reject work that someone has done for you on the claim that it creates more work for you. Frankly, it is confusing and frustrating that some projects at google choose to embrace the open source ecosystem in its entirety, (golang comes to mind, supporting quite a few hardware archs on several of the BSD's), while dart seems to want to limit itself. You have drawn your obvious line in the sand, and I wish you the complete return on your decision.

",uncivil
4117,365265517,"@polkovnikov-ph I agree that this an issue. But there is a certain way to describe an issue in Open Source Community. Using sexual abusive language is not the way to express your opinion.
",uncivil
4118,386800657,"(I) really love this ability to minimize comments on GitHub.. :sparkles:
",uncivil
4119,15118,"Balancing artillery
I'd like to get the stuff I've already tested out of the way. The current balance team is essentially doing everything I already did in terms of making balance changes and testing them.

A lot of time is being wasted doing what I've already done. I've tested my changes in hundreds of matches with great feedback. The only negative opinions I get are from trolls or people who need an excuse for why they suck at the game.

So, first up, ARTILLERY.

These values allow the artillery to remain effective, but not overpowered. Instead of 3 arty destroying a huge infantry blob, you'll 4-6 of them.
Damage vs vehicles has been buffed slightly to compensate for lack of infantry killing.
A direct hit will kill the infantry, but if it lands off to the side, it can take anywhere from 1-4 shots. With a small group of artillery firing, the aoe will make it a lot more effective.

Cost also went up, and it's speed has been slowed down. I think I buffed it vs buildings too, maybe not.

Now, the artillery infantry tradeoff is fair, and for what it lacks in anti infantry, it makes up for by doing roughly 10-20% more dmg to everything else.

vehicles.yaml:

ARTY:
Mobile:
TurnSpeed: 2 (used to be 4 I think)
Speed: 60 (I think -10 points?)
RevealsShroud:
Range: 8c0 (remains same, i think, mightve increased by 1-2 cells)
RevealGeneratedShroud: False
RevealsShroud@GAPGEN:
Range: 4c0
Passenger:
Weight: 4

----------


ballistics.yaml:

^Artillery:
Range: 12c0 (it shouldnt outshoot a v2 by 4 cells, or at all, really)
Projectile: Bullet
Speed: 200 (little bit slower to help nerf vs infantry.
Blockable: false
LaunchAngle: 110
Inaccuracy: 1c256
Warhead@1Dam: SpreadDamage
Spread: 420
Versus:
None: 40
Light: 60
Heavy: 35
Concrete: 50

155mm:
MinRange: 4c0 (minimum range back to 4 cells instead of 5)

",uncivil
4120,373829460,"Save your energy. Lex has rejected this again and again.

Put your overlays as extra quads into your item model, he says.
",uncivil
4121,393350466,"> Please look at this, because @raver119 is still angry I said C wasn't a good language.

That's a bit of surprising statement. I don't even remember who you are.
",uncivil
4122,567498840,"@ivanpopelyshev Oh my god! Man! It's something that I wish for the years! Christmas miracle literally exists!
",uncivil
4123,9203,"why the hell did you haphazardly change the initial value of properties in this commit???
https://github.com/gradle/gradle/commit/dbb85f50bb184cc128949d4eec039b9ed30fc170

why the hell you break my code programmed against gradle 4.10 in the **very first** release after that???

why didn't you respect you own mandates and added a new method `.emptyProperty(Class)` and deprecated the one you had instead of needlessly changing the damn semantics of the API? why was my code was intentionally broken on gradle 5.0 when it should have been good though at least gradle 6.0?

why didn't you even document this brain-dead breaking change in the 4.10 -> 5.0 migration guide here:
https://docs.gradle.org/current/userguide/upgrading_version_4.html#changes_5.0
and could you please at least document it now???

i can't believe you guys, this is completely irresponsible. and don't tell me you needed to do this to support property conventions, you didn't. what a waste of time.

",uncivil
4124,665669513,"I'm sorry to tell you @danasilver but this isnt ""frustrating"" this is a super stupid architecture design...
I dont understand why people working for google have such a problem admting they make mistakes...  everybody does, what makes difference is fix them or not.

i cant even imagine a meeting to present the product:
""Here we have a new tool that will allow developers to set constants remotelly, helping with A/B tests and allowing the developer to change apps behavior without re-deploy.

We will provide a rest service which accepts data in the json format.
And in case developer wants to set some default values he can use a XML/plist""

In my company someone proposing such a frankstein architecture would be fired.

You just told me that if someone has an app in both architectures and want to use the default values THIS PERSON MUST DEFINE EVERY FIELD 3 TIMES... does it sound smart?

> You should only need to define RC in-app defaults once though

this is a wrong assumption, although i agree these values shouldn't change very often, software are LIVE things: they grow, they mutate, they acquire new powers.
Same way new constants are added, removed, or default values might change in a lifetime of any software.
If you were using RC on the innitial development of other firebase services, are you telling me that the default values of 3 years ago would still work for today?


I hate to be rude and also hate to teach people how to do their jobs. but this architecture design of firebase RC is a clear mistake, anyone with a basic software engineer understand should be able to see that.
And this whole text could be avoided if you guys simple had said:
""yeah that was a bad idea, i will try to put your suggestion in a next changelog or add some tool to convert json/xml then json/plist and any other technology RC lays on""


",uncivil
4125,501429582,"> The project is already as inclusive as it gets: everyone is welcome to use it and participate in its evolution by contributing, pointing out bugs, asking questions and helping others.

@lazarljubenovic I believe that, in this case, ""inclusive"" means ~""how welcome someone ***feels*** in the angular community."" The poster is _telling us_ that, in at least one case, someone doesn't feel like the angular community is inclusive. Responding to that feeling by saying, basically, ""you are wrong"" is practically providing proof that the angular community is not that welcoming.

> In fact, I find it fascinating that someone at an Angular workshop was confused. Did the girl really not notice

That sentence reads as a euphemism for ""that girl is stupid"". Again: Not. Welcoming.

A better response would be something along the lines of, ~""You raise a valid concern. At the moment I think that this issue is not a generally applicable because..."".

Ignoring the fact that this issue is concerning angularjs and not angular, this seems to boil down to ""what percentage of the community/potential community might interpret `ng` as a slur."" Personally, I also fall on the side of ""this sounds like an isolated experience that isn't generally applicable."" However, responding this way also provides a clear avenue for @jKittyj, or someone else, to bolster their suggestion by providing more examples or reasons why the interpretation the girl had is actually generally applicable.

It also makes clear that, as a community, we do care about how welcome people feel and our issue is not with the _intent_ of the original post (to be more inclusive and thoughtful), but rather the execution.

Regarding

> I tilted my head in confusion when I read ""ugly racial slur"", because none came to mind

This strikes me as equivalent to someone commenting on a feature request by saying ""FYI, I don't need this feature."" Great, I'm glad you don't interpret `ng-repeat` negatively. If I were evaluating this issue, I wouldn't care how many people interpret `ng-repeat` the way I intended, I'm interested in how many people interpret `ng-repeat` the way I *didn't* intend.

Because of this, this issue strikes me as providing valuable feedback and I would encourage people to surface similar experiences that they may have had.
",uncivil
4126,548440394,"> is neglecting a lot of users by not fixing this bug.

And if they fix this and this do not fix another because they focused here, are they then neglecting the users affected by those other issues?

Framing the decision to prioritize bug fixing in a way you don't like as 'neglect' is not helpful. Any project will have bugs and every team will fix using a system that will not align with the desires of all members of their user base.

And, as mentioned above, if that order doesn't fit your desires, you actually have something you can do about it.
",uncivil
4127,518803934,"I am so tempted to chime in with something more confrontational but I don't think it'll add to the debate so I'll just say this:

- The devs have been very responsive, and have been  accommodating of the many (often mutually conflicting) requests coming in from users. By this token the ""old Microsoft"" assertion seems unfounded and potentially disheartening for the people who have plowed a lot of work in to this.
- This is a beta product, if you expect it to meet all your needs straight away you probably need to realign your expectations.
- Some decisions will be made that won't work in your favour. Many won't work in my favour. However these are educated decisions made in the interest of supporting the average user (not just you), by talented devs who are acknowledging some compromise but are making pragmatic decisions nonetheless. By assuming your needs are paramount, you are potentially dismissing the needs of other users (e.g. WSL users like me who support the sensible decision to align with Gnome bindings and avoid escape sequence characters for default bindings).
- This is open source. If you feel you have the expertise to override their decisions, then you are free to implement changes in your own fork. If you don't have that expertise, you can't reasonably claim that the decision taken is actually wrong. ""It's not what I'm familiar with"" is probably not a good enough justification (in my view).

I won't reply to responses as I know it won't add anything and that I shouldn't have even posted the above, but I couldn't resist throwing my two cents in - sorry!
",uncivil
4128,554519700,"Someone should start a GoFundMe campaign to pay for a lawyer who will
challenge Google all the way to the Supreme Court, LOL

This is unquestionable example of furthering of knowledge offered freely in
good faith

This cannot be prohibited

#Singularity

On Sat, Nov 16, 2019 at 5:33 Krzysztof Woś <krzysztof.wos@gmail.com> wrote:

> Yes and I am fighting mine trying to live a life according to immutable
> belief in better tomorrow.
>
> One can live a life earning less than the fabled Google salary but dream
> of better internet where this sort of nonsense isn’t for a bunch of lawyers
> to decide
>
> A man’s effort to further the way to build software is our birthright
>
> It’s the direct exercise of LOGOS, the Divine Word, the ability that God
> himself bestowed on man: to transform chaos into order through an act of
> speech
>
> In the beginning there was the word and the word was with God and the word
> was God
>
> John:1, I believe
>
> Your CLA is preventing me from exercising my religious belief, a right
> enshrined in your Constitution
>
> The world is full of nonsense because nobody makes a stand
>
> On Sat, Nov 16, 2019 at 5:18 Artem Vorotnikov <notifications@github.com>
> wrote:
>
>> @krzysztofwos <https://github.com/krzysztofwos> IANAL but the typo fix
>> is too trivial to be protected in the court of law. And even if it wasn't
>> it's always possible to simply rephrase the sentence.
>>
>> Regarding the rest of your comment, I do not think it is reasonable to
>> put a man's livelihood in a perilous position just to make a point. One
>> must learn to pick his fights, so to speak. :)
>>
>> —
>> You are receiving this because you were mentioned.
>>
>>
>> Reply to this email directly, view it on GitHub
>> <https://github.com/google/tarpc/pull/279?email_source=notifications&email_token=AAGCHBP3VXRD2PABQE5C4BTQT37Y7A5CNFSM4JNZ2EU2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEEGTBMQ#issuecomment-554512562>,
>> or unsubscribe
>> <https://github.com/notifications/unsubscribe-auth/AAGCHBJTTRPYEEIENCIJHWLQT37Y7ANCNFSM4JNZ2EUQ>
>> .
>>
>

",uncivil
4129,439691390,"@oising

Are you suggesting that some other, faster and more modern renderer was used in Windows XP, Windows 7, and Windows 8.1?

Because in those OSes everything is still working as intended (i.e. the console application is not being slowed down more than 25 times).

Is Microsoft's official answer to reporting a serious performance regression in a subsystem used every day by developers and admins who are managing and maintaining their user base really ""yeah we are aware of it but whether we will fix it and when, who knows""?

That's a rhetorical question, don't bother.
",uncivil
4130,554510954,"Perhaps also ask the lawyers what happens if someone later goes and fixes
that typo. That’s basically stealing my public domain idea, regardless of
your CLA, and then claiming it isn’t because this wasn’t known to you.
Whacky position to be in :)

We need to say no to people who make this world unreasonable

Software wants to be Free
And you can make a stand or be a tool

On Sat, Nov 16, 2019 at 2:05 Tim <notifications@github.com> wrote:

> Closed #279 <https://github.com/google/tarpc/pull/279>.
>
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub
> <https://github.com/google/tarpc/pull/279?email_source=notifications&email_token=AAGCHBLJNYQ67TUTZKQZ2WDQT3JFFA5CNFSM4JNZ2EU2YY3PNVWWK3TUL52HS4DFWZEXG43VMVCXMZLOORHG65DJMZUWGYLUNFXW5KTDN5WW2ZLOORPWSZGOU4L4MBA#event-2803353092>,
> or unsubscribe
> <https://github.com/notifications/unsubscribe-auth/AAGCHBNVDOA7R3L2O7CSCS3QT3JFFANCNFSM4JNZ2EUQ>
> .
>

",uncivil
4131,417056940,"By releasing a major license change as a minor version bump and using an incorrect license in the license field? You're screwing Lerna, not the companies listed. Ignoring you politicizing something that has no business being political (especially as a former Facebook employee... come on), literally every company listed is going to update their packages to pull from https://github.com/LernaOpenSource/LernaOpenSource and go back to work. Meanwhile you're getting massive community backlash that's only going to continue if you decide to be a child and inappropriately release this as a minor version bump or with the MIT license.

The best thing feasible for Lerna at this point is you leaving the project. But since that's not going to happen since you apparently enjoy your soap box, the second best thing is everyone moving to a fork of the project without a politician having any control.

The irony is I 100% agree with your politics, but this is not the place to express them.
",uncivil
4132,524577476,"What an awful and misleading name for a eslint config. I wonder how many poor newbs have thought this is official.
",uncivil
4133,544718313,"I'm sorry my fuckups have caused you pain. Please stop berating me, now.
",uncivil
4134,513466307,"> And...? :-)

Then you should already know that things that *appear* trivial can, in fact, turn out to be intractable, and being combative about that helps no one.

But anyway, in this case TS indeed has a mechanism (overloads) that can solve the problem, see above.
",uncivil
4135,351097172,"Really !!! ""nobody seems to bother to explain what exactly Flutter would gain... blah blah blah"".
Haven't you read this thread fully? Is your attention span greater than your JSX knowledge?

You guys are suffering from NIH syndrome (Not-invented-here). ""Good artists copy; great artists steal"", mediocre artists, well, behave like you.

Just the fact that supporting JSX is relatively simple, and it will tremendously help attract new customers (React Native mobile developers) to the platform, makes it a no-brainer which you guys fail to see. It doesn't bold well for the platform.
",uncivil
4136,631033205,"> You find the comparison between a city in Hawaii and MauiKit ridiculous just like I find your comparison between an the Maui abbreviation and MauiKit ridiculous

The project is called Maui, has been called that for a long time, and is even stylized as ""MAUI"" on https://mauikit.org. So yeah, there's an obvious naming clash here.
",uncivil
4137,702360106,"@citizenmatt ""we'll make an announcement when ready""
",uncivil
4138,567424403,"Also there was some recent effort to associate snowflake and Santa with its red hat to drug consumption so please don't talk about Its red hat and snow symbol in the same thread. :smile_cat:
https://www.vice.com/en_us/article/jgee9k/amazon-is-still-selling-festive-christmas-sweaters-showing-santa-doing-cocaine
",uncivil
4139,650190816,"@thecp seems like that's problem in USA only, we're respect all races in Ukraine for example, doesn't matter where are you from or etc.
So you need fix it in you county, and do not force your problems to all world!
",uncivil
4140,500969741,"Running into this issue again and it sucks. Please guys, this issue has been open for almost 2 years now and for people who really use ansible-vault, this is a major pain the butt.
",uncivil
4141,567694339,"> Relax and take your medication. The grass isn't greener on the other side...
>
> // +10 year Java master & former frequent linux user

If you're comparing the development products of one of the largest corporations in the world to those developed by volunteers, then you've made my point better than I have. I have over 25 years of development experience from 80x86 to C++ on many different platforms and the grass has always been greener! During the 1990s, we had Think C and Metrowerks CodeWarrior on the Macintosh which were far more productive and pleasant than what we even have today. Microsoft was at least smart enough to incorporate those features into VB and Visual Studio.

Microsoft's development tools have never been great, but just ""good enough."" The trend over the past years, however, has been a downward spiral. Visual Studio has become unbearably slow no matter how much computing resources you throw at it.  The documentation is a labyrinth of dead ends full of outdated information and broken links. Microsoft is no longer vested in providing useful and productive GUI-based development tools. They're leaving it to the open source ""community"" who believe in UNIX's user-hostile CLIs and configuration files are the only way to go, hence VS Code.

Microsoft has never had much of a vision. It's like a fat, old Elvis who still rides on its monopolistic past. As the PC fades as the primary computing platform, so will Microsoft. Apple, a company left for dead back in the late 1990s, has leapfrogged Microsoft through product excellence. Apple dominates the mobile platform, while Microsoft failed spectacularly in the mobile market and the internet.  Even Microsoft's own top developers, including Miguel de Icaza, are shamelessly seen using MacBook Pros. That speaks volumes about Microsoft's quality.

So I guess I need to be smoking the same grass you're smoking in order to medicate my way out of seeing Microsoft's mediocrity?  No thanks!
",uncivil
4142,541407512,"It is **not** expected _by users_ as you can see here in this thread.

Maybe _you_ wrote it this way, or studied the source code intensively, then of course you expect to behave it like that, but _users_ of the Sprite Frame property obviously don't expect this behavior at all.

How should they expect this behaviour? What would be the underlying intention of a design that allows spritesheets to be extended only vertically, not horizontally? If that's a feature, it's the most stupid feature I've ever heard of. This ""feature"" effectively **breaks** animation as demonstrated in the minimal project and the thorough description of the original post.

If you don't want to call it a bug, it's very bad design at the very least. What ever you call it, it really needs fixing.
I therefore once again ask like @jaacko-torus for this issue to be reopened.
",uncivil
4143,428192109,"I don't even understand what the problem is and you don't seem to be interested to explain it.
Every method to send HTTP requests allows you to set header and data.
StackOverflow is the right place to ask this kind of question.

",uncivil
4144,133676255,"To be clear, these previous posters are saying that being somewhat
comfortable with the Python language is a prerequisite to using
scikit-learn. You have missed some quotes around a string. This shows great
unfamiliarity with Python (and a characteristic of most programming
languages), and scikit-learn is probably not the best place to start.

On 22 August 2015 at 18:04, MartinLion notifications@github.com wrote:

> On 22 Aug 2015 08:33, ""samira afzal"" notifications@github.com wrote:
>
> > HI all,
> > I wrote the following code:
> >
> > import pandas as pd
> > data= pd.read_csv(open(home/maxinet/Desktop/1.csv))
> >
> > and i got this error:
> > File """", line 2
> > data= pd.read_csv(open(home/maxinet/Desktop/1.csv))
> > ^
> > SyntaxError: invalid syntax
> >
> > could you plz guide me.
>
> I recommend you finding another tool where you can work with easily without
> headache yourself with this particular one. This is what I did myself.
>
> Good luck
> Martin
>
> > —
> > Reply to this email directly or view it on GitHub.
>
> —
> Reply to this email directly or view it on GitHub
> https://github.com/scikit-learn/scikit-learn/issues/3808#issuecomment-133650026
> .

",uncivil
4145,567454718,"So, interesting to see that this issue is actively watched but the only thing what happens, is that two posts were deleted instead of instapromptu removing the hurtful snowflake from the application, like the other thing.

I'd be really  grateful if that the correct reaction will be delivered like the other one, snowflakes do hurt and sting in the eyes, I won't be able to sleep if I see all day this hurtful symbol of pain and climate oppression in my IDE.

",uncivil
4146,703094742,"> > Begging Microsoft to make things like this distracts them from improving core functionality. Microsoft doesn't have to own everything dotnet.
>
>
>
> Most of full stack framework out there has official package for crucial things like this (say laravel). Coming from other communities like php, node, etc, dev can build and experiment with everything totally free. This makes it harder for newcomers to learn aspnet core without the support from the community or microsoft officially
>
>
>

It's just one project changing a license.  Yes, it's popular but there are alternatives.  This happens in all ecosystems. They also have paid for things too.

The sky isn't falling.
",uncivil
4147,735761737,"How have I been using Terminal without this feature for so long? I'm using plain old terminal until we have it!
",uncivil
4148,5395,"I've seen several people asking questions about w2v on chat, and there are many open issues, and I wonder whether you should deprecate w2v and point people in the direction of fastText.

fastText has many benefits above w2v: subword correlations, generate vectors for new words, generate vectors for sentences, extremely fast implementation.

Just seems pointless to continue supporting something that uses so much developer time.

",uncivil
4149,390071106,"So cups-pdf is HP's problem too? Is there any Linux software you can name that interfaces with CUPS correctly?

It would help to have an answer to this question, relating to the configuration of face-up printers:

""Can you point me to the place in the documentation where you say which of lpadmin/lpoptions/PPD solutions is expected to make the printer work correctly with all CUPS clients?""

",uncivil
4150,485174468,"I would direct people to actually read the bug report before commenting. Somebody please lock down this issue.
",uncivil
4151,397843553,"""Sorry to say, that I am totally pissed off from this worst programmed piece of software/plugin I have ever seen.""

This seems unnecessarily hostile, especially given that, in your own words, - ""I shouldn't complain about software I had nothing to pay for""

Have you considered simply reporting the issue, without any of the assholery? Ultimately if you do think it is the ""worst programmed piece of software"", you do have other options. Can write your own, can use something else, or, now this is my preferred approach generally, to help the maintainer improve it without being a douche.
",uncivil
4152,8921,"Hello!

Umm, we don't really care for icons and web animations... Instead, when are you going to add REAL support for streaming?? Meaning, Dolby ATMOS, DTS:X, Dolby Vision, etc?
Microsoft beat you to it, with their new Edge browser. And to be honest, I love it MORE than Chrome now!! It's awesome!!!!!!!!!!!!!!!!!!!!
Oh, and not to forget: give us the option to switch internally between the Java Script Player and HTML5 Player, for streaming as well? Hmm? When?

I am dead serious, WHEN??? You are not adding/doing anything useful to it, nothing beneficial for the end user.
Please DO actual relevant and useful stuff for/with it! I'm almost 40, and I bet I'm gonna die BEFORE you even get the idea to implement all of this!!! Pfffff................😭😭😭💔💔

",uncivil
4153,567455431,"Some guy in Microsoft HQ is sweating right now.

Although this is 100% deserved.
",uncivil
4154,513537347,"> So why are you being combative?

So feels like it is the other way around to me. 🤷‍♂
",uncivil
4155,485117414,"Why would I post this on the community site? I'm experiencing this problem on the travis-ci.com website??
",uncivil
4156,548361279,"@WrongBit I have no desire to provide a professional response based on your attitude. You really need to take a step back and consider how you present yourself publicly.
",uncivil
4157,822085425,"> Thanks for understanding.

No, I don't understand.

Any software developer doing things exactly the same as 10 years ago is a **bad** software developer, let alone 30 years ago.

It literally takes less than 30 minutes to learn git. That's no excuse.

30 minutes for one person so that thousands others don't have to run through loops is a no-brainer.
",uncivil
4158,551988139,"@ohjames, to be honest, this response is borderline unacceptable and I don't even know what to reply. Wow.

Can someone reopen the issue?
",uncivil
4159,631031794,"So you think of a Hawaian city when reading ""Maui"", but not when reading ""MAUI""? Really?
",uncivil
4160,631046549,"What do you expect, providing some real arguments against nonsense or offending replies like ""you're all mad"" or ""it's the others' fault, they need to rename"" (aka ""we are Microsoft (related), we are bigger, you need to comply"" or, my favorite, ""same name is not a problem at all"", pretending that confusion was not an issue...

@dansiegel great strategy, being offending once you run out of arguments! Really! Is that how Microsoft's unpaid marketers aka ""Microsoft MVP"" are chosen? How can you seriously accuse others of like, thinking in this old ""it's a big evil company"" way (which nobody really has), while yourself being extremely off-putting towards the open-source community? It makes no sense...

Remember, Microsoft recently admitted [they've been on the wrong side of history with regard to open source](https://www.theregister.co.uk/2020/05/15/microsoft_brad_smith_open_source/). You have *zero* reason to belittle this or _any_ other open-source project. Especially since this one's also open-source.
",uncivil
4161,406782918,"> And apparently I ""own"" the FBXLoader

So in your opinion you're free to mess it up, isn't it?
",uncivil
4162,778675119,"Seeing this issue as well, its very annoying.
",uncivil
4163,373840402,"Threatening to coremods shit because you haven't spent 10 mins looking into other solutions is not the way to get things added to forge.
",uncivil
4164,567431858,"Please don't laugh. This is a serious issue for me. I want to force removal of the feature for everyone, because it hurts my feelings. And no, don't make a toggle for it. It would remind me that a death is still there, but not visible.
",uncivil
4165,631034842,"How is having two product with the same name and same basic scope (multi platform framework) a non issue?
",uncivil
4166,397839585,"@Gibson85 Have you looked up what `spawn * ENOENT` means?
It means that it couldn't find the command/executable in question, so this doesn't really have anything to do with the extension itself.
You could argue that unhelpful error messages are a kind of bug, but that is another issue.

So, instead of ranting here, maybe you should try to find the cause of the problem and/or open a PR that fixes this kind of issue, if necessary.
I don't have anything against bug reports, but the above is really sad...
",uncivil
4167,622285543,"> I don’t appreciate you expressing it by heaping it on top of everybody I work with

_looks at the top of the page_ yup, still says Microsoft, as it does in your handle. You represent your organisation, and my criticism is directed at your organisation. This isn't the first time Microsoft is forcing ""good ideas"" down my throat - if it was, I'd be happy to ask you about them directly, but this is just another data-point in a long history of similarly user-hostile actions.

Having said all that, this ""feature"" is an exceptionally bad idea, that breaks all conventions of software and user interface design. Moreover, the initial impression from a user perspective is ""this is broken. I performed an action, and now this action is undone."" There is no universe in which this is OK, and if the decisions on this project stop with you and your PM, I'd strongly recommend you both find some additional learning on this subject.

From a software design perspective, there are many possible ways in which you could have chosen to ensure your configuation generation component works together, this one is exceptionally poor.

> We want to make sure they're found, but also that the user is clued into the fact that they can be customized

The irony of this statement is significant. You are literally clueing the user in to the opposite. ""I performed a customisation, and it is undone. This doesn't appear to be customisable""

Finally, it is a very safe assumption to make that the user of this software is somewhat technical. I sincerely hope that your persona's don't include ""Rob is a greengrocer, and uses his computer to browse the web and do his accounts for his shop. Rob also plays a game from time to time. Rob als has the strong desire to download custom alpha shell/terminal software to pimp up his command prompt"". In other words, your target users can safely be assumed to be a bit more technical leaning. At the end of the day, you are expecting the user to edit a JSON file manually to modify settings.

In the context of the more technical user it would also be safe to assume that that when a piece of your default config (that ships with your package) has gone, and that this is a user action.

As I said, the motivation for this misfeature (it comes across as an ad in disguise) is flimsy at best., and doesn't give the impression that this project has the benefit of some adult supervision from time to time.
",uncivil
4168,417885210,"@bkaradzic I never said anything negative about BGFX itself, only in the context of Godot.

The point of the discussion was mainly that, given two render pipelines need to be written anyway, using BGFX is not an advantage or solution regarding to that. You answers completely missed it.

For the other answers, I was not questioning whether BGFX was high or low level, or whether it can be debugged, or anything else. The point was simply that _it is_ added complexity (which is undeniable) for an use case that is redundant and provides no advantages **_in the context of Godot_**. As this added complexity does not solve our problems, there is no justification to going for it.

Apologies, but I think you are being overly defensive when the whole argument was about Godot, not BGFX.

",uncivil
4169,567455706,"His name is **Christian**, that must be a troll account, too good to be true :D
",uncivil
4170,531972571,"As I stated, there is not enough time to duplicate all CI builds and to fix all the bugs that would get uncovered from there. And clearly this is not an issue that can be solved overnight.
",uncivil
4171,398276051,"Too bad that you do not consider this rude, @slandelle . If you are not willing to spend your time it is your right.  I let Gatling community know that Gatling exhibits strange behavior in the presence of other libraries, and you @slandelle do not care.

It is OK too, it just not helpful to make false statements like: 'works for me' and 'you messed up writers' because you did not bother to run the repro-case following very simple instructions.
",uncivil
4172,728624524,"Reading LDM and then I still don't think it was the right direction of decision. I don't think we need to care about BCL at all

The first thing we would do with top level function is naked `Main`. Everyone will start using that. And then every function for using with `Main` until we really need to use class or struct. At least it would be shared in the same assembly or namespace. It would never be `minimal usage` at all because everyone will start using it from the start of the project. It make prototyping faster

If there is any concern about collision I think it would be the same as introducing new function in static class then use `static using`. If that was not the concern this also should be none

As I was proposing. We can treat this feature as just automatic assuming default namespace and default class name of the assembly and just transpile at the compile time

Actually, this feature real usage are most likely internal function so it just add convenience to development time. But we are less likely expose it, we would always have `using` and `using static` for that. So it should not concern about BCL at all

I think this would be another wrong decision as generic from C# 1. You underestimate our real usage
",uncivil
4173,585381474,"@terrajobst

> But how much fun do you think it is to hear that someone you respect tells you that you don't know what you're are talking about?

And if you really do not know what you are talking about then what? You shield yourself in the code of conduct and go OMG, how could people dare telling me that I'm wrong? Or perhaps you try to do better next time and avoid the not so fun part of messing up? Working for fun doesn't imply that you get to do whatever you want and that there are no consequences.

> Code reviews and PR discussions are often controversial because people care.

There was no real controversy here. I asked a question and I was expecting a reasonable answer, especially considering that it wasn't me who started this. Instead of an answer I've got some gibberish that tries to pass as code review or whatever that is supposed to be.

> Being respectful doesn't mean not making mistakes, it means unwillingness to learn from them and/or doubling down on them

It's exactly this unwillingness to learn from mistakes that brought us here. So now you're trying to explain to me how persistent shoot from the hip style commenting is respectful or not? Frankly I'm not sure what exactly it is. Let's just say that it is distasteful. Feel free to continue to go down this path, the only thing you'll achieve is to dig the hole deeper.

> And I for one am not willing to tell people to suck it up.

Yet here you are, telling me exactly that.

",uncivil
4174,372407740,"@ericmorand Please take a step back and consider that this is an entirely volunteer-run project. We're not contractually obligated to work on every bug and answer every question, seeing as we simply don't have enough resources. So our apologies if some things take too long, or don't end up happening, but it's wrong to blame the maintainers for this.
",uncivil
4175,631054804,"@mirkobrombin projects do have value based on the value that they provide. The most notable measure of that is the community around that project. You might not like hearing it but MauiKit doesn't seem to have a community. It looks like a side project. I asked before `Can you name 10 large companies that have adopted it?` and you didn't or couldn't.

MauiKit whether you want to hear it or not has no fundamentals of what I as an Open Source Author and Maintainer would consider signs of a healthy project. I do not see a community around that project at all. I do not see adoption within the enterprise. What I do see is a bunch of people who want to complain but probably never have used Xamarin and probably never will use Maui regardless of what it's called.
",uncivil
4176,389954289,"Michael, I can submit the bug elsewhere but do you really mean to suggest that I need to know about HPLIP and cups-filters to understand why three different tools process the options I've set (using your software) in three different ways? What about the other questions I asked? You don't think any of your documentation needs to be fixed? Can you point me to the place in the documentation where you say which of lpadmin/lpoptions/PPD solutions is expected to make the printer work correctly with all CUPS clients? Who takes responsibility when other projects don't know how to interface correctly with your software?

Can you give the HP people a hint on how the HP filter would need to be modified so that it respects the `lpadmin` setting not just with Evince print jobs but also with jobs submitted by Okular and `lp`? Or how can Okular be modified so that it prints correctly on inkjets?

Is there another brand of inkjet printers, which works correctly with CUPS?

What about cups-pdf, I've noticed that when printing to the virtual PDF printer then `lp` doesn't respect the lpadmin setting, Evince doesn't respect the lpoptions setting, and Okular doesn't respect either. Is that still an HP problem? Are you ever grateful to receive bug reports about your project?

",uncivil
4177,779485106,"@Hixie that would require that I start digging into the Engine code what I can't do. My proposals were pretty concrete here.
Still I wonder why neither my proposal of shipping MSL nor the proposal of an optimisation run got a response from anyone from the team.
I don't see how creating small isuues for that would help.
I'm just trying to help.
",uncivil
4178,373850681,"It's pretty useless to complain about someone not looking without pointing them in the right direction. I have searched the issues of this repository without finding anything. There is literally no reason to assume or accuse that people haven't looked for something just because they didn't find the solution. It's excruciatingly abrasive and dickish and impedes fostering a community that actually wants to contribute to a project.
",uncivil
4179,387752449,"@cbazza I don't want to argue against the feature but comments like ""if you don't do x then horribly y will happen"" are just ridiculous.
",uncivil
4180,784610329,"> But this situation is worse when spaces have been inserted.

I'm not sure i agree.  Spacing allows thigns like alignment to happen in a very flexible fashion that is independent of whatever tab settings user have.  It may be worse for you, but better for others.  Hence the dilemma :)
",uncivil
4181,596159731,"@lasjorg
i dint yet started the insults. its called personal observation. look it up.

1 what consoles and what modes? (did you actually read the ''To Reproduce'' ????? i have the feeling you didnt)

2 i don't have firefox at all. never had.
",uncivil
4182,816918497,"> Which peer dep RFC are you referring to? (peer deps have always been semantically required)

This isn't the time nor place to have this debate with you once more.

> since it would have greatly fragmented the package ecosystem if many package authors had gotten the wrong idea and assumed peer deps were optional by default.

You're incorrect, and I don't appreciate trying to have the last word on this argument after I told you I don't wish to debate it.
",uncivil
4183,160480157,"> can buy a 16GB USB Thumb drive

that's not a good excuse for doing nothing, not everybody like you github employees (I heard most atom developers are ?) has a macbook for each, and there are many ones still using old computers, ...

",uncivil
4184,600613713,"@noemata You're wasting a lot of our time slandering our competence and I will likely lock this issue and you may be banned for violating our [code of conduct](https://opensource.microsoft.com/codeofconduct/) if you continue. Please consider yourself warned. Please read that code of conduct before submitting anything further to this or other Microsoft OSS repos.

By publishing and sharing StreamJsonRpc with the world, Microsoft hasn't committed to supporting it in every use case. Microsoft Support is something agreed upon between Microsoft and individual customers on a per-product basis. StreamJsonRpc is only officially supported in contexts where it ships with Microsoft products that are under support agreements. In other words, we are not obligated to make it work for you in .NET Native and have never made a promise that we would do so.

Just because Microsoft makes two technologies does not guarantee that those technologies can work together. And just because I work at Microsoft doesn't mean I have any deeper understanding of the .NET Native toolchain than you do. Microsoft is a big place and one team rarely has unique insights into what another team/product is doing.

Further, you have yet to share any evidence that this is a StreamJsonRpc flaw at all. MessagePack clearly has issues on .NET Native, but StreamJsonRpc's support for MessagePack *as an option* hardly means that we're responsible to make MessagePack (a 3rd party OSS library) work under every possible Microsoft runtime. I expect you can use StreamJsonRpc on UWP just fine in its default configuration, although I haven't tested that nor are we promising support for that.

Now if MessagePack proclaims support for .NET Native, and StreamJsonRpc *still* doesn't work on that platform, then re-opening an issue on this repo with the specific error you're seeing is welcome and subject to our limited capacity to offer free OSS support we may take a look at the problem and suggest how you can make it work or possibly offer a fix.

It's not just design choices -- there are simply features that .NET Native doesn't support. Some of these reasons I understand and some I don't. But this library does not nor I imagine ever will limit its feature set to what's available on the least capable of Microsoft platforms. For example we support dynamically generated client proxies, which is a great feature that I don't know if it can be used with .NET Native (even without MessagePack). Given dozens of applications and millions of users benefit from this feature, we wouldn't remove it or have suppressed its development just because it can't ever work on a platform that no one even asked for support for before now.

So as I stated before, I'm closing this issue because there's no reason to believe a fix is required in this repo. We will keep the .NET Native issue on messagepack open because we expect code fixes are required in that repo.
",uncivil
4185,87383,"Coding productivity has decreased enormously since the removal of the Santa hat.

Please make it your top priority to bring Santa hat back.

",uncivil
4186,524573808,"Ask for PayPal/patreon donations in a single line, sure, but what the hell is this? A whole box in your terminal dedicated to promoting other companies? No thanks.

NPM should ban this type of promotion. If this becomes a trend, you're likely going to get all types of promotion for donation channels banned from package managers like this.

YOU choose to spend your time on this project. Stop taking money for something that should be free and open.

--

Turns out this has happened before: https://github.com/zloirock/core-js/issues/571
",uncivil
4187,272192826,"What I mean by that is, I don't have to write a thousand page how to and hand it over for someone else to use the API. So, if I say to another dev hey the API you need for that is at this address I can basically end the conversation at that when using WCF.

Phillip, are you saying you don't like productivity? Do you not like the idea of inexperienced devs? Are you a ""I am the greatest dev alive"" guy? because if you even pause for a second to contemplate yes to any of those things you have a very rude awakening coming. It would also have been nice if you gave some actual reasoning behind your comment, not just flaming.

I personally have taken on the task of creating a compatible library which handles the basic WCF functionality and written the service interfaces into a shared library. While not as flexible as WCF, it is in fact a lot faster than a full implementation. My internal time to return a call is now less than 1ms (net rx to tx of simple message), which WCF can't compete with. This is all nice and dandy, however I still yearn for WCF.

",uncivil
4188,728749270,"Because he's continually said that this proposal had been rejected; he's
said why it was rejected; and thus all this complaining on a rejected issue
is just noise.

If you want to talk about it further, do so where you have been asked to
go. If you don't want to do that, you obviously don't care as much about
your proposal as you seem to.

This isn't your language. If it was, you'd be free to make all the changes
you want, whatever the consequences, but it isn't. I've seen you get upset
and belligerent before when a proposal didn't go the way you wanted - it's
getting old.

Please stop. You've been given advice on how to continue. Whether you did
that or not is entirely up to you, but please stop moaning here, as you
have been politely asked to do multiple times...

On Tue, 17 Nov 2020, 04:48 Thaina Yu, <notifications@github.com> wrote:

> This is as unreasonable as the reasoning about minimal usage. Now you
> don't even have reason why discussion should be there
>
> —
> You are receiving this because you are subscribed to this thread.
> Reply to this email directly, view it on GitHub
> <https://github.com/dotnet/csharplang/issues/3117#issuecomment-728683434>,
> or unsubscribe
> <https://github.com/notifications/unsubscribe-auth/ADIEDQOGQ7DXC2W4QZ7AZIDSQH6AZANCNFSM4KJ2KCKQ>
> .
>

",uncivil
4189,395335257,"@jlukic I'm sorry but I have to be this guy... The fact is that you left this repository unanswered for two plain month. Issues where opened and closed by the bot without any reponse, and nobody but you can do some critical things (merging pull requests, publishing fixes...).

I can understand that you don't have time to do SUI technical stuff, and I can understand your desire to make SUI a web standard and a long goal life. But you MUST understant that without repo's activity people will not be interested in SUI anymore, and you'll try to find funds for a dead project...
",uncivil
4190,372400893,"> There is nothing in Jekyll’s code that can be changed to fix this issue; the fix will have to come from Rogue.

That's not my point. You are the one using Rouge to implement a feature that you advertise explitely on your docs! That's your responsibility to take care of things that don't work as expected in the dependencies of your project. As a consumer of your product, I expect it to work as advertised:

https://jekyllrb.com/docs/templates/#code-snippet-highlighting

You are advertising syntax highlighting, you are supposed to deliver! And if you don't, you are supposed to take care of whatever is needed to have your product work as expected.



",uncivil
4191,87389,"Are you happy @Christian-Schiffer? Your behaviour offence a lot of people around the world.
I think you must apologize to these people and @egamma must do it too.

**UPD#1:** Christmas, like Hanukkah, is a great time of the year. When people give each other a little love, warmth and kindness. Trying to be better than they were during the year. So why spoil this wonderful moment of world peace with unfounded accusations, old insults and other unpleasant things? I don’t understand, and you?

Assign:
https://github.com/microsoft/vscode/issues/87268
https://github.com/microsoft/vscode/issues/87386


",uncivil
4192,416816092,"@jwcrawley: So what? Maximal open source permissiveness is not automatically correct and just. It's just one option.

And no, the terms are pretty clear, I suggest you read more carefully: ""The following license shall not be granted to the following entities or any subsidiary thereof."" It says nothing about people giving money to e.g. Microsoft or using Microsoft products.
",uncivil
4193,702295386,"> We need a new free option, this is a core component and cannot be outsourced to 3rd party companies.

If you've been using IdentityServer all this time, you've already been depending on a 3rd party company. OSS software isn't about other people doing things for you for free - either roll your own, pick another technology, or pay the bill.

If you can't afford $1500 a year for IdentityServer4 to manage something as critical as identity for your business applications, drop them a line and let them know - pricing software products is a complicated business.
",uncivil
4194,511266162,"> This is not the level of security awareness I expect Microsoft

I don't work for MS. Your tone is derogatory.

Your software (Norton) has established a false positive in it's threat detection. Please work with the software manufacturer to establish a resolution on their part.

There is nothing Microsoft or anyone else can do if a piece of third party software on your machine malfunctions.
One solution is to use Windows built-in threat detection tools instead of the unreliable Norton software. I am actually quite shocked that Norton are even still in business. Their AV and other ""Security"" products have been malfunctioning and underperforming for well over 20 years.

Because vcpkg is open source, you can modify the source code any way that you wish once you have obtained a copy locally, so I'm unsure what else to say other than it would appear that the software Norton have sold you is not providing you value for money and is also causing you frustration instead as well.
",uncivil
4195,24294,"## I'm submitting a...
Bug report

## Current behavior
Change Detection is not working with asynchronous route change.
After route is changed - change detection in any component linked to a route is not firing. Method `ngOnInit()` is not launched too, its lauched only after any interaction with a component (form input, etc.).

## Expected behavior
Change Detection is working with asynchronous route change.

## Minimal reproduction of the problem with instructions
Sample:
https://stackblitz.com/edit/angular-tqcthi

## Environment
Angular version: 6.0.3
<!-- Check whether this is still an issue in the most recent Angular version -->

## Browser:
- [*] Chrome (desktop) version LATEST

## For Tooling issues:
- Node version: XX  <!-- run `v8.11.1` -->
- Platform:  Windows

## Others:
typescript: 2.8.1

## Comments
It's working if Observable from `this.auth.logIn()` convert to a promise, like this:
```typescript
this.auth.logIn() // returns Promise
.then((result) => {
this.router.navigateByUrl('myApp');
}).catch((error) => {
this.router.navigateByUrl('login');
});
```
But I don't want to use promises, I want to use the Observable! Why It's not working? >:E There is no objective reasons for that.

",uncivil
4196,393350208,"@AlexDBlack Please look at this, because @raver119 is still angry I said C wasn't a good language.

(Btw, C is a fine language, just not something I use much or personally gain much utility from.)
",uncivil
4197,810043177,"Now that Flutter Web has gone mainstream, this seems to resurface again. So, let's put it straight, with the largest, boldest letters: **THIS IS NOT A FLUTTER ISSUE, There is no Flutter solution or workaround and never will be.**

If you use a web service, you have to abide by CORS rules. Check out the web service to see how they want you to do it. If it's your own server, set it up properly. **Flutter has nothing to do with it.** While you might be able to disable CORS as described above for yourself in **debug**, there's absolutely no way to do it in **release** for your users. Simply impossible and would be so dangerous no browser vendor would ever allow it.

(For a simple description: CORS means that the web service you try to use has the ability to decide whether it accepts and handles incoming requests from your web app. Obviously, if it refuses to serve you, your Flutter app cannot force it to do so because the browser it runs in will enforce these rules, no matter what you do. So, you have to look around and see how the **web service** you want to use proposes to handle the situation. If it's an established web service, there will be a solution because CORS applies to every one of their API users, not just Flutter ones.)
",uncivil
4198,416809307,"Curious: Do ""parents"" who drag their children across the desert with the express intent of illegally entering the United States have no share of blame for what happens to these children?
",uncivil
4199,12431,"Currently IPython uses `~/.ipython` which just clutters people's home directories and makes things like backing up configuration files much more hassle than it should be.

This was last discussed more than five years ago and should be discussed again. Points made at that point in time frankly, don't really hold up. It is more consistent to follow platform specs, people learn where to look first. Secondly, for support reasons, you don't really have to ask what platform they're on, just mention the three paths in one sentence, it's actually rather easy.

",uncivil
4200,631044353,"@dansiegel Are you an _official_ Microsoft or Xamarin representative, and if so, is this the official position of your company?.
",uncivil
4201,524579152,"I don't install npm packages for entertainment. I'm working. Deliberately inserting ads into my workflow in the hope that I'll stop working and go screw around on the web and maybe buy something is absolutely predatory.

@feross should be ashamed of himself.
",uncivil
4202,735686165,"Knowing that this is possible my life will not be the same without it
",uncivil
4203,322844427,"Look, you are mixing everything I say and this conversation is going nowhere. In legal terms you are ""Badgering the witness"".

If you are really interested in learning why JSX is hot, just google for ""react tutorial"" and notice that for the past 2 years all articles on React use JSX. The original way of creating component hierarchies in React (which is equivalent to the current way in Flutter) is never mentioned again because JSX became the preferred method (best practice).

https://facebook.github.io/react/tutorial/tutorial.html
https://facebook.github.io/react-native/docs/flatlist.html

Another interesting thing is that Typescript has adopted JSX also:
https://www.typescriptlang.org/docs/handbook/jsx.html

You failed to grasp that XML parsing (with some extra code to skip '{}' properly) is orders of magnitude simpler than fully parsing a programming language like Dart. That is a fact. You are assuming that tool builders will use Dart on their development, not the case, Intellij most likely is using Kotlin and Java on their IDEs that supports Dart (they are a special case because they specialize in language parsing; everybody else will struggle to fully parse Dart from another language).

What I like about putting XML inside another language is that it provides a cognitive separation between the two because XML is very distinct from programming languages. Just scrolling through the source file you can easily see what is code and what is declarative markup. Can't accomplish that with dart code pretending to be markup.

Stop nit-picking things that are not fully specified. All your doubts have answered for it just learn more about how that was handled in JSX. I just don't have the time for this here.

",uncivil
4204,374159697,"@zoechi, don't cry, contributor, you are not blame that you are into that sh*t
",uncivil
4205,822584372,"吕海涛 : When looking for information about Vim, the place to look is
always the built-in help. Not Google, not the manpages, not the github
metadata, just the help. In this case: :help credits

Best regards,
Tony.

",uncivil
4206,631035063,"You can be mad all you want, but let's be realistic here... this project you're fighting for so passionately, doesn't have as many stars as I have thumbs down for telling you that you'e being ridiculous

![image](https://user-images.githubusercontent.com/3860573/82369702-4b10ed00-99cc-11ea-8090-18139fe8d746.png)

",uncivil
4207,428186863,"@zoechi whats the problem to answer this question? Thats an issue for help me writing my app. Thats a topic in your issues
",uncivil
4208,809571317,"@votdev it is sad how fast you were to say Salt is all wrong and how protective you fet about OMV.

You still try to push Salt to adhere to OMV data format, while common sense says it should be otherwise.

Salt users would not suffer from it. OMV users would.
Demanding PR from OMV users like me is funny when you did not make any PR to Salt, or maybe i am wrong and you did.

So, back to:

https://github.com/openmediavault/openmediavault/issues/566#issuecomment-809541057

The intention was and is to make OMV work with disks users insert.
Without forcing them to go ssh sudo.
So simple.

You make it look that making OMV ""just work"" is bad goal.

> Why the hell should escapeshellarg be called here?

Because that woul be consistent with bash/Salt data format. But i alreeady said it was kneejerk impulse, so you eems to be crashing through door wide open.

> The function is doing exactly what you are suggesting, keep data raw/verbatim/unescaped within OMV

Some we are on the same page here. You blaze of ego is called for.

Since eysterday i was asking you to show me at the se
ems between OMV and Salt, the exact borderleines, didn't i?
I am glad you seem to did so above, https://github.com/openmediavault/openmediavault/issues/566#issuecomment-809529126

And when i showed those links, i commented upon them.

`Salt is based on Python, not PHP. The code you're ranting about never runs in the Salt context.`

I never said so. Both Salt and OMV are ""black boxes"" with some data exchange. And i was asking you to point me to the raw places of exchange and raw data being exchanged, didn't i?

Yesterday i spent hours looking into Salt code and patching it along your suggestions.
First i took your suggestions as correct and thought through. And just followed them. An then had to undo it all.

Now you imply it was your time wasted not mine.

That `Example SLS:` - many times from yesterday i asked you how can i reproduice this activity from bash command line.
For example above - https://github.com/saltstack/salt/issues/54508#issuecomment-808875885
You kind of answered by showing PHP code for SLS generation - after many requests and hours.
But you still not answered how to trigger that action from bash.

I asked you yesterday how to make OMV code trigger that action of Salt, allegedly buggy Salt.
And you refused to help me doing it.
https://github.com/openmediavault/openmediavault/issues/566#issuecomment-808955077

```
What can i patch in OMV5 to make this notification gone?
Why do you want to know that? What do you expect to improve?
```

You made me look into Linux kernel i am not familiar with, at the same time you are not very willing to point me to specific OMV code and Salt commands you are familiar with.

You are blocking any attempt to debug OMV and Salt interaction - and you demand perfectly polished PRs.
It is not consistent. And it is would not help anyone. Not me, not you, not OMV users.
",uncivil
4209,486,"WTF guys, you can't make built version of app? so to use it i need to download huge amounts of not needed data and applications? That not how the Linux works.


",uncivil
4210,365267898,"@polkovnikov-ph please feel free to create a new issue with well-stated problem. Your assumption about that it's self-descriptiveness is only _partially_ correct when you refer to several ppl you mentioned. Still, there are lots of other people who won't understand it. I myself try avoiding to assume that other people see and understand things exactly the same way as me, because every individual has their own unique experience. That said I encourage you to not make such assumptions here.
I'm locking this issue, since I don't see what can be done here to turn it into an effective conversation.

If you'd like to contribute into the issue resolution, I encourage you to file another issue with clear description of the problem. Thanks and have a nice day!
",uncivil
4211,717293362,"@duyanghao Calm down. I do not mind whose PR get merged. We are talking things technically, don't make it personal.
If you insist. I'd like to tell you that [we have already talked about this issue months ago](https://github.com/kubernetes/kubernetes/issues/87615#issuecomment-647915537).

I prefer forward-looking solution instead of solving questions at hand. That's why I have opposition to your PR.

I have every concern with cause and conclusion posted in you PR, that's technical.
You have disagreement but no reason. That's personal.

If you feel disrespect on ""nasty"", I apologize. I have neat freak on coding : )
And you should learn how to use Git with clear&clean commit history.


",uncivil
4212,547350906,"At some point you have to trust engine contributors to know what bugs are. You see symptoms, we see the underlying cause for them, and we tell you that these are both symptoms of the exact same bug.

A duplicate bug report is not a bad thing, it just confirms the bug with possibly slightly different steps to reproduce. It's pointless to keep two or 50 issues open about the same bug, so we close duplicates, usually keeping the oldest one open.
",uncivil
4213,567493374,"people who thumb down the santa have never received a present from him, naughty boys
",uncivil
4214,372383292,"@pathawks, why did you close this? It's not fixed and I'm not the one explicitely using Rouge. The maintainers of the project are using a dependency that is buggy, they should take care of this. What do you want me to do? I don't even know what Rouge is!
",uncivil
4215,541388527,"> #25327 does not fix this issue at all, animating the Sprite Frame property is still incredibly broken in 3.2 Alpha2 as described in the original post of this issue.

This is not broken, as I already explained this is the expected behavior. This is once again NOT a bug and it is up to you to now change the way you deal with your animations.
This should be doable via a script though, using the Animation API.
",uncivil
4216,735720829,"I can't believe it hasn't already been implemented, this is a must have feature.
",uncivil
4217,631057060,"@davidortinau this is less about a legal issue, but more or less about a name conflict.

... not sure if you expect us all to email you now, but please be prepared...
",uncivil
4218,384382663,"By not doing what the command line tools do, you are varying from the expected behavior and breaking convention. THIS IS WRONG.


Your belief that you're doing anyone a favor by varying from the expected command line tool behavior, you should turn in your commit per.issions and get a job in management where you don't have access to break things AGAIN.
",uncivil
4219,574552725,"Except, you don't have a good reason, if you would of worked with anyone in the community to figure things out before resorting to hacking things with a coremod then we would be having a different conversation.
But for now, locking this as i'm done arguing, and you've been given all the information you need to NOT ASM hack things and still achieve what you want.
",uncivil
4220,558797851,"> Atom is designed to run in an internet connected environment

Nobody's saying it shouldn't use the network.  It just shouldn't use the network *before the user has given it permission*, because otherwise it is a **data leak**.  That's *why the consent dialog exists*.

Very obviously this is a bug: the auto-update mechanism, which is itself a form of telemetry so long as it uses the network (transmitting to the manufacturer that the user has installed Atom), must be serialized to occur *only after* their consent (or lack thereof) to telemetry is indicated.  Doing it beforehand renders the telemetry opt-out entirely ineffective, as you *still end up sending telemetry* to the ""what version is current"" service, even when the user doesn't want it sent.

That seems to be a recurring issue, as well: #20185 elaborates on that.
",uncivil
4221,651963302,"> You're right that our userbase is a technical audience, which is why we expected them to be able to take the four seconds it takes to read the synthesized JSON, see the `""hidden"": false` that we stick in there, and think ""hmm, maybe that hides the profile

So what you're saying is that every time I upgrade or update any software made by you and yours I have to scour the documentation and support and config files for any new ""features"" and traps you may have placed in it?

How about ASKING THE USER? Did that ever cross your mind?  ""Hey, I've detected that you've made a change in the config. I'm about to undo all your work and confuse the hell out of you, Would you like me to continue?""


",uncivil
4222,362948182,"If anyone wants this, fork lerna and do it yourself. This conversation is over.
",uncivil
4223,619631237,"> Why you revoke Nexus 6?

I'll be brief: It's because of guys like you that this device is being revoked.

You - the person creating this issue @microsoftceo2 is shit btw - not widevine or the player, not even hiding the fact that you're using decryption keys illegally. Shame. It's because of people like you that real device owners and users can't use their devices as expected anymore.
Because suddenly an entire class of devices is being revoked.
",uncivil
4224,703174497,">
>
> I get it that the creators need money so it is their decision whatever they want to do.
>
> For the .net ecosystem it is a rather disastrous event. As a small company that has chosen IdentityServer because it is the ""official"" framework of choice, both according to Microsoft and the general community, you are now facing a lot of not needed and not wanted problems. Sure you can say, yes $1500 is not much in the business environment. But this is not true for all of them. For us it is a lot of money and also a lot of time that we have already invested. We now have to migrate to something different.
> In a healthy ecosystem, it should not happen that a pillar on which so many have built, changes the license so negatively.
>
> Yes, open source is not about ""free work"" but you clearly want to have a .net ecosystem with all the basic tools that keep steady and have a very open license. It would have been better if they did the license change back then when they converted IdentityServer to .net core.

@pollumi I agree with everything you said 💯 this is a pretty core function to the Microsoft Stack, had they done it right in the first place it would have never been issue today.

Also @Aaronontheweb is out of line with personal comments like that. What an idi0t, not ok, just because he dont agree with someone else view.

Why is this closed?!
",uncivil
4225,524578550,"> > We humans are opportunists. Any time a cost to us is >0 we will not like that cost and we'll complain about it.
>
> No, not all humans have this reaction. The reaction you are projecting on all humans infers that all humans are greedy, inconsiderate thieves.

Not letting your inner two year old rule you does not mean he is not present.  His complaints are predictable, and those who are voicing complaints from him are not needed.
",uncivil
4226,394628373,"@splincode That's absolutely does not interfere the sample. Code runs as it should. Do not distract me for this nonsense, please.

@Borzilov
> If you handle an HTTP-error and try to replace an observable constructor with a high-order observable (in the AuthService) you will find that ngOnInit-hook fires as usual.

That's exactly what I'm doing in the code. And `ngOnInit()` does not work.
",uncivil
4227,541410601,"I am **once again**, going to explain how the frame property works within the engine: you select a frame, which is numbered from left to right, then from top to bottom. So it **is expected** so that changing the number of column changes the ID of your frames. It's easy to understand, and without considering this texture resize problem, it does the job quite well.

> It is not expected by users as you can see here in this thread.

Sorry, but this issue did not receive enough upvotes to be significantly representative about how the feature should work.
But anyway, what users think is not what matters to define what is a bug or not. A bug happens when a software does not behave as expected from the programmer point of view, not the user one. The user might just have, like here apparently, misunderstood how the feature was designed and the implied advantages/flaws. So the only bug here is maybe about adding a warning to the documentation, but I don't really call that a bug.

> If you don't want to call it a bug, it's very bad design at the very least.

Yeah, in that case we can call it bad design. So for now this issue will not be opened again as this is not a bug, and you can now easily workaround it using the `frame_coords` feature. The update the ""frame"" animation to the ""frame_coord"" animation is another problem though, so if you face problem updating this should be another issue.

If you have a better design in mind, please open an issue on the [godot-proposal](https://github.com/godotengine/godot-proposals) repository.
",uncivil
4228,584772305,"@mikedn

> @briansull Care to explain why did you deleted my comment?

Because it was completely inappropriate. Telling other contributors to not comment because ""you have no clue what you're talking about"" is toxic behavior. OSS is also about building & nurturing a community and that also includes involving people who still learn and have passion for the subject. We're not just here to review, merge, and maintain *your* PRs and ideas. While your contributions are clearly valuable, you need to accept that you're part of a larger community and need to treat others with respect.

So to be clear: just because your contributions are valuable doesn't mean you get a pass on following our [Code of Conduct](https://dotnetfoundation.org/code-of-conduct).
",uncivil
4229,513466778,"> and being combative about that helps no one.

So _why are you_ being combative? Please check a mirror. Did you a) (only) respond to the issue, or did you b) choose to unnecessarily attack my experience? Not to mention that half of your first response was about something I had already covered in my initial post.

Also, I know the problem can be solved. So your point is? If a problem can be solved using ""obvious methods"" it does not have to be actually done (no need to report the issue))? Are you a mathematician? The theoretical solution is enough, ""I'll leave it to the reader to complete this trivial proof for themselves""?

",uncivil
4230,470449260,"@Petrouchka Be thankful. Microsoft uses the data to improve your calculating experience. :smile:
",uncivil
4231,392184648,"> People can't use my experiments

I think you underestimate how willing people are to try things, even when they're not fully polished. For example, someone could easily write a shell script that wraps `flutter run` to do the preprocessing first, then call `flutter run`. I have a script myself that wraps hot reload to do something similar (I run the analyzer first, then only if it passes do I send the hot reload signal to the `flutter` script).

> Can you be more specific timewise for when can we expect some movement on the build system changes

Not really (see e.g. <https://en.wikipedia.org/wiki/Forward-looking_statement> for why it might be difficult to make such statements), but probably not in the coming weeks.

> there is no need to change the Dart language

That's quite possible, indeed. I'm just saying that based on these experiments, we may reach any number of conclusions, all the way from ""do nothing"" to ""add radical new features to the language syntax"" and anything in between. The point being, we haven't made any decisions yet, and are very open to learning what needs to be done based on all these discussions and experiments.
",uncivil
4232,548287121,"> @CyrusNajmabadi I'd welcome your assistance in making up for Microsoft's negligence.

Teams prioritizing things different from you is not negligence.  There are millions of users and thousands of signals indicating what is valuable and important to actually address with the resources available.  This minor issue simply isn't one of those.  I can imagine you probably have to make similar decisions in your own work when deciding where to allocate your own resources.

> How about I send you my kudos once you fix this bug?

I am personally not interesting in contributing a PR here.  Primarily because i don't find the behavior particularly problematic, nor do i feel that the workaround is insufficient.

Still happy to help you out at any point if you change you mind.  The links to the channels still apply.   Cheers!
",uncivil
4233,631035738,"They even refer _themselves_ to Hawaii. Check https://github.com/dotnet/maui/commit/c7e2c55ace3ec55a0858f1c4bb55476375ea72f8, its commit message says, ""Aloha fix"".

I don't think they took into account either confusion with the ""Linux project"" *nor with the Hawaiian island*.

(By the way, is it seriously necessary to mention that when there's an obvious name conflict with some other free software project in the exactly same domain (UI toolkit)? Come on, get over this ""Linux vs. Windows"" mantra you still seem to follow.)

Edit: yes, this was half sarcasm, half serious comment. I think you can figure out which half's which.
",uncivil
4234,650169764,"Nice, the only notable contribution you've ever made anywhere on Github is making sure everyone at Google knows you're a racist.
",uncivil
4235,535890423,"https://github.com/udos86/ng-dynamic-forms/issues/253

LAWL EVEN PEOPLE IS ASKING FOR IT
thumbs down don't bother me, take some relief on your real life frustration and let them rain down 💯
",uncivil
4236,472520611,"Yes, *one* solution could be to have a fallback mechanism, *like* offering the ability to permanently remove a file. You say it's not gonna happen, very well. It was just a suggestion.

Electron does support gio, Atom does not. *Another* solution could be to support gio, since gvfs-trash has been deprecated for quite a long time on Fedora (for example).

One possible solution would be to have a configuration option to define the delete command. By default it could be `gvfs-trash`, and user could define it to `gio trash`. But it **requires** the error message to be explicit.

You assumed the most common error was because `gvfs-trash` was not installed. This thread is the proof it's no more the case. Please, update.
",uncivil
4237,567472234,"It's funny and sad at the same time that one selfish issue can cause loss of hundrets of man-days (people-days?) across globe.
",uncivil
4238,703266718,"We're done here and I'm locking the issue. Some of you were hopping over the line, some of you hopped over it, sprinted in the wrong direction and then threw things from 2.7 miles past the line.

In any case, this is not the venue to discuss Duende's pricing, what open source means, and whether Microsoft should produce everything and kill off the .NET open source ecosystem in the process. After all, one of the reasons we went with Identity Server in the first place was the community reaction to our suggestion we produced a simple authorization service, and the loud and clear message we shouldn't try to reinvent something that already had a good open source solution.

Once .NET 5 is done and dusted I'm sure we'll have senior msft folks come up with an appropriate venue for a wider discussion over some of the issues

I will remind all of you we have a [code of conduct](https://dotnetfoundation.org/about/code-of-conduct).
",uncivil
4239,584901186,"@drieseng
>  Could it be that it's rather a cultural difference?

I'm not sure what that difference might be. Nobody appreciates random/out of context quoting, straightforward answer avoidance, jumping to conclusions and whatnot. Well, some might be more tolerant to it than others but still.

> There's no doubt your contributions are greatly appreciated; this by both the MS maintainers and the community.

Well, I appreciate they're appreciated but at the same time I don't really care. I did not contribute to get praise, I only contributed for the fun of it. And it stops being fun if I have to deal with nonsense. If I want to deal with nonsense I can probably find that pretty easily at work, there's no need for me to come here and ruin my evening.

",uncivil
4240,396366158,"I would have loved to work with you, but since you were not willing to accept any recommendations, I am closing this and we will do any remaining work in https://github.com/saltstack/salt/pull/48058.
",uncivil
4241,272599215,"@phillip-haydon If you don't like it, don't use it!!! Why try and stop others from using it? and most importantly why do so with absolutely no information just flaming? sorry but show me, tell me why?

I have been using WCF on some major back end infrastructure since 2013 and have never had a problem.

I am currently refactoring/rewriting a lot of WCF code to use on Linux which will use what I have dubbed UCF (Universal Communications Foundation). So far it is working great and while it is not full WCF it does use the same structuring and tags.

So, if this way of doing things is so terrible tell me why, don't just talk smack. Facts, Proof, Scientific Method... I will even take an article written by some random guy who knows nothing but javascript written on Wikipedia, just show me something.

Many companies, both large and small, use WCF! The ability to run .NET Core on Linux is huge and is being widely adopted. The idea of write once run anywhere that took off with Java is now moving to .NET. This is in part because of the language offerings of .NET (F#, C#, VB, C++...). Another big factor is the way Oracle treats the open source community (very poorly as of late) and the fact that Microsoft is doing the exact opposite by opening code not closing it off. C# is also a huge draw as it is very popular with both novice and expert programmers which allows many companies to hire lower level developers.

I personally and I am sure many others agree, that having higher developers create consumable nearly foolproof services and feeding lower level developers the basics of how it works is both a time and money saver. The only real reason I can see anyone truly hating WCF and want to see it gone is that the either; don't have much experience with it, they are a senior developer that feels like creating positions for lower levels may cause job insecurity.

**I ask kindly post something informative and factual or just stop trolling.**
",uncivil
4242,470491721,"> This project collects usage data and sends it to Microsoft. Please stop collecting MY data and remove telemetry from all your f**g Windows products.

Just because a product is open-sourced doesn't mean you can go around making demands in this manner. Please try to keep your conversation to the point and polite, this benefits nobody.
",uncivil
4243,393353305,"@tom-adsfund
> @AlexDBlack Please look at this, because @raver119 is still angry I said C wasn't a good language.

Keep it professional or I won't hesitate to ban you from interacting with this repository.

Now, as for the question of FastText - that's an internal roadmap question and question of priorities. Deprecating W2V is a moot point until we have support for it. Even then, I don't see why we should deprecate something functional just because something better is around.
",uncivil
4244,490049915,"@wayheming
I didn't mean that but whatever floats your boat man. 🙃
",uncivil
4245,15858,"what's fuck google do? flutter is yours,golang is yours, why can't they live together?

The two team are in fight?

/////////////////////////////////////////
03-23 10:21:32.043 15289-15289/? I/art: Not late-enabling -Xcheck:jni (already on)
03-23 10:21:32.043 15289-15289/? W/art: Unexpected CPU variant for X86 using defaults: x86
03-23 10:21:32.187 15289-15289/com.example.blender I/InstantRun: starting instant run server: is main process

[ 03-23 10:21:32.286 15289:15289 D/         ]
HostConnection::get() New Host Connection established 0x9dad0100, tid 15289
03-23 10:21:32.375 15289-15289/com.example.blender D/EGL_emulation: eglCreateContext: 0x9bbfcf00: maj 3 min 0 rcv 3

[ 03-23 10:21:32.409 15289:15309 D/         ]
HostConnection::get() New Host Connection established 0xa051d4c0, tid 15309
03-23 10:21:32.454 15289-15312/com.example.blender I/flutter: Observatory listening on http://127.0.0.1:49074/
03-23 10:21:32.466 15289-15309/com.example.blender D/EGL_emulation: eglMakeCurrent: 0x9bbfcf00: ver 3 0 (tinfo 0xa0503760)
03-23 10:21:32.492 15289-15289/com.example.blender D/MainActivity: onCreate Thread id is 1
03-23 10:21:32.499 15289-15289/com.example.blender I/FlutterActivityDelegate: onResume setting current activity to this
03-23 10:21:32.503 15289-15314/com.example.blender D/onStartCommand: empty service
03-23 10:21:32.503 15289-15314/com.example.blender D/MyService: empty service     Thread id is 432
03-23 10:21:32.558 15289-15316/com.example.blender A/libc: Fatal signal 6 (SIGABRT), code -6 in tid 15316 (Thread-4)

[ 03-23 10:21:32.559  1293: 1293 W/         ]
debuggerd: handling request: pid=15289 uid=10084 gid=10084 tid=15316


",uncivil
4246,631035500,"That's because GitHub stars are not a currency in which you measure a project that is not even developed on GitHub.
",uncivil
4247,655447642,"This crap has gotten way out of control, give em an inch and they'll try to take a mile.  Enough is enough already, rather than people getting offended by a word that is not offensive in this context, grow some thicker skin and calm down.  I agree with @spock123 above, here the word Master is not a problematic word
",uncivil
4248,641251682,"**I REALLY DISAGREE WITH THIS PR**

I worry about the racial discrimination have happened in US from long time ago to recent as a human being, while I also insist to regard `blacklist, whitelist, blackbox testing, whitebox testing, master, slave, etc` to be neutral nouns in `IT area` as a software engineer. They just info to opposite or relevant methods in computer science without any emotion. The more one tries to hide, the more one is exposed.

My voice may seem to be sharp on this rename PR. Indeed, that shows my attitude about racial discrimination and mercy about people who suffer from brutality all around the world.   As a Chinese, we know the eval history of `Negro Slaves` and experienced `Literary Inquisition` about 400 years ago. We should show really action instead of showing shows.


",uncivil
4249,631048209,"@UriHerrera you can see my profile.. I am a member of the Xamarin developer community, I do not work for Microsoft. And if you don't like it nobody is forcing you to use it, use MauiKit if that's what you love, but developers who actually use this tech think you're being ridiculous.

> Microsoft's Maui has 21 issues. 10 issues bad, 21 issues good?

Maui was just created... and is a port of Xamarin.Forms so yeah you want to see what a real Open Source application framework looks like I suggest you start taking notes.

@TheAssassin - bro I am an Open Source author and maintainer so don't try lecturing me about being against ""off-putting towards the open-source community""
",uncivil
4250,234251144,"> Leave security, transactions, pub/sub up to the implementer...

This is the worst piece of advice anyone can give. Security should never be left to the implementer, it's the source of most atrocious security bugs ever ....  There are really few security experts or developers capable of implementing security details properly, this is a job for less than 1% of the programmers out there.

",uncivil
4251,518750671,"In fact, I'd suggest that the new keybindings are very ""new""-Microsoft.

> [Gnome Terminal](https://help.gnome.org/users/gnome-terminal/stable/txt-copy-paste.html) has a consistent keybinding that's not intuitive at first, but easy to adopt, and not too far from the usual <kbd>CTRL + C</kbd> for copy.
> <kbd>CTRL + C</kbd> : Cancel
> <kbd>CTRL + Shift + C</kbd> : Copy
> <kbd>CTRL + Shift + V</kbd> : Paste

This is the style of copy/paste keybindings for every other terminal on the planet, and the style we've chosen as the defaults. If you're unhappy with them, you're absolutely free to change them.
",uncivil
4252,660258018,"@jtiscione I understand you're upset and this rule is causing problems for you. At the same time, remember you're using open-source software. You're not paying for it and the maintainers of this tool don't owe you anything. You'll get farther along if you give yourself time to cool down before posting a complaint about OSS.

When you do post a complaint, you'll maximize your chances of getting what you want by avoiding incendiary language like ""absolutely unacceptable"", ""screaming"", ""atrocious"", ""carelessly"", and ""doesn't understand"". I've found that it helps to clearly describe the problem I'm encountering and propose some solutions or ask questions to understand the problem space better.

How you communicate establishes your own reputation, for better or worse!
",uncivil
4253,801529596,"> Can you file a separate issue for that? Disabling a diagnostic is expected to disable a diagnostic. 😄

There is already an issue for IDE0055 about it fighting vertical alignment (i.e. replacing tabs with spaces as I showed above). It's open for God knows for how long just like this one. I am not even going to mention the one I reported in .Net Environmet namespace two years ago.

Do you honestly believe that opening another issue will help? At this point I am discouraged to report more because nothing ever seems to get fixed (usually because ""it's complicated"").
",uncivil
4254,419672756,"> The problem with updating golang.org is if we add some new API for Go 1.12 (like strings.Builder) it would not be good if it showed up in the docs before most people were able to use it.

First off, I don't see how this could be an issue if you are having docs per version (docs for 1.11, docs for 1.12, and so on), and secondly, what is `strings.Builder` and do we really need it? Are we going to have `strings.Factory`, too? For a moment I thought go is finally taking a better route, but it makes me reconsider that thought.

On another note, yes, I agree with Rob here. Inconsistency has been a problem for go, it just seems like people come and write completely different and random examples to similar, related functions. That's not how it should be done. Apparently Rob had to assign it to himself, and tell others to stop posting examples for this reason. Thanks Rob, this chaotic madness needs to stop.

Go linters complain when exported variables or constants are not documented (despite them being obvious in many cases), yet when core developers make major changes to go, they keep the old documentation, and don't even bother making it up-to-date.

Excuse me for my tone, but it irks me a bit, anyways: thanks for putting an end to it, for the time being.
",uncivil
4255,567495091,"I also can't focus on my work since then, please let me be productive again
",uncivil
4256,620102287,"This is not Widevine.  This is an open source video player.  You can contact Widevine here to share your complaints: https://www.widevine.com/contact

However, this thread is both off-topic and against our [Code of Conduct](https://github.com/google/shaka-player/blob/master/CODE_OF_CONDUCT.md).

In case you haven't read it, here's a relevant snippet, with **bold** added for emphasis:

> ## Our Standards
>
> Examples of **behavior that contributes to creating a positive environment**
include:
>
> *   **Using welcoming and inclusive language**
> *   **Being respectful** of differing viewpoints and experiences
> *   Gracefully accepting constructive criticism
> *   Focusing on what is best for the community
> *   Showing empathy towards other community members
>
> Examples of **unacceptable behavior** by participants include:
>
> *   The use of sexualized language or imagery and unwelcome sexual attention or
>     advances
> *   **Trolling, insulting/derogatory comments, and personal or political attacks**
> *   Public or private harassment
> *   Publishing others' private information, such as a physical or electronic
>     address, without explicit permission
> *   **Other conduct which could reasonably be considered inappropriate in a
>     professional setting**

@spookyahell, please refrain from name-calling, even if you feel the OP was out of line.

@microsoftceo2, please do not post something like this again.  This is your warning.  You are welcome in this community if you will follow our [Code of Conduct](https://github.com/google/shaka-player/blob/master/CODE_OF_CONDUCT.md), and we would be happy to help you with any issues you may have with Shaka Player itself.  But if you violate our [Code of Conduct](https://github.com/google/shaka-player/blob/master/CODE_OF_CONDUCT.md) again, you will be permanently banned.

Thanks for listening, everyone!
",uncivil
4257,567444887,"I demand syntax highlighting be removed, as it reminds me of the other night when I puked out the three plates of ravioli I'd eaten. It is very offensive to me and instantly brings back memories of a very bad stomachache.

See this? That's how silly that was. We can't take people seriously just because they slap religion on something completely unrelated and pretend it's a serious issue.

That's offensive to **real** religious issues if anything. That's how real issues end up being taken as jokes.
",uncivil
4258,102,"If I sound harsh, it's because I am sick and tired of Microsoft releasing half-baked products that don't work as expected. Microsoft products are phenomenally bad and it's a wonder how you guys still stay in business. I would feel sorry for you guys like I would for the slow kid who klutzes around the basketball court, but this isn't your first time on the court with years of effort and tons of resources. I suspect your whiteboarding hiring technique is ineffective and counterproductive.

Now to the issue at hand.  When I try to uninstall unused dotnet core SDKs and Runtimes from my server through Add/Remove Programs, I get an error ""Windows cannot find ""c:\ProgramData\Package Cache\{blah blha}\dotnet-runtime-2.2.7-win-x86.exe"" Make sure you typed the name correctly, and then try again."" I've been trying to rebuild the cache using various tools, but they only work with using **InstallerFiles** directory. Why did you guys move the cheese? What's so special about installing .NET Core that it requires a different installation strategy?  I guess it's another poor decision built upon a legacy of other equally poor decisions, i.e. a vortex or blackhole of bad decision.

I tried to use your core-uninstall-tool but it was a complete failure.  Running the command with no arguments gave me an error ""Required command was not provided"".  Running it with the list command gave me another error ""The specified version is not valid: """".""  WTF?  If I sound hostile, it because I am kindly sharing the user hostility you're unleashing on developers trying to get work done.

Anyway, I figured I would try a hack. I downloaded the runtime again performed a repair.  It appeared to succeed, but when I tried to uninstall it from program and files, it complained that it couldn't find the package cache.  I reran the installer and selected uninstall and it mysteriously worked. Have you ever considered requiring hacks like these to get your horrible products to work only encourages hacking?  This is similar to your onerous, poorly conceived user authentication system in Windows, requiring IT personnel and end-users to just turn it off so they can get work done?

GET YOUR ACT TOGETHER MICROSOFT!!!!  Apple rose from the brink of bankruptcy and leapfrogged you guys because they cared about quality, simplicity and taste. It's why your own developers are using MacBook Pros for development.  Where's the shame?

",uncivil
4259,490047426,"@creotive

Dear creorive,

I would like to leave you some words, I do mean to end the discussion and not advance it.

There will be a Windows store entry for early adopters sometime this summer. And the release date is set for this Winter.

They advertised this for developers to thinker and contribute, not for anyone to just press a build file or use an installer.

By enabling the current barrier you ensure that the people who are using it have the skills to do so the right way. And therefore are able to contribute correctly.

If there was a simple build file or installer, I, an everyday Joe, will thinker with it and I may screw things up on my computer or make excessive issues on this GitHub. (I would say, one like this.)

So i am convinced that this is the perfect way to tease this product. Mind you that this is a release but not a Launch of the product. This is like an alpha, not representative of the final product and thus not finished.

Would you complain the same way if Valve gave away the source for HL3 but wont give you an installer? No, you should be happy with what you got.

If you are un-able to build this yourself or find it too much of a hassle, this product is probably not made for you. (Sorry)

But I doubt that since I could get this to work and I dont know what i am doing.

I hope this gives you a different perspective on the discussion.

-Jasper

PS: if you really want to have an easy way to install this, fork it, fix it, make a pull request and contribute.

PPS: Some people shouldn't act like a ass just because they think different. @wayheming @scottbilas @cjim8889
",uncivil
4260,548486188,"@ChainReactive wrote:
> Visual Studio is a commercial product with a dedicated team on staff at Microsoft. I'm not already familiar with Roslyn, nor do I have time to dive down that rabbit hole. The people who's job it is to improve Visual Studio's user experience would be better equipped to fix this.

I agree!  It's surprising to see that you (or I) were forced to say that explicitly, despite how obvious and self-explanatory it is.  It shouldn't be necessary for you or I to say that, but it was necessary, therefore it raises the question:  What on earth is going on here?   Something is wrong here.

Being an app developer (or likewise) is already a challenging, time-consuming, and exhausting job.  Thus it would be very unreasonable to expect app developers to do _even more_ work in the form of _unpaid_ casual side-jobs for various other projects such as Visual Studio etc, while simultaneously trying to perform their normal job.  Such a workload would learn to burn-out (a very significant mental health issue with serious effects).

It would be wildly unreasonable to expect app developers to sacrifice all of the following.

* Sacrifice mental health (re burn-out) as a consequence of excessive workload / unpaid side-jobs.
* Sacrifice the proper raising of own children (applicable to everyone that has children), because of excessive time and energy spent doing unpaid side-jobs, resulting in insufficient time/energy remaining to properly raise and take care of children.
* Sacrifice the relationship with partner/girlfriend/boyfriend/wife/husband.
* Sacrifice a healthy amount of social life with friends and relatives (this loss can also lead to degradation of mental health).
* Sacrifice relaxation/leisure time (insufficient leisure time also damages mental health).
* Sacrifice fair working conditions and remuneration for staff members of businesses.
* Sacrifice ethical behavior.

@CyrusNajmabadi wrote:
> ... I'm one of those people and have contributed as an external community member a large number of times. ...

Wow. If you wish to sacrifice yourself, then you have the right to do that -- that's your decision for your life.  However, it would be wildly unreasonable to expect @ChainReactive to sacrifice himself like you do.  My personal opinion is that your behavior appears to be unethical, inappropriate, and unprofessional, and it does not belong in any GitHub repository linked with Microsoft.

",uncivil
4261,46430,"This is a duplicate of the following issue:  [https://github.com/dash-/go/issues/1](https://github.com/dash-/go/issues/1)

---

I have temporarily forked Golang/Go and created this issue because the Golang overlords have stopped playing nice and they can no longer be trusted to host this conversation.

Regarding [Go Issue #33171](https://github.com/golang/go/issues/33171), I propose again there is a third option: compromise.

On July 18, 2019, Github user `phrounz` stood up against the ""Go convention and language's designers arguments” in the FAQ regarding the ternary conditional operator (""ternary operator""). The user stated specific examples where the ternary operator could improve readability. As of today, May 27, 2021 (the date the issue was locked as resolved and conversation limited), there were 105 thumbs up to this, and 107 thumbs against, with 5 frowny faces.  I personally suspect Google employees filled out the last of the 107 thumbs up and stopped after passing the 105 thumbs down, but that suspicion is admittedly groundless. (I'm sure I could investigate, it is accessible information, but I'm too lazy and just don't really care.)

Rather than hear reason or find compromise, the ""language's designers"" and their defenders (""the Golang overlords""/""the majority party"") planted themselves stubbornly against `phrounz` and the oncoming horde of software engineers forced into Golang projects by their corporate circumstances whose practical concern is just occasional convenience of the ternary operator in what is otherwise an ""I could take it or leave it"" programming language (""the minority party"").

Having seen 8 months of this debate upon my arrival to the issue on March 6, 2020, I offered a **compromise**, a **prediction**, and a **warning**. My words were met by defensiveness, ego, stubbornness, ignorance, and delusion.

The **compromise** I suggested was allowing the ternary operator to be enabled via configuration, even if it is off by default. That would have relieved the massive social tension that was building, and I believe it would have resolved the issue sufficiently for the minority party without totally sacrificing the values of the majority party, and thus manage to dispense the social energy without a social explosion. That is how a technology leader that understands people and how to resolve these kinds of issues masterfully handles these very delicate situations. The default of ""off"" is your win, which should be good enough for you. If you are truly right, it will remain off in the wild on average. If you are wrong, it will not remain off on average, because the world will decide you are wrong. I suspect, however, the world will just schism, and there will be about a fifty percent chance the option will be turned off no matter where you go (assuming the 105 thumbs up vs 107 thumbs down was legitimate and natural). These types of minor schisms happen all the time in software for precisely this reason, particularly in the realm of linting. You want that schism to occur out there in the wild, away from the language. Otherwise, the language will schism, and you will be forked, which was my **prediction**.

This brings me to the **warning**. I said, “It is a mistake to think that a language should be the product of a small number of architects that know better without a deep connection to those that are actually using the language.” I was surprised this was the only thing griesemer responded to, essentially saying he felt like I was wrong because the overlords talk amongst themselves and the majority party (my apologies if I’m mis-paraphrasing here). To which I would note that no, I mean really hearing all the signals coming in. By the time I arrived, the minority party was effectively muted. Starting a reply with “the conversation is already over” is not okay. You actually need to keep hearing our feedback, every one of us. We are that signal telling you something is wrong. Choosing to mute us rather than solve the underlying issue is like covering up screams with music, especially when the screams are not yours but you are the one causing the screams, and the one that can resolve the matter. In fact, you should be working to find the screams because it takes tons of effort for us to get the screams close to you. Most of the screams are so far away you’ve no hope of hearing them unless you really look. Try googling “hate golang” or “golang ternary hate” and really read the first forty or so results and really understand the loves and the frustrations and pain, and then realize that some of those people don’t want to have to use your language but they are basically forced into it because of their jobs that switched to Golang from something else and they got a “learn this or learn about your next employer” ultimatum. (This wasn’t me, btw. I learn new programming languages like other folks learn new songs. But I’ve read a lot of people’s feedback about Golang while investigating this issue.)

So yes, you should want to know about all of these people’s feedback, especially when it’s them screaming in paper cut agony. Choosing not to hear it because you disagree with it is a bad choice. It lacks empathy. Not only is empathy moral, but it actually helps us constantly make the smart choice by keeping us on the same side as society. Ignoring the minority party is going to hurt the minority party in the short term, but in the long term, the overlords are going to end up looking like the bad guy, and that’s going to hurt the overlords. **You can either choose to not hurt others because of empathy, or because you recognize that your lack of empathy will eventually lead others to conspire against you to your ruin, but either way, you should choose to not hurt others.** Which is actually a really nice way of restating my **warning**, even though it might look very different now that I have spent so many words describing it.

(And I feel like this warning applies so widely to Google vs Society in our modern times, may this serve as a warning from the microcosmic to the macrocosmic as well. Take heed, Google.)


Metaphorically, Golang is a lake built and run by Google, which is filled with paper-cut razors and signs welcoming us into the water. Enough people go that many others are swept along with them, and issue #33171 was serving as the complaint department where people would go to complain about the razors. And they continued to complain. And that took energy to deal with. And the overlords don’t love their energy being sucked into this issue, particularly because they incorrectly see it as a non-issue.

So today, May 27, 2021, after `vitalif` joined the conversation and delivered the final straw by pointing out yet another case where the ternary operator improved readability, Golang closed the complaint department by closing and locking issue #33171 as resolved. It is not.

Intentionally repeating myself here: Ignoring the minority party is going to hurt the folks screaming in the short term, but in the long term, you’re very much going to end up looking like the bad guy, and that’s going to hurt you. And Golang. And I very much feel justified saying this is incompetence by the Golang overlords.

Here’s why: There really is no right choice between the ternary conditional operator or not. If you google it or scour the scholarly databases of academia, there is certainly not statistically significant evidence suggesting a superior position within this schism. Hence, the reason for the existence of the schism. There’s a whole lot of opinions, and they vary widely and deeply. It’s like Vim vs Emacs all over again, except there really is no superior position here. (Vim is obviously superior, lol.)

What is evidence-based is the economics of the matter. The lack of a proper right or wrong naturally produces developers randomly on both sides of a schism (think statistical mechanics). That schism has existed since the ternary conditional operator was first introduced. But many languages (and most popular languages) now allow it, which is basically not taking a position in the matter. Those languages don’t require it’s use or disallow its alternatives. And individual projects can easily disallow its use if those in charge don’t want it. So despite the way it looks, most popular languages are actually quite agnostic about the ternary conditional operator. Golang made a different choice, I suspect because of a combination of ignorance and ego. Upon its conception, Golang decided to take a position in the already existing schism (despite no real evidence of a superior side), thereby coupling the language to the schism. It is a foregone conclusion that either Golang will defeat/survive the schism, or the schism will rip it in half (schisming it). It’s obvious to me that the overlords will lose here. They are up against at least anywhere near half of all their future users. They just don’t have enough social power to win that fight. It’s not clear to me that any organization of humans on earth is that powerful. Some kind of super dictator power might be sufficient, but software developers are practically wizards or lower deities in our modern society. I wouldn’t bet against half of them in literally any fight, except maybe against the other half, but in this case I promise the other half does not care enough.

No, if Google does not change its position and improve its behavior, market forces (demand) will eventually win.

My prediction in March 2020 came from my knowledge of economics, not computer science -- but it's just easy to see the incredible forces of demand on the one side, and the quite impressive stubbornness of the Golang overlords on the other. It doesn't take much to know that something is going to buckle with fairly significant energy.  But there is always a spark that causes the cascade. I am now predicting that today's event was that spark. Of course there is a chance to save it and prevent the fork by allowing the conversation to continue in a more fair environment outside of the Golang overlords' control. Perhaps the overlords won't even show up, in which case I do predict the fork is inevitable. But, perhaps an accord can be reached. I’m hopeful.

Finally, I now predict that if a compromise is not reached between the parties, the language will be forked and the new language will be called “De” (pronounced “Day”).  This is a play on words, similar to how Go is the first two letters of Google, but because many people are increasingly looking at Google like a Demon or Devil, the letters would be “De” instead. So it doubles as a diss against Google for behaving the way it is behaving.

",uncivil
4262,571821748,"@briansull Care to explain why did you deleted my comment?
",uncivil
4263,87391,"Issue Type: <b>Bug</b>

Get back the Santa icon you morons.  How much of a brain do you have to delete that icon as a result of hate speech of a single idiot?

VS Code version: Code 1.40.1 (8795a9889db74563ddd43eb0a897a2384129a619, 2019-11-13T16:49:35.976Z)
OS version: Windows_NT x64 10.0.18363


<!-- generated by issue reporter -->

",uncivil
4264,717271954,"> > 🤔 it looks a duplicate of #94844
>
> Not really, original solution proposed in #94844 uses a modified http2 package which breaks backward compatibility and is not merged into golang/net master.
> And he didn't push another fix till I proposed this fix.
>
> To be honest(no offense), code and commit history in #94844 looks nasty...

@povsister I don't know why you're so hysterical about which PR should be merged, and what I want to clarify here is that obviously I found this problem before you, and I have not even found the existence of golang/net@08b3837 until @fisherxu mentioned it in my PR, that why I push a new commit using http2.ConfigureTransports today and open this [PR](https://github.com/golang/net/pull/84) trying to fix the problem before. And besides I didn't have any reference on your PR as I have not even noticed you before.
",uncivil
4265,490026610,"@DavidDeSloovere if it not released yet, then where i got the link to this repo?
Im very polite as it possible with MS brand.

And also polite mean to make installation for users, and not throwing in their faces some code and say ""do whatever you want with it"". And really i don't see a problem to build executable installation, it's a task for few hours max for one dev.
",uncivil
4266,538557997,"> Even more puzzling to have these missing in the new one.

> Please don't do this. Ctrl+C already has meaning inside terminals that long outdates copy/paste.

This is a delightful vignette about why we have rebindable key actions, and why we don't want to be prescriptive with user experience where ""terminal input"" is concerned.
",uncivil
4267,524579080,"@sserdda-liamE Do you mind refraining from ad-hominem attacks? Calling people triggered whining two-year olds doesn't contribute to this discussion constructively.
",uncivil
4268,470505601,"How was I not respectful? I just asked a simple question. What isn't respectful is polluting the issue-catalog with useless rants, poorly hidden profanity and shouting. I am, however, done with this issue now.
",uncivil
4269,160072705,"Just want to support @MartinLion --- I am a scikit-learn newbie and have just have spent a frustrating time going thought the docs, and I can't find anywhere how to read my own data (and not a prepared toy dataset), and what the python format of data is.

",uncivil
4270,554522145,"Sorry to drag you into this buddy

I have OCD and I really want that typo fixed, now I know it’s there, it
annoys me LOL.

Here’s another argument, your CLA is against neurodiversity.

Finally I think I have a human right to have my anguish relieved since it’s
at no cost to the company at all.

But your masters are trying to put a leash on me and to that I say, over my
dead body!

On Sat, Nov 16, 2019 at 5:39 Krzysztof Woś <krzysztof.wos@gmail.com> wrote:

> Someone should start a GoFundMe campaign to pay for a lawyer who will
> challenge Google all the way to the Supreme Court, LOL
>
> This is unquestionable example of furthering of knowledge offered freely
> in good faith
>
> This cannot be prohibited
>
> #Singularity
>
> On Sat, Nov 16, 2019 at 5:33 Krzysztof Woś <krzysztof.wos@gmail.com>
> wrote:
>
>> Yes and I am fighting mine trying to live a life according to immutable
>> belief in better tomorrow.
>>
>> One can live a life earning less than the fabled Google salary but dream
>> of better internet where this sort of nonsense isn’t for a bunch of lawyers
>> to decide
>>
>> A man’s effort to further the way to build software is our birthright
>>
>> It’s the direct exercise of LOGOS, the Divine Word, the ability that God
>> himself bestowed on man: to transform chaos into order through an act of
>> speech
>>
>> In the beginning there was the word and the word was with God and the
>> word was God
>>
>> John:1, I believe
>>
>> Your CLA is preventing me from exercising my religious belief, a right
>> enshrined in your Constitution
>>
>> The world is full of nonsense because nobody makes a stand
>>
>> On Sat, Nov 16, 2019 at 5:18 Artem Vorotnikov <notifications@github.com>
>> wrote:
>>
>>> @krzysztofwos <https://github.com/krzysztofwos> IANAL but the typo fix
>>> is too trivial to be protected in the court of law. And even if it wasn't
>>> it's always possible to simply rephrase the sentence.
>>>
>>> Regarding the rest of your comment, I do not think it is reasonable to
>>> put a man's livelihood in a perilous position just to make a point. One
>>> must learn to pick his fights, so to speak. :)
>>>
>>> —
>>> You are receiving this because you were mentioned.
>>>
>>>
>>> Reply to this email directly, view it on GitHub
>>> <https://github.com/google/tarpc/pull/279?email_source=notifications&email_token=AAGCHBP3VXRD2PABQE5C4BTQT37Y7A5CNFSM4JNZ2EU2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEEGTBMQ#issuecomment-554512562>,
>>> or unsubscribe
>>> <https://github.com/notifications/unsubscribe-auth/AAGCHBJTTRPYEEIENCIJHWLQT37Y7ANCNFSM4JNZ2EUQ>
>>> .
>>>
>>

",uncivil
4271,805103797,"So no other editor exhibits this behaviour, no editor before 2015 exhibited this behaviour, people are here reporting it as a bug, but you're are suggesting that it fixed some problem endemic since the dawn of computing.  That's bemusing to me, but if you're happy with it, then lucky you.  For everyone else, it's tough, because they **can't turn it off if they choose to**.

I'm not suggesting the behaviour is changed with no way for any user to keep their preferred style (which is actually what happened in 2015), just that the user options behave as advertised.

The formatting applied from the beginning of the line to code statements _does_ follow the selected option - use spaces or tabs.
The formatting between code statements and comments does _not_ follow the selected option - it always uses spaces.
It appears that the user option is ignored in this specific location.  The location and 'tabulation' of the formatting is fine, just the characters used.

It is, lets say, disappointing that it sounds like Microsoft can't maintain it's code because it is too complex.  If you just told me that this shouldn't be addressed because I was a nobody and my opinion wasn't important, I'd be annoyed, certainly, but overall less concerned.
",uncivil
4272,470460624,"Yes, that's what I'm doing since 2000. Just hoping Microsoft will not put backdoor, telemetry, obfuscation and all its shit in all Github projects, like others did in SourceForge.
Use https://about.gitlab.com, https://framagit.org...
",uncivil
4273,513976107,"bitch needs a slap
",uncivil
4274,598827683,"**Dschau**, thank you very much for answer. You are the best, and thank you thank you thank you thank you thank you!

But sorry, it's bullshit solution.

If I want to display specific script (in my case - it's Yandex Ads, like Google Adsense alternative from Russia) in MDX-posts (or markdown files), then I should create a custom script components with specific attributes. It's very hard and not convenient.

Maybe Gatsby team can create plugin to render custom scripts into MDX or markdown files? I want to display Yandex Ads, Amazon Ads, Yahoo Ads or something else. And each time I should create hard components? WTF?
",uncivil
